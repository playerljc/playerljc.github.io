(self.webpackChunk_ctsj_build=self.webpackChunk_ctsj_build||[]).push([[8465],{816426:function(e,t){"use strict";t.Z={Header:"Tu41JpeK_1gcx8NO5KYU",Footer:"VkQAN16U0LduDaup1M92"}},600485:function(e,t,n){"use strict";var r=n(690171),a=n(609613),l=n(355360),i=n(458860),s=function(){return(s=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},d=function(e,t){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var r=0,a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]]);return n},o=function(e){var t=e.className,n=e.style,a=e.children;return r.createElement("div",{className:"".concat("adhere-ui-delconfirm"," ").concat(null!=t?t:""),style:null!=n?n:{},onClick:function(t){t.stopPropagation(),e.children,t=d(e,["children"]),o.open(s({},t))}},a)};o.open=function(e){var t=e.success;e=d(e,["success"]);a.Z.Confirm(s(s({},e),{title:e.title||l.ZP.v("提示"),text:e.text||"".concat(l.ZP.v("确定删除吗"),"?"),zIndex:"zIndex"in e?e.zIndex:i.Z.Dict.value.ResourceNormalMaxZIndex.value,onSuccess:function(){return new Promise((function(e,n){t?t().then((function(){return e()})).catch((function(){return n()})):e()}))}}))},t.Z=o},639087:function(e,t,n){"use strict";var r=n(600485);t.Z=r.Z},413719:function(e,t,n){"use strict";var r=n(30811),a=n(458860),l="adhere-ui-globalindicator",i=a.Z.Dict.value.ResourceNormalMaxZIndex.value,s=new Set;t.Z={show:function(e,t,n,a){void 0===e&&(e=document.body),void 0===t&&(t=""),void 0===n&&(n=i),void 0===a&&(a="default");var d=(t=((d=document.createElement("div")).innerHTML='\n      <div class="'.concat(l,'" style="z-index: ').concat(n||i,'">\n       <span class="').concat(l,'-dot"></span>\n       ').concat(t&&'<div class="'.concat(l,'-text">').concat(t,"</div>"),"\n      </div>"),d.firstElementChild)).querySelector(".".concat(l,"-dot")),o=(a=new Map([["small",.1],["default",.2],["large",.3]]).get(a),document.documentElement.style.getPropertyValue("--adhere-color-primary"));return new r.$({lines:4,length:0,width:52,radius:29,scale:a,corners:1,speed:2.1,rotate:19,animation:"spinner-line-fade-quick",direction:1,color:o,fadeColor:"transparent",top:"46%",left:"50%",shadow:"0 0 1px transparent",zIndex:n,className:"".concat(l,"-spinner"),position:"absolute"}).spin(d),e===document.body&&(t.style.position="fixed"),e.appendChild(t),s.add(t),t},hide:function(e){var t,n;if(e)try{null!=(n=null==(t=null==e?void 0:e.parentElement)?void 0:t.removeChild)&&n.call(t,e),s.delete(e)}catch(e){}},hideAll:function(){Array.from(s.values()).forEach((function(e){var t,n;try{null!=(n=null==(t=null==e?void 0:e.parentElement)?void 0:t.removeChild)&&n.call(t,e)}catch(e){}})),s.clear()}}},757956:function(e,t,n){"use strict";var r=n(413719);t.Z=r.Z},17177:function(e,t,n){"use strict";var r=n(244724);t.Z={openWarnMessage:r.s,openWarnDialog:r.t}},244724:function(e,t,n){"use strict";n.d(t,{s:function(){return d},t:function(){return s}});var r=n(983754),a=n(765236),l=n(355360),i=function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},s=function(e){return a.Z.warning(i({title:l.ZP.v("提示"),mask:!1,maskClosable:!0},null!=e?e:{}))},d=function(e,t,n){return r.ZP.warning(e,t,n)}},778324:function(e,t,n){"use strict";var r,a,l=n(716830),i=n(757956),s=n(460467),d=n(355360),o=function(){return(o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},c=function(e,t){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var r=0,a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]]);return n},u=function(e,t,n){if(n||2===arguments.length)for(var r,a=0,l=t.length;a<l;a++)!r&&a in t||((r=r||Array.prototype.slice.call(t,0,a))[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))},m=!1,p=300,h=function(){function e(e,t,n){this.baseURL=e||"",this.systemManagerBaseURL=t||"",this.config=null!=n?n:{}}return e.prototype.get=function(e){var t=this,n=(e.data,c(e,["data"])),r={};e=new Promise((function(e,a){(e=(r=f.call(t,o(o(o(o({},g.call(t)),t.config),{method:"get"}),n),{resolve:e,reject:a})).xhr)&&e.send(null)}));return o(o({},r),{promise:e})},e.prototype.post=function(e){return E.call(this,"post",e)},e.prototype.path=function(e){return E.call(this,"path",e)},e.prototype.put=function(e){return E.call(this,"put",e)},e.prototype.delete=function(e){return E.call(this,"delete",e)},e.TIMEOUT=1e6,e.STATUS_SUCCESS_CODES=[200,201,202,203,204,205,206,207,208,226],e.STATUS_REDIRECT_CODES=[300,301,302,303,304,305,306,307,308],e.READY_STATE_UNSENT=0,e.READY_STATE_OPENED=1,e.READY_STATE_HEADERS_RECEIVED=2,e.READY_STATE_LOADING=3,e.READY_STATE_DONE=4,e.CONTENT_TYPE_APPLICATION_JSON="application/json",e.CONTENT_TYPE_MULTIPART_FORM_DATA="multipart/form-data",e.CONTENT_TYPE_APPLICATION_X_WWW_FORM_URLENCODED="application/x-www-form-urlencoded",e.CONTENT_TYPE_TEXT_XML="text/xml",e.CONTENT_TYPE_APPLICATION_XML="application/xml",e.CONTENT_TYPE_TEXT_PLAIN="text/plain",e}();function b(e,t){r&&(clearTimeout(r),r=null),r=setTimeout((function(){l.Z.error({message:e,description:t})}),p)}function y(e,t){a&&(clearTimeout(a),a=null),a=setTimeout((function(){l.Z.warning({message:e,description:t})}),p)}function g(){var e=this;return{timeout:h.TIMEOUT,withCredentials:!0,onLoad:function(){},onLoadsStart:function(){},onLoadend:function(){},onProgress:function(){},onTimeout:function(){y(d.ZP.v("提示"),d.ZP.v("请求超时"))},onAbort:function(){y(d.ZP.v("提示"),d.ZP.v("请求终止"))},onError:function(){b(d.ZP.v("提示"),d.ZP.v("请求发生错误"))},interceptor:function(t){switch(t.status){case 401:C.call(e);break;case 402:w.call(e);break;default:b(d.ZP.v("提示"),d.ZP.v("已提出请求，但未收到任何回复"))}},mock:!1,loading:{show:!1,text:"",el:document.body},onBeforeResponse:function(){},dataKey:"data",messageKey:"message",codeKey:"code",codeSuccess:200,showWarn:!0,responseType:""}}function v(e){var t=e.show,n=e.data,r=e.indicator;e=e.xhr;return o({xhr:e,data:n},t?{hideIndicator:function(){return i.Z.hide(r)}}:{})}function S(e){var t,n,r=e.xhr,a=e.interceptor,l=(s=e.loading).show,s=s.indicator,o=(m=e.business).messageKey,c=m.codeKey,u=m.codeSuccess,m=m.showWarn,p=e.resolve;e=e.reject;r.readyState===h.READY_STATE_DONE&&(200<=r.status&&r.status<300||304===r.status?-1!==(t=r.getResponseHeader("Content-type")).indexOf(h.CONTENT_TYPE_APPLICATION_JSON)?(n=JSON.parse(r.responseText),m&&c in n&&n[c]!==u&&y(d.ZP.v("提示"),n[o]),p(v({show:l,data:n,indicator:s,xhr:r}))):[h.CONTENT_TYPE_TEXT_XML,h.CONTENT_TYPE_TEXT_XML].includes(t)?p(v({show:l,data:r.responseXML,indicator:s,xhr:r})):p(v({show:l,data:r.response,indicator:s,xhr:r})):(a({status:r.status,statusText:r.statusText,response:r.response,responseText:r.responseText}),e({status:r.status,statusText:r.statusText,response:r.response,responseText:r.responseText}),l&&s&&i.Z.hide(s)))}function T(e){return e&&"form"in e&&"data"in e&&!s.Z.isEmpty(e.form)&&!s.Z.isEmpty(e.data)&&e.form instanceof HTMLFormElement}function f(e,t){var n,r=e.method,a=e.path,l=e.headers,o=e.data,u=e.mock,m=e.loading,p=void 0===(p=(e.onBeforeResponse,e.dataKey))?"data":p,b=void 0===(b=e.messageKey)?"message":b,y=void 0===(y=e.codeKey)?"code":y,v=void 0===(v=e.codeSuccess)?200:v,f=void 0===(f=e.showWarn)||f,x=(e=c(e,["method","path","headers","data","mock","loading","onBeforeResponse","dataKey","messageKey","codeKey","codeSuccess","showWarn"]),t.resolve),E=(t=t.reject,"".concat(d.ZP.v("加载中"),"...")),C=void 0!==(w=m.show)&&w,w=m.text;m=void 0===(m=m.el)?document.body:m;if(C&&(n=i.Z.show(m||document.body,(void 0===w?E:w)||E)),u)return setTimeout((function(){x(C?{data:a,hideIndicator:function(){i.Z.hide(n)}}:a)}),200),{xhr:null,contentType:""};m=this.baseURL,w=this.config,u=(E=Object.assign(g.call(this),w,e)).timeout,w=E.withCredentials,e=E.responseType;var D=E.interceptor,I=(E=c(E,["timeout","withCredentials","responseType","interceptor"]),new XMLHttpRequest);I.open(r,"".concat(m,"/").concat(a),!0),I.timeout=u,I.withCredentials=w,I.responseType=e||"",m="";if(!s.Z.isEmpty(l)&&s.Z.isObject(l))for(var N in"Content-Type"in l||T(o)||(l["Content-Type"]="".concat(h.CONTENT_TYPE_APPLICATION_JSON,";charset=utf-8")),m=null!=(u=l["Content-Type"])?u:"",l)I.setRequestHeader(N,l[N]);else!s.Z.isEmpty(o)&&s.Z.isRef(o)&&"get"!==r&&(T(o)?m=h.CONTENT_TYPE_MULTIPART_FORM_DATA:(m="".concat(h.CONTENT_TYPE_APPLICATION_JSON,";charset=utf-8"),I.setRequestHeader("Content-Type","".concat(h.CONTENT_TYPE_APPLICATION_JSON,";charset=utf-8"))));return function(e){var t=e.xhr,n=e.events,r=e.reject,a=n.onTimeout,l=(e=n.onLoadsStart,n.onProgress),i=n.onAbort,s=n.onError,d=n.onLoad;n=n.onLoadend,a&&t.addEventListener("timeout",(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];a.apply(void 0,null!=e?e:{}),r.apply(void 0,null!=e?e:{})})),i&&t.addEventListener("abort",(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];i.apply(void 0,null!=e?e:{}),r.apply(void 0,null!=e?e:{})})),s&&t.addEventListener("error",(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];s.apply(void 0,null!=e?e:{}),r.apply(void 0,null!=e?e:{})})),e&&t.addEventListener("loadstart",e),l&&t.addEventListener("progress",l),d&&t.addEventListener("load",d),n&&t.addEventListener("loadend",n)}({xhr:I,events:E,reject:t}),I.onreadystatechange=S.bind(this,{xhr:I,interceptor:D,loading:{show:C,indicator:n},business:{dataKey:p,messageKey:b,codeKey:y,codeSuccess:v,showWarn:f},resolve:x,reject:t}),{xhr:I,contentType:m}}function x(e){var t,n=e.data,r=void 0===(r=e.contentType)?"":r;e=e.customSendJSONStringify;if(r.startsWith(h.CONTENT_TYPE_APPLICATION_JSON)&&s.Z.isRef(n))return e?JSON.stringify(n,e):JSON.stringify(n);if(r.startsWith(h.CONTENT_TYPE_APPLICATION_X_WWW_FORM_URLENCODED)&&s.Z.isObject(n))return Array.from(Object.keys(n)).map((function(e){return"".concat(e,"=").concat(encodeURIComponent(n[e]))})).join("&");if(s.Z.isObject(n)&&T(n))return t=new FormData(n.form),Array.from(Object.keys(n.data)).forEach((function(e){var r=a=n.data[e],a=(a instanceof Function&&(r=a()),[e]);a=Array.isArray(r)?u(u([],a,!0),r,!0):u(u([],a,!0),[r],!1);t.append.apply(t,a)})),t;if(r.startsWith(h.CONTENT_TYPE_TEXT_PLAIN)){if(s.Z.isString(n))return n;if(s.Z.isObject(n))return e?JSON.stringify(n,e):JSON.stringify(n)}return null==(r=null==n?void 0:n.toString)?void 0:r.call(n)}function E(e,t){var n=this,r={},a=new Promise((function(a,l){a=(r=f.call(n,o(o(o(o({},g.call(n)),n.config),{method:e}),t),{resolve:a,reject:l})).xhr,l=r.contentType,a&&a.send(x.call(n,{data:t.data,contentType:l,customSendJSONStringify:t.customSendJSONStringify}))}));return o(o({},r),{promise:a})}function C(){if("undefined"!=typeof window){if(window.top&&window.top!==window&&window.top.postMessage("http_status_401","*"),m)return!1;window.location.href=s.Z.casUrl({baseUrl:this.systemManagerBaseURL,enterUrl:window.location.href})}}function w(){if(m=!0,"undefined"!=typeof window)return window.parent&&window.parent!==window?(window.parent.postMessage("http_status_402","*"),!1):void(window.location.href=s.Z.casLogoutUrl({baseUrl:this.systemManagerBaseURL,enterUrl:window.location.href,params:"&code=402"}))}t.Z=h},591131:function(e,t,n){"use strict";var r=n(778324);t.Z=r.Z},985677:function(e,t,n){"use strict";n(690171);var r=n(875831);class a extends r.Z{getColumns(){return super.getColumns().map((e=>({...e,$resizable:!0})))}}t.Z=a},199550:function(e,t,n){"use strict";var r=n(690171),a=n(875831),l=n(816426);class i extends a.Z{renderSearchHeader(){return r.createElement("div",{className:l.Z.Header},r.createElement("h3",null,"查询表格"),r.createElement("div",null,this.renderColumnSetting()))}}t.Z=i},842045:function(e,t,n){"use strict";var r=n(390242),a=n(793055),l=n(487861),i=n(690171),s=n(726890),d=n(965989),o=n(784506);n(527637);const{SearchTableStateImplementFactory:c,ProEditableCellSearchStateTable:u,OptionsWrap:m}=l.default,p="user";class h extends u{getComponentId(){return"EditableCellRenderTriggerStateSearchTable"}getServiceName(){return p}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>i.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入姓名"}],renderToEditTrigger:()=>i.createElement(s.Z,null),renderSaveTrigger:()=>i.createElement(d.Z,null),renderCancelTrigger:()=>i.createElement(o.Z,null),onSave:e=>{let{value:t,record:n,dataIndex:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:n,dataIndex:r,value:t}).then((()=>e()))}))}},$resizable:!0},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>a.Z.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"select",visible:!0,dictName:"SystemTestSexSelect"},$editable:{editable:!0,type:"select",dictName:"SystemTestSexSelect",rules:[{required:!0,message:"请选择"}],renderToEditTrigger:()=>i.createElement(s.Z,null),renderSaveTrigger:()=>i.createElement(d.Z,null),renderCancelTrigger:()=>i.createElement(o.Z,null),onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>i.createElement(r.Z.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"},$editable:{editable:!0,type:"datePicker",rules:[{required:!0,message:"请选择"}],renderToEditTrigger:()=>i.createElement(s.Z,null),renderSaveTrigger:()=>i.createElement(d.Z,null),renderCancelTrigger:()=>i.createElement(o.Z,null),onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDateData({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入身高"}],renderToEditTrigger:()=>i.createElement(s.Z,null),renderSaveTrigger:()=>i.createElement(d.Z,null),renderCancelTrigger:()=>i.createElement(o.Z,null),onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入体重"}],renderToEditTrigger:()=>i.createElement(s.Z,null),renderSaveTrigger:()=>i.createElement(d.Z,null),renderCancelTrigger:()=>i.createElement(o.Z,null),onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入籍贯"}],renderToEditTrigger:()=>i.createElement(s.Z,null),renderSaveTrigger:()=>i.createElement(d.Z,null),renderCancelTrigger:()=>i.createElement(o.Z,null),onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入居住地"}],renderToEditTrigger:()=>i.createElement(s.Z,null),renderSaveTrigger:()=>i.createElement(d.Z,null),renderCancelTrigger:()=>i.createElement(o.Z,null),onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}}])}}h.propTypes={};const b=c({serviceNames:[p],middleWares:[],reducer:null,models:function(){const e=[],t=n(717435);return t.keys().forEach((n=>{const r=t(n);e.push(r.default())})),e}()})(h);t.Z=b},544163:function(e,t,n){"use strict";var r=n(627217),a=n(390242),l=n(793055),i=n(487861),s=n(690171);n(527637);const{SearchTableStateImplementFactory:d,ProEditableCellSearchStateTable:o,OptionsWrap:c}=i.default,u="user";class m extends o{getComponentId(){return"EditableCellStateSearchTable"}getServiceName(){return u}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>s.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入姓名"}],onSave:e=>{let{value:t,record:n,dataIndex:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:n,dataIndex:r,value:t}).then((()=>e()))}))}},$resizable:!0},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>l.Z.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"select",visible:!0,dictName:"SystemTestSexSelect"},$editable:{editable:!0,type:"select",dictName:"SystemTestSexSelect",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>s.createElement(a.Z.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"},$editable:{editable:!0,type:"datePicker",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDateData({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入身高"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入体重"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入籍贯"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入居住地"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"操作",dataIndex:this.getOptionsColumnDataIndex(),key:this.getOptionsColumnDataIndex(),width:260,render:(e,t)=>s.createElement(c,{style:{justifyContent:"center"}},this.renderOptionColumn([{key:"view",value:s.createElement("a",null,"查看")},{key:"delete",value:s.createElement(r.Z,{success:()=>Promise.resolve().then((()=>{this.fetchData()}))},s.createElement("a",null,"删除"))}],{value:e,record:t}))}])}}m.propTypes={};const p=d({serviceNames:[u],middleWares:[],reducer:null,models:function(){const e=[],t=n(717435);return t.keys().forEach((n=>{const r=t(n);e.push(r.default())})),e}()})(m);t.Z=p},193238:function(e,t,n){"use strict";var r=n(390242),a=n(793055),l=n(487861),i=n(690171);n(527637);const{SearchTableStateImplementFactory:s,ProEditableCellSearchStateTable:d}=l.default,o="user";class c extends d{getComponentId(){return"EditableCellUseKeepEditStateSearchTable"}getServiceName(){return o}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>i.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入姓名"}],useKeepEdit:!0,props:{onBlur:(e,t)=>{let{updateEditorCellData:n}=t;n()}}},$resizable:!0},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>a.Z.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"select",visible:!0,dictName:"SystemTestSexSelect"},$editable:{editable:!0,type:"select",dictName:"SystemTestSexSelect",rules:[{required:!0,message:"请选择"}],useKeepEdit:!0,props:{onChange:(e,t)=>{let{updateEditorCellData:n}=t;n()}}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>i.createElement(r.Z.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"},$editable:{editable:!0,type:"datePicker",rules:[{required:!0,message:"请选择"}],useKeepEdit:!0,props:{onChange:(e,t)=>{let{updateEditorCellData:n}=t;n()}}}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入身高"}],useKeepEdit:!0,props:{onBlur:(e,t)=>{let{updateEditorCellData:n}=t;n()}}}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入体重"}],useKeepEdit:!0,props:{onBlur:(e,t)=>{let{updateEditorCellData:n}=t;n()}}}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入籍贯"}],useKeepEdit:!0,props:{onBlur:(e,t)=>{let{updateEditorCellData:n}=t;n()}}}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入居住地"}],useKeepEdit:!0,props:{onBlur:(e,t)=>{let{updateEditorCellData:n}=t;n()}}}}])}}c.propTypes={};const u=s({serviceNames:[o],middleWares:[],reducer:null,models:function(){const e=[],t=n(717435);return t.keys().forEach((n=>{const r=t(n);e.push(r.default())})),e}()})(c);t.Z=u},77041:function(e,t,n){"use strict";n(690171);var r=n(213556),a=n(875831);class l extends a.Z{fetchDataExecute(e){return new Promise((e=>{this.setState({loading:!0},(()=>{setTimeout((()=>{this.request.get({mock:!0,path:r.i.data}).promise.then((t=>{this.setState({dataSource:{total:t.total,list:t.list},loading:!1},(()=>{e()}))}))}),2e3)}))}))}}t.Z=l},678375:function(e,t,n){"use strict";var r=n(5254),a=n(690171),l=n(875831),i=n(816426);class s extends l.Z{renderSearchHeader(){return a.createElement("div",{className:i.Z.Header},a.createElement("h3",null,"查询表格"),a.createElement("div",null,a.createElement(r.ZP,{type:"primary"},"新建")))}renderSearchFooter(){return a.createElement("div",{className:i.Z.Footer},"renderTableFooter")}}t.Z=s},448186:function(e,t,n){"use strict";n.r(t);var r=n(991098),a=n(892936),l=n(690171),i=n(296032),s=n(985677),d=n(199550),o=n(842045),c=n(544163),u=n(193238),m=n(77041),p=n(678375),h=n(827584),b=n(650066),y=n(138806),g=n(999707),v=n(881303),S=n(588039),T=n(423478),f=n(875831),x=n(537502),E=n(556508);t.default=()=>{const[e,t]=(0,l.useState)(!1),[n,C]=(0,l.useState)(!1),[w,D]=(0,l.useState)(!1),[I,N]=(0,l.useState)(!1),[O,P]=(0,l.useState)(!1);return l.createElement(i.ZP,null,l.createElement(i.$0,{title:"SearchTable"},l.createElement("p",null,"一种查询表格的通用模式(如果 UI 没有明确给出查询表格的 UI，就可以用这个默认模式)")),l.createElement(i.e0,{title:"代码演示",columnCount:1,config:[{id:"p1",name:"基本使用",mode:"code",scope:{React:l},cardProps:{description:{title:"基本使用",info:"基本使用"}},codeText:"\n                import React from 'react';\n\n                import Table from './table';\n\n                <Table isShowExpandSearch defaultExpandSearchCollapse={false} />\n                    ",type:"PlayGround",renderChildren:()=>l.createElement(f.Z,{isShowExpandSearch:!0,defaultExpandSearchCollapse:!1})},{id:"p2",name:"表格体可以滚动",mode:"code",scope:{React:l},cardProps:{description:{title:"表格体可以滚动",info:"表格体可以滚动"}},codeText:"\n                import React from 'react';\n\n                import Table from './table';\n\n                <div style={{ display: 'flex', height: 400 }}>\n                  <Table\n                    style={{ height: '100%' }}\n                    isShowExpandSearch\n                    defaultExpandSearchCollapse={false}\n                    autoFixed\n                  />\n                </div>\n                    ",type:"PlayGround",renderChildren:()=>l.createElement(l.Fragment,null,l.createElement(a.Z,{checkedChildren:"分页",checked:e,onChange:()=>{t(!e)}}),l.createElement(r.Z,{direction:"vertical"}),l.createElement("div",{style:{display:"flex",height:400}},l.createElement(f.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,autoFixed:!0,pagination:e})))},{id:"p3",name:"固定列头",mode:"code",scope:{React:l},cardProps:{description:{title:"固定列头",info:"固定列头"}},codeText:"\n                import React from 'react';\n\n                import Table from './table';\n\n                <div style={{ display: 'flex', height: 700 }}>\n                  <Table\n                    style={{ height: '100%' }}\n                    isShowExpandSearch\n                    defaultExpandSearchCollapse={false}\n                    fixedHeaderAutoTable\n                  />\n                </div>\n                    ",type:"PlayGround",renderChildren:()=>l.createElement(l.Fragment,null,l.createElement(a.Z,{checkedChildren:"分页",checked:n,onChange:()=>{C(!n)}}),l.createElement(r.Z,{direction:"vertical"}),l.createElement("div",{style:{display:"flex",height:700}},l.createElement(f.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,pagination:n})))},{id:"p4",name:"列表两端的渲染",cardProps:{description:{title:"列表两端的渲染",info:"列表两端的渲染"}},config:[{title:"fixedTableSpaceBetweenTable.jsx",mode:"code",scope:{React:l},codeText:"\n                import React from 'react';\n                import { Button } from 'antd';\n\n                import Table from './table';\n\n                import styles from './fixedTableSpaceBetweenTable.less';\n\n                /!**\n                 * FixedTableSpaceBetweenTable\n                 * @classdesc\n                 *!/\n                class FixedTableSpaceBetweenTable extends Table {\n                  renderTableHeader() {\n                    return (\n                      <div className={styles.Header}>\n                        <h3>查询表格</h3>\n                        <div>\n                          <Button type=\"primary\">新建</Button>\n                        </div>\n                      </div>\n                    );\n                  }\n\n                  renderTableFooter() {\n                    return <div className={styles.Footer}>renderTableFooter</div>;\n                  }\n                }\n\n                export default FixedTableSpaceBetweenTable;\n                          "},{title:"fixedTableSpaceBetweenTable.less",mode:"code",scope:{React:l},codeText:"\n                .Header {\n                  display: flex;\n                  align-items: center;\n                  justify-content: space-between;\n                  padding: 0 20px;\n                  background-color: #fff;\n                }\n\n                .Footer {\n                  padding: 0 20px 20px 20px;\n                  font-size: 16px;\n                  text-align: center;\n                  background-color: #fff;\n                }\n                          "},{title:"index.jsx",mode:"code",scope:{React:l},codeText:"\n                import React from 'react';\n                import FixedTableSpaceBetweenTable from './fixedTableSpaceBetweenTable';\n\n                <div style={{ display: 'flex', height: 800 }}>\n                  <FixedTableSpaceBetweenTable\n                    style={{ height: '100%' }}\n                    isShowExpandSearch\n                    defaultExpandSearchCollapse={false}\n                    fixedHeaderAutoTable\n                  />\n                </div>\n                          "}],type:"PlayGroundMulit",renderChildren:()=>l.createElement(l.Fragment,null,l.createElement(a.Z,{checkedChildren:"分页",checked:w,onChange:()=>{D(!w)}}),l.createElement(r.Z,{direction:"vertical"}),l.createElement("div",{style:{display:"flex",height:800}},l.createElement(p.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,pagination:w})))},{id:"p5",name:"分页始终居底",cardProps:{description:{title:"分页始终居底",info:"分页始终居底"}},config:[{title:"fewTable.jsx",mode:"code",scope:{React:l},codeText:"\n                import React from 'react';\n\n                import Table from './table';\n                import { oneData } from './mock';\n\n                /!**\n                 * FewTable\n                 * @classdesc\n                 *!/\n                class FewTable extends Table {\n                  fetchDataExecute(searchParams) {\n                    return new Promise((resolve) => {\n                      this.setState(\n                        {\n                          loading: true,\n                        },\n                        () => {\n                          setTimeout(() => {\n                            this.request\n                              .get({\n                                mock: true,\n                                path: oneData.data,\n                              })\n                              .then((result) => {\n                                this.setState(\n                                  {\n                                    dataSource: {\n                                      total: result.total,\n                                      list: result.list,\n                                    },\n                                    loading: false,\n                                  },\n                                  () => {\n                                    resolve();\n                                  },\n                                );\n                              });\n                          }, 2000);\n                        },\n                      );\n                    });\n                  }\n                }\n\n                export default FewTable;\n                          "},{title:"index.jsx",mode:"code",scope:{React:l},codeText:"\n                import React from 'react';\n                import FewTable from './fewTable';\n\n                <div style={{ display: 'flex', height: 700 }}>\n                  <FewTable\n                    style={{ height: '100%' }}\n                    isShowExpandSearch\n                    defaultExpandSearchCollapse={false}\n                    fixedHeaderAutoTable\n                    fixedTableSpaceBetween\n                  />\n                </div>\n                          "}],type:"PlayGroundMulit",renderChildren:()=>l.createElement(l.Fragment,null,l.createElement(a.Z,{checkedChildren:"分页",checked:I,onChange:()=>{N(!I)}}),l.createElement(r.Z,{direction:"vertical"}),l.createElement("div",{style:{display:"flex",height:700}},l.createElement(m.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:I})))},{id:"p6",name:"使用@ctsj/state的Table",cardProps:{description:{title:"使用@ctsj/state的Table",info:"使用@ctsj/state的Table"}},config:[{title:"serviceRegister.js",mode:"code",scope:{React:l},codeText:"\n                import ServiceRegister from '@ctsj/state/lib/middleware/saga/serviceregister';\n\n                function serviceRegister() {\n                  const requireComponent = require.context('./service', false, /.*\\.(js)$/);\n\n                  const services = {};\n                  requireComponent.keys().forEach((fileName) => {\n                    const serviceKey = fileName.substring(2, fileName.length - 3);\n                    services[serviceKey] = requireComponent(fileName);\n                  });\n\n                  ServiceRegister.initConfig(services);\n                }\n\n                serviceRegister();\n                          "},{title:"model/user.js",mode:"code",scope:{React:l},codeText:"\n                import ServiceRegister from '@ctsj/state/lib/middleware/saga/serviceregister';\n\n                export default () => Object.assign(ServiceRegister.model('user'), {});\n                          "},{title:"service/user.js",mode:"code",scope:{React:l},codeText:"\n                import { Ajax } from '@baifendian/adhere';\n\n                const request = new Ajax('');\n\n                export const fetchList = (() => {\n                  return {\n                    call: () => {\n                      return request.get({\n                        path: require('../mock.js').default,\n                        mock: true,\n                        loading: {\n                          show: false,\n                        },\n                      });\n                    },\n                    defaultResult: () => ({\n                      total: 0,\n                      list: [],\n                    }),\n                  };\n                })();\n\n                export default {\n                  codeKey: 'code',\n                  codeSuccessKey: 200,\n                  dataKey: 'data',\n                  messageKey: 'message',\n                };\n                          "},{title:"stateTable.jsx",mode:"code",scope:{React:l},codeText:"\n                import React from 'react';\n                import moment from 'moment';\n                import { Input, InputNumber, Select, DatePicker } from 'antd';\n                import ServiceRegister from '@ctsj/state/lib/middleware/saga/serviceregister';\n                import { createState } from '@ctsj/state/lib/react';\n                import { Resource, SearchTable, Dict } from '@baifendian/adhere';\n\n                import './serviceRegister';\n\n                const { Option } = Select;\n\n                const { RangePicker } = DatePicker;\n\n                const { Table, TableStateImplement } = SearchTable;\n\n                const { SearchForm } = Table;\n\n                const { SearchFormRow } = SearchForm;\n\n                const { SearchFormLabel, SearchFormValue } = SearchFormRow;\n\n                const serviceName = 'user';\n\n                /!**\n                 * StateTable\n                 *!/\n                class StateTable extends TableStateImplement {\n                  constructor(props) {\n                    super(props);\n\n                    const models = [];\n\n                    const requireComponent = require.context('./model', false, /.*\\.(js)$/);\n\n                    requireComponent.keys().forEach((fileName) => {\n                      const model = requireComponent(fileName);\n                      models.push(model.default());\n                    });\n\n                    this.unsubscribe = createState({\n                      initialState: { ...this.state },\n                      models,\n                      mapState: (state) =>\n                        Object.assign(\n                          ServiceRegister.mapStateToProps({\n                            namespaces: [serviceName],\n                            state,\n                          }),\n                          {\n                            loading: state.loading,\n                          },\n                        ),\n                      mapDispatch: (dispatch) =>\n                        ServiceRegister.mapDispatchToProps({\n                          namespaces: [serviceName],\n                          dispatch,\n                        }),\n                      ref: this,\n                      middleWares: [],\n                      reducer: null,\n                    });\n                  }\n\n                  componentWillUnmount() {\n                    this.unsubscribe();\n                  }\n\n                  getServiceName() {\n                    return serviceName;\n                  }\n\n                  getOrderFieldValue() {\n                    return 'height';\n                  }\n\n                  getTotalKey() {\n                    return 'totalCount';\n                  }\n\n                  renderSearchForm() {\n                    return (\n                      <SearchForm>\n                         eslint-disable-next-line react/jsx-no-undef\n                        <SearchFormRow>\n                          <SearchFormLabel style={{ width: 120 }}>姓名：</SearchFormLabel>\n                          <SearchFormValue>\n                            <Input\n                              style={{ width: '90%' }}\n                              placeholder=\"姓名\"\n                              value={this.state.name}\n                              onChange={(e) => {\n                                this.onInputChange('name', e);\n                              }}\n                            />\n                          </SearchFormValue>\n\n                          <SearchFormLabel style={{ width: 120 }}>性别：</SearchFormLabel>\n                          <SearchFormValue>\n                            <Select\n                              style={{ width: '90%' }}\n                              value={this.state.sex}\n                              onChange={(v) => {\n                                this.onSelectChange('sex', v);\n                              }}\n                              getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\n                            >\n                              {Resource.Dict.value.ResourceNormalSex.value.map((t) => (\n                                <Option key={t.value} value={t.value}>\n                                  {t.label}\n                                </Option>\n                              ))}\n                            </Select>\n                          </SearchFormValue>\n\n                          <SearchFormLabel style={{ width: 120 }}>出生年月：</SearchFormLabel>\n                          <SearchFormValue>\n                            <RangePicker\n                              style={{ width: '90%' }}\n                              value={[this.state.startTime, this.state.endTime]}\n                              onChange={(moments) => {\n                                this.onDateTimeRangeChange(['startTime', 'endTime'], moments);\n                              }}\n                              getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\n                            />\n                          </SearchFormValue>\n                        </SearchFormRow>\n\n                         eslint-disable-next-line react/jsx-no-undef\n                        <SearchFormRow>\n                          <SearchFormLabel style={{ width: 120 }}>籍贯：</SearchFormLabel>\n                          <SearchFormValue>\n                            <Input\n                              style={{ width: '90%' }}\n                              placeholder=\"籍贯\"\n                              value={this.state.homeTown}\n                              onChange={(e) => {\n                                this.onInputChange('homeTown', e);\n                              }}\n                            />\n                          </SearchFormValue>\n\n                          <SearchFormLabel style={{ width: 120 }}>身高：</SearchFormLabel>\n                          <SearchFormValue>\n                            <InputNumber\n                              style={{ width: '90%' }}\n                              placeholder=\"身高\"\n                              value={this.state.height}\n                              onChange={(v) => {\n                                this.onSelectChange('height', v);\n                              }}\n                            />\n                          </SearchFormValue>\n\n                          <SearchFormLabel style={{ width: 120 }}>体重：</SearchFormLabel>\n                          <SearchFormValue>\n                            <InputNumber\n                              style={{ width: '90%' }}\n                              placeholder=\"体重\"\n                              value={this.state.width}\n                              onChange={(v) => {\n                                this.onSelectChange('width', v);\n                              }}\n                            />\n                          </SearchFormValue>\n                        </SearchFormRow>\n\n                         eslint-disable-next-line react/jsx-no-undef\n                        <SearchFormRow>\n                          <SearchFormLabel style={{ width: 120 }}>所在部门：</SearchFormLabel>\n                          <SearchFormValue>\n                            <Select\n                              style={{ width: '90%' }}\n                              value={this.state.deptCode}\n                              getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\n                              onChange={(v) => {\n                                this.onSelectChange('deptCode', v);\n                              }}\n                            >\n                              <Option value=\"\">全部</Option>\n                              <Option value=\"0\">产品部</Option>\n                              <Option value=\"1\">开发部</Option>\n                              <Option value=\"2\">工程部</Option>\n                            </Select>\n                          </SearchFormValue>\n                        </SearchFormRow>\n                      </SearchForm>\n                    );\n                  }\n\n                  renderSearchFooterItems(defaultItems) {\n                    return [...defaultItems];\n                  }\n\n                  getParams() {\n                    return {\n                      name: '',\n                      sex: '',\n                      startTime: null,\n                      endTime: null,\n                      deptCode: '',\n                      homeTown: '',\n                      width: '',\n                      height: '',\n                    };\n                  }\n\n                  getColumns() {\n                    return [\n                      {\n                        title: '姓名',\n                        dataIndex: 'name',\n                        key: 'name',\n                        align: 'center',\n                      },\n                      {\n                        title: '性别',\n                        dataIndex: 'sex',\n                        key: 'sex',\n                        align: 'center',\n                        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n                      },\n                      {\n                        title: '籍贯',\n                        dataIndex: 'homeTown',\n                        key: 'homeTown',\n                        align: 'center',\n                      },\n                      {\n                        title: '出生年月',\n                        dataIndex: 'birthday',\n                        key: 'birthday',\n                        align: 'center',\n                        sorter: true,\n                        sortOrder: this.sortOrder('birthday'),\n                        render: (val) =>\n                          val ? moment(val).format(Resource.Dict.value.ResourceMomentFormat10.value()) : '',\n                      },\n                      {\n                        title: '所在部门',\n                        dataIndex: 'deptName',\n                        key: 'deptName',\n                        align: 'center',\n                      },\n                      {\n                        title: '身高',\n                        dataIndex: 'height',\n                        key: 'height',\n                        align: 'center',\n                        sorter: true,\n                        sortOrder: this.sortOrder('height'),\n                      },\n                      {\n                        title: '体重',\n                        dataIndex: 'width',\n                        key: 'width',\n                        align: 'center',\n                        sorter: true,\n                        sortOrder: this.sortOrder('width'),\n                      },\n                    ];\n                  }\n\n                  getFetchListPropName() {\n                    return 'fetchList';\n                  }\n\n                  fetchDataExecute(searchParams) {\n                    return super.fetchDataExecute(searchParams);\n                  }\n\n                  onSubTableChange(pagination, filters, sorter) {}\n                }\n\n                export default StateTable;\n                          "},{title:"index.jsx",mode:"code",scope:{React:l},codeText:"\n                import React from 'react';\n                import StateTable from './stateTable';\n\n                <div style={{ display: 'flex', height: 700 }}>\n                  <StateTable\n                    style={{ height: '100%' }}\n                    isShowExpandSearch\n                    defaultExpandSearchCollapse={false}\n                    fixedHeaderAutoTable\n                    fixedTableSpaceBetween\n                  />\n                </div>\n                          "}],type:"PlayGroundMulit",renderChildren:()=>l.createElement(l.Fragment,null,l.createElement(a.Z,{checkedChildren:"分页",checked:O,onChange:()=>{P(!O)}}),l.createElement(r.Z,{direction:"vertical"}),l.createElement("div",{style:{display:"flex",height:700}},l.createElement(T.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:O})))},{id:"p7",name:"实现TableImplement的table",cardProps:{description:{title:"实现TableImplement的table",info:"实现TableImplement的table"}},config:[{title:"table.jsx",mode:"code",scope:{React:l},codeText:"\n                import React from 'react';\n                import moment from 'moment';\n                import { Input, Select, DatePicker, InputNumber } from 'antd';\n\n                import { SearchTable, Resource, Ajax } from '@baifendian/adhere';\n\n                const { Table, TableImplement } = SearchTable;\n\n                const { SearchForm } = Table;\n\n                const { SearchFormRow } = SearchForm;\n\n                const { SearchFormLabel, SearchFormValue } = SearchFormRow;\n\n                const { Option } = Select;\n\n                const { RangePicker } = DatePicker;\n\n                /!**\n                 * Table\n                 * @class TableImpl\n                 * @classdesc TableImpl\n                 *!/\n                class TableImpl extends TableImplement {\n                  // eslint-disable-next-line no-useless-constructor\n                  constructor(props) {\n                    super(props);\n\n                    this.request = new Ajax('');\n\n                    Object.assign(this.state, {\n                      loading: false,\n                    });\n                  }\n\n                  getParams() {\n                    return {\n                      name: '',\n                      sex: '',\n                      startTime: null,\n                      endTime: null,\n                      deptCode: '',\n                      homeTown: '',\n                      width: '',\n                      height: '',\n                    };\n                  }\n\n                  getFetchDataParams() {\n                    const {\n                      searchParams: { startTime, endTime },\n                    } = this.state;\n\n                    return {\n                      startTime: startTime\n                        ? `${startTime.format(Resource.Dict.value.ResourceMomentFormat10.value())} 00:00:00`\n                        : null,\n                      endTime: endTime\n                        ? `${endTime.format(Resource.Dict.value.ResourceMomentFormat10.value())} 23:59:59`\n                        : null,\n                    };\n                  }\n\n                  getData() {\n                    return this.state.dataSource.list;\n                  }\n\n                  getColumns() {\n                    return [\n                      {\n                        title: '姓名',\n                        dataIndex: 'name',\n                        key: 'name',\n                        align: 'center',\n                      },\n                      {\n                        title: '性别',\n                        dataIndex: 'sex',\n                        key: 'sex',\n                        align: 'center',\n                        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n                      },\n                      {\n                        title: '籍贯',\n                        dataIndex: 'homeTown',\n                        key: 'homeTown',\n                        align: 'center',\n                      },\n                      {\n                        title: '出生年月',\n                        dataIndex: 'birthday',\n                        key: 'birthday',\n                        align: 'center',\n                        sorter: true,\n                        sortOrder: this.sortOrder('birthday'),\n                        render: (val) =>\n                          val ? moment(val).format(Resource.Dict.value.ResourceMomentFormat10.value()) : '',\n                      },\n                      {\n                        title: '所在部门',\n                        dataIndex: 'deptName',\n                        key: 'deptName',\n                        align: 'center',\n                      },\n                      {\n                        title: '身高',\n                        dataIndex: 'height',\n                        key: 'height',\n                        align: 'center',\n                        sorter: true,\n                        sortOrder: this.sortOrder('height'),\n                      },\n                      {\n                        title: '体重',\n                        dataIndex: 'width',\n                        key: 'width',\n                        align: 'center',\n                        sorter: true,\n                        sortOrder: this.sortOrder('width'),\n                      },\n                    ];\n                  }\n\n                  renderSearchForm() {\n                    return (\n                      // eslint-disable-next-line react/jsx-no-undef\n                      <SearchForm>\n                         eslint-disable-next-line react/jsx-no-undef\n                        <SearchFormRow>\n                          <SearchFormLabel style={{ width: 120 }}>姓名：</SearchFormLabel>\n                          <SearchFormValue>\n                            <Input\n                              style={{ width: '90%' }}\n                              placeholder=\"姓名\"\n                              value={this.state.name}\n                              onChange={(e) => {\n                                this.onInputChange('name', e);\n                              }}\n                            />\n                          </SearchFormValue>\n\n                          <SearchFormLabel style={{ width: 120 }}>性别：</SearchFormLabel>\n                          <SearchFormValue>\n                            <Select\n                              style={{ width: '90%' }}\n                              value={this.state.sex}\n                              onChange={(v) => {\n                                this.onSelectChange('sex', v);\n                              }}\n                              getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\n                            >\n                              {Resource.Dict.value.ResourceNormalSex.value.map((t) => (\n                                <Option key={t.value} value={t.value}>\n                                  {t.label}\n                                </Option>\n                              ))}\n                            </Select>\n                          </SearchFormValue>\n\n                          <SearchFormLabel style={{ width: 120 }}>出生年月：</SearchFormLabel>\n                          <SearchFormValue>\n                            <RangePicker\n                              style={{ width: '90%' }}\n                              value={[this.state.startTime, this.state.endTime]}\n                              onChange={(moments) => {\n                                this.onDateTimeRangeChange(['startTime', 'endTime'], moments);\n                              }}\n                              getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\n                            />\n                          </SearchFormValue>\n                        </SearchFormRow>\n\n                         eslint-disable-next-line react/jsx-no-undef\n                        <SearchFormRow>\n                          <SearchFormLabel style={{ width: 120 }}>籍贯：</SearchFormLabel>\n                          <SearchFormValue>\n                            <Input\n                              style={{ width: '90%' }}\n                              placeholder=\"籍贯\"\n                              value={this.state.homeTown}\n                              onChange={(e) => {\n                                this.onInputChange('homeTown', e);\n                              }}\n                            />\n                          </SearchFormValue>\n\n                          <SearchFormLabel style={{ width: 120 }}>身高：</SearchFormLabel>\n                          <SearchFormValue>\n                            <InputNumber\n                              style={{ width: '90%' }}\n                              placeholder=\"身高\"\n                              value={this.state.height}\n                              onChange={(v) => {\n                                this.onSelectChange('height', v);\n                              }}\n                            />\n                          </SearchFormValue>\n\n                          <SearchFormLabel style={{ width: 120 }}>体重：</SearchFormLabel>\n                          <SearchFormValue>\n                            <InputNumber\n                              style={{ width: '90%' }}\n                              placeholder=\"体重\"\n                              value={this.state.width}\n                              onChange={(v) => {\n                                this.onSelectChange('width', v);\n                              }}\n                            />\n                          </SearchFormValue>\n                        </SearchFormRow>\n\n                         eslint-disable-next-line react/jsx-no-undef\n                        <SearchFormRow>\n                          <SearchFormLabel style={{ width: 120 }}>所在部门：</SearchFormLabel>\n                          <SearchFormValue>\n                            <Select\n                              style={{ width: '90%' }}\n                              value={this.state.deptCode}\n                              getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\n                              onChange={(v) => {\n                                this.onSelectChange('deptCode', v);\n                              }}\n                            >\n                              <Option value=\"\">全部</Option>\n                              <Option value=\"0\">产品部</Option>\n                              <Option value=\"1\">开发部</Option>\n                              <Option value=\"2\">工程部</Option>\n                            </Select>\n                          </SearchFormValue>\n                        </SearchFormRow>\n                      </SearchForm>\n                    );\n                  }\n\n                  getTotal() {\n                    return this.state.dataSource.total;\n                  }\n\n                  getOrderFieldValue() {\n                    return 'height';\n                  }\n\n                  renderSearchFooterItems() {\n                    return null;\n                  }\n\n                  showLoading() {\n                    return this.state.loading;\n                  }\n\n                  // eslint-disable-next-line no-unused-vars\n                  onSubTableChange(pagination, filters, sorter) {}\n\n                  fetchDataExecute(searchParams) {\n                    return new Promise((resolve) => {\n                      this.setState(\n                        {\n                          loading: true,\n                        },\n                        () => {\n                          setTimeout(() => {\n                            this.request\n                              .get({\n                                mock: true,\n                                // eslint-disable-next-line global-require\n                                path: require('./mock.js').default.data,\n                              })\n                              .then((result) => {\n                                this.setState(\n                                  {\n                                    dataSource: {\n                                      total: result.total,\n                                      list: result.list,\n                                    },\n                                    loading: false,\n                                  },\n                                  () => {\n                                    resolve();\n                                  },\n                                );\n                              });\n                          }, 2000);\n                        },\n                      );\n                    });\n                  }\n                }\n\n                export default TableImpl;\n                        "}],type:"PlayGroundMulit"},{id:"p8",name:"标准的RowSelected",cardProps:{description:{title:"标准的RowSelected",info:"标准的RowSelected"}},config:[{title:"rowSelectedNormal.jsx",mode:"code",scope:{React:l},codeText:"\n                import React from 'react';\n\n                import { SearchTable } from '@baifendian/adhere';\n                import Table from './table';\n\n                const { Table: $SearchTable } = SearchTable;\n\n                /!**\n                 * RowSelectedContinuous\n                 * @classdesc\n                 *!/\n                class RowSelectedContinuous extends Table {\n                    getRowSelectionMode() {\n                        return $SearchTable.ROW_SELECTION_NORMAL_MODE;\n                    }\n                }\n\n                export default RowSelectedContinuous;\n                          "}],type:"PlayGroundMulit",renderChildren:()=>l.createElement(S.Z,{isShowExpandSearch:!0,defaultExpandSearchCollapse:!1})},{id:"p9",name:"可以跨页选择的RowSelected",cardProps:{description:{title:"可以跨页选择的RowSelected",info:"可以跨页选择的RowSelected"}},config:[{title:"rowSelectedContinuous.jsx",mode:"code",scope:{React:l},codeText:"\n                import React from 'react';\n\n                import { SearchTable } from '@baifendian/adhere';\n                import Table from './table';\n\n                const { Table: $SearchTable } = SearchTable;\n\n                /!**\n                 * RowSelectedContinuous\n                 * @classdesc\n                 *!/\n                class RowSelectedContinuous extends Table {\n                  getRowSelectionMode() {\n                    return $SearchTable.ROW_SELECTION_CONTINUOUS_MODE;\n                  }\n                }\n\n                export default RowSelectedContinuous;\n                          "}],type:"PlayGroundMulit",renderChildren:()=>l.createElement(v.Z,{isShowExpandSearch:!0,defaultExpandSearchCollapse:!1})},{id:"p10",name:"可以拖动的列",cardProps:{description:{title:"可以拖动的列",info:"可以拖动的列"}},config:[{title:"columnResizeTable.jsx",mode:"code",scope:{React:l},codeText:"\n            import React from 'react';\n\n            import Table from './table';\n\n            /!**\n             * ColumnResizeTable\n             * @classdesc\n             *!/\n            class ColumnResizeTable extends Table {\n              getColumns() {\n                return super.getColumns().map((column) => ({\n                  ...column,\n                  resizable: true,\n                }));\n              }\n            }\n\n            export default ColumnResizeTable;\n                      "}],type:"PlayGroundMulit",renderChildren:()=>l.createElement("div",{style:{display:"flex",height:700}},l.createElement(s.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0}))},{id:"p11",name:"列设置",cardProps:{description:{title:"列设置",info:"列设置"}},config:[{title:"columnSettingTable.jsx",mode:"code",scope:{React:l},codeText:"\n            import React from 'react';\n\n            import Table from './table';\n            import styles from './fixedTableSpaceBetweenTable.less';\n\n            /!**\n             * ColumnSettingTable\n             * @classdesc\n             *!/\n            class ColumnSettingTable extends Table {\n              renderTableHeader() {\n                return (\n                  <div className={styles.Header}>\n                    <h3>查询表格</h3>\n                    <div>{this.renderColumnSetting()}</div>\n                  </div>\n                );\n              }\n            }\n\n            export default ColumnSettingTable;\n                      "}],type:"PlayGroundMulit",renderChildren:()=>l.createElement(d.Z,{isShowExpandSearch:!0,defaultExpandSearchCollapse:!1})},{id:"p12",name:"表格密度设置",cardProps:{description:{title:"表格密度设置",info:"表格密度设置"}},config:[{title:"tableDensitySetting.jsx",mode:"code",scope:{React:l},codeText:"\n            import React from 'react';\n\n            import Table from './table';\n            import styles from './fixedTableSpaceBetweenTable.less';\n\n            /!**\n             * TableDensitySetting\n             * @classdesc\n             *!/\n            class TableDensitySetting extends Table {\n              renderTableHeader() {\n                return (\n                  <div className={styles.Header}>\n                    <h3>查询表格</h3>\n                    <div>{this.renderTableDensitySetting()}</div>\n                  </div>\n                );\n              }\n            }\n\n            export default TableDensitySetting;\n                      "}],type:"PlayGroundMulit",renderChildren:()=>l.createElement(x.Z,{isShowExpandSearch:!0,defaultExpandSearchCollapse:!1})},{id:"p13",name:"查询面板两端的渲染",cardProps:{description:{title:"查询面板两端的渲染",info:"查询面板两端的渲染"}},config:[{title:"renderSearchBetweenTable.jsx",mode:"code",scope:{React:l},codeText:'\n            import { Button, Col, Row, Statistic } from \'antd\';\n            import React from \'react\';\n\n            import Table from \'./table\';\n\n            /!**\n             * RenderSearchBetweenTable\n             * @classdesc\n             *!/\n            class RenderSearchBetweenTable extends Table {\n              renderSearchFormBefore() {\n                return (\n                  <Row gutter={16}>\n                    <Col span={12}>\n                      <Statistic title="Active Users" value={112893} />\n                    </Col>\n                    <Col span={12}>\n                      <Statistic title="Account Balance (CNY)" value={112893} precision={2} />\n                      <Button style={{ marginTop: 16 }} type="primary">\n                        Recharge\n                      </Button>\n                    </Col>\n                    <Col span={12}>\n                      <Statistic title="Active Users" value={112893} loading />\n                    </Col>\n                  </Row>\n                );\n              }\n\n              renderSearchFormAfter() {\n                return (\n                  <Row gutter={16}>\n                    <Col span={12}>\n                      <Statistic title="Active Users" value={112893} />\n                    </Col>\n                    <Col span={12}>\n                      <Statistic title="Account Balance (CNY)" value={112893} precision={2} />\n                      <Button style={{ marginTop: 16 }} type="primary">\n                        Recharge\n                      </Button>\n                    </Col>\n                    <Col span={12}>\n                      <Statistic title="Active Users" value={112893} loading />\n                    </Col>\n                  </Row>\n                );\n              }\n            }\n\n            export default RenderSearchBetweenTable;\n                      '},{title:"index.jsx",mode:"code",scope:{React:l},codeText:"\n            <div style={{ display: 'flex', height: 800 }}>\n              <RenderSearchBetweenTable\n                style={{ height: '100%' }}\n                isShowExpandSearch\n                defaultExpandSearchCollapse={false}\n                fixedHeaderAutoTable\n                pagination={pagination3}\n              />\n            </div>\n                      "}],type:"PlayGroundMulit",renderChildren:()=>l.createElement(l.Fragment,null,l.createElement("div",{style:{display:"flex",height:800}},l.createElement(y.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,pagination:w})))},{id:"p14",name:"ProSearchStateTable",mode:"code",scope:{React:l},cardProps:{description:{title:"ProSearchStateTable",info:"ProSearchStateTable"}},codeText:"\n      import { Button } from 'antd';\n      import React from 'react';\n\n      import { DeleteOutlined, UserAddOutlined } from '@ant-design/icons';\n      import {\n        ConditionalRender,\n        DateDisplay,\n        DelConfirm,\n        Resource,\n        SearchTable,\n        WarnPrompt,\n      } from '@baifendian/adhere';\n\n      import './serviceRegister';\n\n      const { ProSearchStateTable, OptionsWrap, SearchTableStateImplementFactory, DisabledOption } =\n        SearchTable;\n\n      const serviceName = 'user';\n\n      /!**\n       * ProSearchStateTableImpl\n       * @class ProSearchStateTableImpl\n       * @classdesc ProSearchStateTableImpl\n       *!/\n      class ProSearchStateTableImpl extends ProSearchStateTable {\n        getComponentId() {\n          return 'ProSearchStateTableImpl';\n        }\n\n        getServiceName() {\n          return serviceName;\n        }\n\n        getFetchListPropName() {\n          return 'fetchList';\n        }\n\n        getOrderFieldValue() {\n          return 'height';\n        }\n\n        /!**\n         * getDataKey\n         * @description - 获取数据的key\n         * @protected\n         *!/\n        getDataKey() {\n          return 'list';\n        }\n\n        /!**\n         * getTotalKey\n         * @description - 获取total的key\n         * @protected\n         *!/\n        getTotalKey() {\n          return 'totalCount';\n        }\n\n        /!**\n         * Table的列\n         * @override\n         * @return {*[]}\n         *!/\n        getColumns() {\n          return super.getColumns([\n            {\n              title: '姓名',\n              dataIndex: 'name',\n              key: 'name',\n              width: 150,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n            },\n            {\n              title: '性别',\n              dataIndex: 'sex',\n              key: 'sex',\n              align: 'center',\n              width: 150,\n              render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n              $search: {\n                type: 'select',\n                visible: true,\n                dictName: 'SystemTestSexSelect',\n              },\n            },\n            {\n              title: '出生年月',\n              dataIndex: 'birthday',\n              key: 'birthday',\n              align: 'center',\n              width: 200,\n              sorter: true,\n              sortOrder: this.sortOrder('birthday'),\n              render: (val) => <DateDisplay.DateDisplay10 value={val} />,\n              $search: {\n                type: 'rangePicker',\n                visible: true,\n                startName: 'birthDayStart',\n                endName: 'birthDayEnd',\n              },\n            },\n            {\n              title: '身高',\n              dataIndex: 'height',\n              key: 'height',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('height'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n            },\n            {\n              title: '体重',\n              dataIndex: 'width',\n              key: 'width',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('width'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n            },\n            {\n              title: '籍贯',\n              dataIndex: 'homeTown',\n              key: 'homeTown',\n              width: 200,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n            },\n            {\n              title: '现居住地',\n              dataIndex: 'address',\n              key: 'address',\n              width: 300,\n              $search: {\n                type: 'input',\n                visible: true,\n                valueAttrs: {\n                  colSpan: 5,\n                },\n              },\n            },\n            {\n              title: '操作',\n              dataIndex: this.getOptionsColumnDataIndex(),\n              key: this.getOptionsColumnDataIndex(),\n              width: 200,\n              render: (v, record) => (\n                <OptionsWrap style={{ justifyContent: 'center' }}>\n                  {this.renderOptionColumn(\n                    [\n                      {\n                        key: 'edit',\n                        value: (\n                          <ConditionalRender\n                            conditional={false}\n                            noMatch={() => <DisabledOption>编辑</DisabledOption>}\n                          >\n                            {() => <a>编辑</a>}\n                          </ConditionalRender>\n                        ),\n                      },\n                      {\n                        key: 'view',\n                        value: <a>查看</a>,\n                      },\n                      {\n                        key: 'delete',\n                        value: (\n                          <DelConfirm\n                            success={() =>\n                              Promise.resolve().then(() => {\n                                this.fetchData();\n                              })\n                            }\n                          >\n                            <a>删除</a>\n                          </DelConfirm>\n                        ),\n                      },\n                    ],\n                    { value: v, record },\n                  )}\n                </OptionsWrap>\n              ),\n            },\n          ]);\n        }\n\n        /!**\n         * renderSearchFooterItems\n         * 渲染表格的工具栏\n         * @override\n         *!/\n        renderSearchFooterItems(defaultItems) {\n          return super.renderSearchFooterItems([\n            {\n              key: 'add',\n              value: (\n                <Button key=\"add\" icon={<UserAddOutlined />} type=\"primary\" onClick={() => {}}>\n                  新增\n                </Button>\n              ),\n            },\n            {\n              key: 'delete',\n              value: (\n                <Button\n                  key=\"delete\"\n                  icon={<DeleteOutlined />}\n                  type=\"primary\"\n                  onClick={() => {\n                    const { selectedRowKeys } = this.state;\n\n                    if (!selectedRowKeys.length) {\n                      WarnPrompt('请选择要删除的数据');\n                      return;\n                    }\n\n                    DelConfirm.open(() => {\n                      return Promise.resolve().then(() => {\n                        this.setState({\n                          selectedRowKeys: [],\n                        });\n\n                        this.fetchData();\n                      });\n                    });\n                  }}\n                >\n                  删除\n                </Button>\n              ),\n            },\n            ...defaultItems,\n          ]);\n        }\n      }\n\n      ProSearchStateTableImpl.propTypes = {};\n\n      function getModels() {\n        const models = [];\n\n        const requireComponent = require.context('./model', false, /.*\\.(js)$/);\n\n        requireComponent.keys().forEach((fileName) => {\n          const model = requireComponent(fileName);\n          models.push(model.default());\n        });\n\n        return models;\n      }\n\n      const Wrap = SearchTableStateImplementFactory({\n        serviceNames: [serviceName],\n        middleWares: [],\n        reducer: null,\n        models: getModels(),\n      })(ProSearchStateTableImpl);\n\n      export default Wrap;\n              ",type:"PlayGround",renderChildren:()=>l.createElement("div",{style:{display:"flex",height:700}},l.createElement(b.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:I}))},{id:"p15",name:"可编辑的单元格",mode:"code",scope:{React:l},cardProps:{description:{title:"可编辑的单元格",info:"可编辑的单元格"}},codeText:"\n      import React from 'react';\n\n      import { DateDisplay, DelConfirm, Resource, SearchTable } from '@baifendian/adhere';\n\n      import './serviceRegister';\n\n      const { SearchTableStateImplementFactory, ProEditableCellSearchStateTable, OptionsWrap } =\n        SearchTable;\n\n      const serviceName = 'user';\n\n      function getModels() {\n        const models = [];\n        const requireComponent = require.context('./model', false, /.*\\.(js)$/);\n        requireComponent.keys().forEach((fileName) => {\n          const model = requireComponent(fileName);\n          models.push(model.default());\n        });\n\n        return models;\n      }\n\n      /!**\n       * EditableCellStateSearchTable\n       * @class EditableCellStateSearchTable\n       * @classdesc EditableCellStateSearchTable\n       *!/\n      class EditableCellStateSearchTable extends ProEditableCellSearchStateTable {\n        getComponentId() {\n          return 'EditableCellStateSearchTable';\n        }\n\n        getServiceName() {\n          return serviceName;\n        }\n\n        getFetchListPropName() {\n          return 'fetchList';\n        }\n\n        getOrderFieldValue() {\n          return 'height';\n        }\n\n        /!**\n         * getDataKey\n         * @description - 获取数据的key\n         * @protected\n         *!/\n        getDataKey() {\n          return 'list';\n        }\n\n        /!**\n         * getTotalKey\n         * @description - 获取total的key\n         * @protected\n         *!/\n        getTotalKey() {\n          return 'totalCount';\n        }\n\n        /!**\n         * Table的列\n         * @override\n         * @return {*[]}\n         *!/\n        getColumns() {\n          return super.getColumns([\n            {\n              title: '姓名',\n              dataIndex: 'name',\n              key: 'name',\n              width: 150,\n              render: (val) => <div style={{ color: 'red' }}>{val}</div>,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入姓名',\n                  },\n                ],\n                onSave: ({ value, record, dataIndex }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n              $resizable: true,\n            },\n            {\n              title: '性别',\n              dataIndex: 'sex',\n              key: 'sex',\n              align: 'center',\n              width: 150,\n              render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n              $search: {\n                type: 'select',\n                visible: true,\n                dictName: 'SystemTestSexSelect',\n              },\n              $editable: {\n                editable: true,\n                type: 'select',\n                dictName: 'SystemTestSexSelect',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '出生年月',\n              dataIndex: 'birthday',\n              key: 'birthday',\n              align: 'center',\n              width: 200,\n              sorter: true,\n              sortOrder: this.sortOrder('birthday'),\n              render: (val) => <DateDisplay.DateDisplay10 value={val} />,\n              $search: {\n                type: 'rangePicker',\n                visible: true,\n                startName: 'birthDayStart',\n                endName: 'birthDayEnd',\n              },\n              $editable: {\n                editable: true,\n                type: 'datePicker',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDateData({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '身高',\n              dataIndex: 'height',\n              key: 'height',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('height'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'inputNumberDecimal2',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入身高',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '体重',\n              dataIndex: 'width',\n              key: 'width',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('width'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'inputNumberDecimal2',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入体重',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '籍贯',\n              dataIndex: 'homeTown',\n              key: 'homeTown',\n              ellipsis: true,\n              width: 200,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入籍贯',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '现居住地',\n              dataIndex: 'address',\n              key: 'address',\n              width: 300,\n              $search: {\n                type: 'input',\n                visible: true,\n                valueAttrs: {\n                  colSpan: 5,\n                },\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入居住地',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '操作',\n              dataIndex: this.getOptionsColumnDataIndex(),\n              key: this.getOptionsColumnDataIndex(),\n              width: 260,\n              render: (v, record) => (\n                <OptionsWrap style={{ justifyContent: 'center' }}>\n                  {this.renderOptionColumn(\n                    [\n                      {\n                        key: 'view',\n                        value: <a>查看</a>,\n                      },\n                      {\n                        key: 'delete',\n                        value: (\n                          <DelConfirm\n                            success={() =>\n                              Promise.resolve().then(() => {\n                                this.fetchData();\n                              })\n                            }\n                          >\n                            <a>删除</a>\n                          </DelConfirm>\n                        ),\n                      },\n                    ],\n                    { value: v, record },\n                  )}\n                </OptionsWrap>\n              ),\n            },\n          ]);\n        }\n      }\n\n      EditableCellStateSearchTable.propTypes = {};\n\n      const Wrap = SearchTableStateImplementFactory({\n        serviceNames: [serviceName],\n        middleWares: [],\n        reducer: null,\n        models: getModels(),\n      })(EditableCellStateSearchTable);\n\n      export default Wrap;\n            ",type:"PlayGround",renderChildren:()=>l.createElement("div",{style:{display:"flex",height:700}},l.createElement(c.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:I}))},{id:"p16",name:"可编辑的行",mode:"code",scope:{React:l},cardProps:{description:{title:"可编辑的行",info:"可编辑的行"}},codeText:"\n      import React from 'react';\n\n      import { DateDisplay, Resource, SearchTable } from '@baifendian/adhere';\n\n      import './serviceRegister';\n\n      const { SearchTableStateImplementFactory, ProEditableRowSearchStateTable, EditableRowControl } =\n        SearchTable;\n\n      const serviceName = 'user';\n\n      function getModels() {\n        const models = [];\n        const requireComponent = require.context('./model', false, /.*\\.(js)$/);\n        requireComponent.keys().forEach((fileName) => {\n          const model = requireComponent(fileName);\n          models.push(model.default());\n        });\n\n        return models;\n      }\n\n      /!**\n       * RowEditableStateSearchTable\n       * @class RowEditableStateSearchTable\n       * @classdesc RowEditableStateSearchTable\n       *!/\n      class RowEditableStateSearchTable extends ProEditableRowSearchStateTable {\n        getComponentId() {\n          return 'RowEditableStateSearchTable';\n        }\n\n        getServiceName() {\n          return serviceName;\n        }\n\n        getFetchListPropName() {\n          return 'fetchList';\n        }\n\n        getOrderFieldValue() {\n          return 'height';\n        }\n\n        /!**\n         * getDataKey\n         * @description - 获取数据的key\n         * @protected\n         *!/\n        getDataKey() {\n          return 'list';\n        }\n\n        /!**\n         * getTotalKey\n         * @description - 获取total的key\n         * @protected\n         *!/\n        getTotalKey() {\n          return 'totalCount';\n        }\n\n        /!**\n         * Table的列\n         * @override\n         * @return {*[]}\n         *!/\n        getColumns() {\n          return super.getColumns([\n            {\n              title: '姓名',\n              dataIndex: 'name',\n              key: 'name',\n              width: 150,\n              render: (val) => <div style={{ color: 'red' }}>{val}</div>,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入姓名',\n                  },\n                ],\n                onSave: ({ value, record, dataIndex }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n              // $resizable: true,\n            },\n            {\n              title: '性别',\n              dataIndex: 'sex',\n              key: 'sex',\n              align: 'center',\n              width: 150,\n              render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n              $search: {\n                type: 'select',\n                visible: true,\n                dictName: 'SystemTestSexSelect',\n              },\n              $editable: {\n                editable: true,\n                type: 'select',\n                dictName: 'SystemTestSexSelect',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '出生年月',\n              dataIndex: 'birthday',\n              key: 'birthday',\n              align: 'center',\n              width: 200,\n              sorter: true,\n              sortOrder: this.sortOrder('birthday'),\n              render: (val) => <DateDisplay.DateDisplay10 value={val} />,\n              $search: {\n                type: 'rangePicker',\n                visible: true,\n                startName: 'birthDayStart',\n                endName: 'birthDayEnd',\n              },\n              $editable: {\n                editable: true,\n                type: 'datePicker',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDateData({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '身高',\n              dataIndex: 'height',\n              key: 'height',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('height'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'inputNumberDecimal2',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '体重',\n              dataIndex: 'width',\n              key: 'width',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('width'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'inputNumberDecimal2',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '籍贯',\n              dataIndex: 'homeTown',\n              key: 'homeTown',\n              ellipsis: true,\n              width: 200,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '现居住地',\n              dataIndex: 'address',\n              key: 'address',\n              width: 300,\n              $search: {\n                type: 'input',\n                visible: true,\n                valueAttrs: {\n                  colSpan: 5,\n                },\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '操作',\n              dataIndex: this.getOptionsColumnDataIndex(),\n              key: this.getOptionsColumnDataIndex(),\n              width: 100,\n              render: (v, record) => (\n                <EditableRowControl\n                  record={record}\n                  rowKey={this.getRowKey()}\n                  editorRowId={this.state.editorRowId}\n                />\n              ),\n            },\n          ]);\n        }\n      }\n\n      RowEditableStateSearchTable.propTypes = {};\n\n      const Wrap = SearchTableStateImplementFactory({\n        serviceNames: [serviceName],\n        middleWares: [],\n        reducer: null,\n        models: getModels(),\n      })(RowEditableStateSearchTable);\n\n      export default Wrap;\n            ",type:"PlayGround",renderChildren:()=>l.createElement("div",{style:{display:"flex",height:700}},l.createElement(g.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:I}))},{id:"p17",name:"可编辑的表格",mode:"code",scope:{React:l},cardProps:{description:{title:"可编辑的表格",info:"可编辑的表格"}},codeText:"\n      import React from 'react';\n\n      import { DateDisplay, Resource, SearchTable } from '@baifendian/adhere';\n\n      import './serviceRegister';\n\n      const { SearchTableStateImplementFactory, ProEditableSearchStateTable, EditableTableControl } =\n        SearchTable;\n\n      const serviceName = 'user';\n\n      function getModels() {\n        const models = [];\n        const requireComponent = require.context('./model', false, /.*\\.(js)$/);\n        requireComponent.keys().forEach((fileName) => {\n          const model = requireComponent(fileName);\n          models.push(model.default());\n        });\n\n        return models;\n      }\n\n      /!**\n       * TableEditableStateSearchTable\n       * @class TableEditableStateSearchTable\n       * @classdesc TableEditableStateSearchTable\n       *!/\n      class TableEditableStateSearchTable extends ProEditableSearchStateTable {\n        getComponentId() {\n          return 'TableEditableStateSearchTable';\n        }\n\n        getServiceName() {\n          return serviceName;\n        }\n\n        getFetchListPropName() {\n          return 'fetchList';\n        }\n\n        getOrderFieldValue() {\n          return 'height';\n        }\n\n        /!**\n         * getDataKey\n         * @description - 获取数据的key\n         * @protected\n         *!/\n        getDataKey() {\n          return 'list';\n        }\n\n        /!**\n         * getTotalKey\n         * @description - 获取total的key\n         * @protected\n         *!/\n        getTotalKey() {\n          return 'totalCount';\n        }\n\n        /!**\n         * Table的列\n         * @override\n         * @return {*[]}\n         *!/\n        getColumns() {\n          return super.getColumns([\n            {\n              title: '姓名',\n              dataIndex: 'name',\n              key: 'name',\n              width: 150,\n              render: (val) => <div style={{ color: 'red' }}>{val}</div>,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入姓名',\n                  },\n                ],\n                onSave: ({ value, record, dataIndex }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n              $resizable: true,\n            },\n            {\n              title: '性别',\n              dataIndex: 'sex',\n              key: 'sex',\n              align: 'center',\n              width: 150,\n              render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n              $search: {\n                type: 'select',\n                visible: true,\n                dictName: 'SystemTestSexSelect',\n              },\n              $editable: {\n                editable: true,\n                type: 'select',\n                dictName: 'SystemTestSexSelect',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '出生年月',\n              dataIndex: 'birthday',\n              key: 'birthday',\n              align: 'center',\n              width: 200,\n              sorter: true,\n              sortOrder: this.sortOrder('birthday'),\n              render: (val) => <DateDisplay.DateDisplay10 value={val} />,\n              $search: {\n                type: 'rangePicker',\n                visible: true,\n                startName: 'birthDayStart',\n                endName: 'birthDayEnd',\n              },\n              $editable: {\n                editable: true,\n                type: 'datePicker',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDateData({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '身高',\n              dataIndex: 'height',\n              key: 'height',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('height'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'inputNumberDecimal2',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '体重',\n              dataIndex: 'width',\n              key: 'width',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('width'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'inputNumberDecimal2',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '籍贯',\n              dataIndex: 'homeTown',\n              key: 'homeTown',\n              ellipsis: true,\n              width: 200,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n            {\n              title: '现居住地',\n              dataIndex: 'address',\n              key: 'address',\n              width: 300,\n              $search: {\n                type: 'input',\n                visible: true,\n                valueAttrs: {\n                  colSpan: 5,\n                },\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                onSave: ({ record, dataIndex, value }) =>\n                  new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  }),\n              },\n            },\n          ]);\n        }\n\n        /!**\n         * renderSearchFooterItems\n         * 渲染表格的工具栏\n         * @override\n         *!/\n        renderSearchFooterItems(defaultItems) {\n          return super.renderSearchFooterItems([\n            {\n              key: 'editorTable',\n              value: <EditableTableControl />,\n            },\n            ...defaultItems,\n          ]);\n        }\n      }\n\n      TableEditableStateSearchTable.propTypes = {};\n\n      const Wrap = SearchTableStateImplementFactory({\n        serviceNames: [serviceName],\n        middleWares: [],\n        reducer: null,\n        models: getModels(),\n      })(TableEditableStateSearchTable);\n\n      export default Wrap;\n            ",type:"PlayGround",renderChildren:()=>l.createElement("div",{style:{display:"flex",height:700}},l.createElement(E.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:I}))},{id:"p18",name:"始终处于编辑状态的可编辑单元格",mode:"code",scope:{React:l},cardProps:{description:{title:"始终处于编辑状态的可编辑单元格",info:"始终处于编辑状态的可编辑单元格"}},codeText:"\n      import React from 'react';\n\n      import { DateDisplay, Resource, SearchTable } from '@baifendian/adhere';\n\n      import './serviceRegister';\n\n      const { SearchTableStateImplementFactory, ProEditableCellSearchStateTable } = SearchTable;\n\n      const serviceName = 'user';\n\n      function getModels() {\n        const models = [];\n        const requireComponent = require.context('./model', false, /.*\\.(js)$/);\n        requireComponent.keys().forEach((fileName) => {\n          const model = requireComponent(fileName);\n          models.push(model.default());\n        });\n\n        return models;\n      }\n\n      /!**\n       * EditableCellUseKeepEditStateSearchTable\n       * @class EditableCellUseKeepEditStateSearchTable\n       * @classdesc EditableCellUseKeepEditStateSearchTable\n       *!/\n      class EditableCellUseKeepEditStateSearchTable extends ProEditableCellSearchStateTable {\n        getComponentId() {\n          return 'EditableCellUseKeepEditStateSearchTable';\n        }\n\n        getServiceName() {\n          return serviceName;\n        }\n\n        getFetchListPropName() {\n          return 'fetchList';\n        }\n\n        getOrderFieldValue() {\n          return 'height';\n        }\n\n        /!**\n         * getDataKey\n         * @description - 获取数据的key\n         * @protected\n         *!/\n        getDataKey() {\n          return 'list';\n        }\n\n        /!**\n         * getTotalKey\n         * @description - 获取total的key\n         * @protected\n         *!/\n        getTotalKey() {\n          return 'totalCount';\n        }\n\n        /!**\n         * Table的列\n         * @override\n         * @return {*[]}\n         *!/\n        getColumns() {\n          return super.getColumns([\n            {\n              title: '姓名',\n              dataIndex: 'name',\n              key: 'name',\n              width: 150,\n              render: (val) => <div style={{ color: 'red' }}>{val}</div>,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入姓名',\n                  },\n                ],\n                useKeepEdit: true,\n                props: {\n                  onBlur: (e, { updateEditorCellData }) => {\n                    updateEditorCellData();\n                  },\n                },\n              },\n              $resizable: true,\n            },\n            {\n              title: '性别',\n              dataIndex: 'sex',\n              key: 'sex',\n              align: 'center',\n              width: 150,\n              render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n              $search: {\n                type: 'select',\n                visible: true,\n                dictName: 'SystemTestSexSelect',\n              },\n              $editable: {\n                editable: true,\n                type: 'select',\n                dictName: 'SystemTestSexSelect',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                useKeepEdit: true,\n                props: {\n                  onChange: (e, { updateEditorCellData }) => {\n                    updateEditorCellData();\n                  },\n                },\n              },\n            },\n            {\n              title: '出生年月',\n              dataIndex: 'birthday',\n              key: 'birthday',\n              align: 'center',\n              width: 200,\n              sorter: true,\n              sortOrder: this.sortOrder('birthday'),\n              render: (val) => <DateDisplay.DateDisplay10 value={val} />,\n              $search: {\n                type: 'rangePicker',\n                visible: true,\n                startName: 'birthDayStart',\n                endName: 'birthDayEnd',\n              },\n              $editable: {\n                editable: true,\n                type: 'datePicker',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                useKeepEdit: true,\n                props: {\n                  onChange: (e, { updateEditorCellData }) => {\n                    updateEditorCellData();\n                  },\n                },\n              },\n            },\n            {\n              title: '身高',\n              dataIndex: 'height',\n              key: 'height',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('height'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'inputNumberDecimal2',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入身高',\n                  },\n                ],\n                useKeepEdit: true,\n                props: {\n                  onBlur: (e, { updateEditorCellData }) => {\n                    updateEditorCellData();\n                  },\n                },\n              },\n            },\n            {\n              title: '体重',\n              dataIndex: 'width',\n              key: 'width',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('width'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'inputNumberDecimal2',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入体重',\n                  },\n                ],\n                useKeepEdit: true,\n                props: {\n                  onBlur: (e, { updateEditorCellData }) => {\n                    updateEditorCellData();\n                  },\n                },\n              },\n            },\n            {\n              title: '籍贯',\n              dataIndex: 'homeTown',\n              key: 'homeTown',\n              ellipsis: true,\n              width: 200,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入籍贯',\n                  },\n                ],\n                useKeepEdit: true,\n                props: {\n                  onBlur: (e, { updateEditorCellData }) => {\n                    updateEditorCellData();\n                  },\n                },\n              },\n            },\n            {\n              title: '现居住地',\n              dataIndex: 'address',\n              key: 'address',\n              width: 300,\n              $search: {\n                type: 'input',\n                visible: true,\n                valueAttrs: {\n                  colSpan: 5,\n                },\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入居住地',\n                  },\n                ],\n                useKeepEdit: true,\n                props: {\n                  onBlur: (e, { updateEditorCellData }) => {\n                    updateEditorCellData();\n                  },\n                },\n              },\n            },\n            // {\n            //   title: '操作',\n            //   dataIndex: this.getOptionsColumnDataIndex(),\n            //   key: this.getOptionsColumnDataIndex(),\n            //   width: 260,\n            //   render: (v, record) => (\n            //     <OptionsWrap style={{ justifyContent: 'center' }}>\n            //       {this.renderOptionColumn(\n            //         [\n            //           {\n            //             key: 'view',\n            //             value: <a>查看</a>,\n            //           },\n            //           {\n            //             key: 'delete',\n            //             value: (\n            //               <DelConfirm\n            //                 success={() =>\n            //                   Promise.resolve().then(() => {\n            //                     this.fetchData();\n            //                   })\n            //                 }\n            //               >\n            //                 <a>删除</a>\n            //               </DelConfirm>\n            //             ),\n            //           },\n            //         ],\n            //         { value: v, record },\n            //       )}\n            //     </OptionsWrap>\n            //   ),\n            // },\n          ]);\n        }\n      }\n\n      EditableCellUseKeepEditStateSearchTable.propTypes = {};\n\n      const Wrap = SearchTableStateImplementFactory({\n        serviceNames: [serviceName],\n        middleWares: [],\n        reducer: null,\n        models: getModels(),\n      })(EditableCellUseKeepEditStateSearchTable);\n\n      export default Wrap;\n            ",type:"PlayGround",renderChildren:()=>l.createElement("div",{style:{display:"flex",height:700}},l.createElement(u.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:I}))},{id:"p19",name:"可编辑的表格自定义trigger",mode:"code",scope:{React:l},cardProps:{description:{title:"可编辑的表格自定义trigger",info:"可编辑的表格自定义trigger"}},codeText:"\n      import React from 'react';\n\n      import { CheckCircleOutlined, CloseCircleOutlined, CopyOutlined } from '@ant-design/icons';\n      import { DateDisplay, Resource, SearchTable } from '@baifendian/adhere';\n\n      import './serviceRegister';\n\n      const { SearchTableStateImplementFactory, ProEditableCellSearchStateTable, OptionsWrap } =\n        SearchTable;\n\n      const serviceName = 'user';\n\n      function getModels() {\n        const models = [];\n        const requireComponent = require.context('./model', false, /.*\\.(js)$/);\n        requireComponent.keys().forEach((fileName) => {\n          const model = requireComponent(fileName);\n          models.push(model.default());\n        });\n\n        return models;\n      }\n\n      /!**\n       * EditableCellRenderTriggerStateSearchTable\n       * @class EditableCellRenderTriggerStateSearchTable\n       * @classdesc EditableCellRenderTriggerStateSearchTable\n       *!/\n      class EditableCellRenderTriggerStateSearchTable extends ProEditableCellSearchStateTable {\n        getComponentId() {\n          return 'EditableCellRenderTriggerStateSearchTable';\n        }\n\n        getServiceName() {\n          return serviceName;\n        }\n\n        getFetchListPropName() {\n          return 'fetchList';\n        }\n\n        getOrderFieldValue() {\n          return 'height';\n        }\n\n        /!**\n         * getDataKey\n         * @description - 获取数据的key\n         * @protected\n         *!/\n        getDataKey() {\n          return 'list';\n        }\n\n        /!**\n         * getTotalKey\n         * @description - 获取total的key\n         * @protected\n         *!/\n        getTotalKey() {\n          return 'totalCount';\n        }\n\n        /!**\n         * Table的列\n         * @override\n         * @return {*[]}\n         *!/\n        getColumns() {\n          return super.getColumns([\n            {\n              title: '姓名',\n              dataIndex: 'name',\n              key: 'name',\n              width: 150,\n              render: (val) => <div style={{ color: 'red' }}>{val}</div>,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入姓名',\n                  },\n                ],\n                renderToEditTrigger: () => <CopyOutlined />,\n                renderSaveTrigger: () => <CheckCircleOutlined />,\n                renderCancelTrigger: () => <CloseCircleOutlined />,\n                onSave: ({ value, record, dataIndex }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n              $resizable: true,\n            },\n            {\n              title: '性别',\n              dataIndex: 'sex',\n              key: 'sex',\n              align: 'center',\n              width: 150,\n              render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n              $search: {\n                type: 'select',\n                visible: true,\n                dictName: 'SystemTestSexSelect',\n              },\n              $editable: {\n                editable: true,\n                type: 'select',\n                dictName: 'SystemTestSexSelect',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                renderToEditTrigger: () => <CopyOutlined />,\n                renderSaveTrigger: () => <CheckCircleOutlined />,\n                renderCancelTrigger: () => <CloseCircleOutlined />,\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '出生年月',\n              dataIndex: 'birthday',\n              key: 'birthday',\n              align: 'center',\n              width: 200,\n              sorter: true,\n              sortOrder: this.sortOrder('birthday'),\n              render: (val) => <DateDisplay.DateDisplay10 value={val} />,\n              $search: {\n                type: 'rangePicker',\n                visible: true,\n                startName: 'birthDayStart',\n                endName: 'birthDayEnd',\n              },\n              $editable: {\n                editable: true,\n                type: 'datePicker',\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ],\n                renderToEditTrigger: () => <CopyOutlined />,\n                renderSaveTrigger: () => <CheckCircleOutlined />,\n                renderCancelTrigger: () => <CloseCircleOutlined />,\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDateData({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '身高',\n              dataIndex: 'height',\n              key: 'height',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('height'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'inputNumberDecimal2',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入身高',\n                  },\n                ],\n                renderToEditTrigger: () => <CopyOutlined />,\n                renderSaveTrigger: () => <CheckCircleOutlined />,\n                renderCancelTrigger: () => <CloseCircleOutlined />,\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '体重',\n              dataIndex: 'width',\n              key: 'width',\n              align: 'center',\n              width: 150,\n              sorter: true,\n              sortOrder: this.sortOrder('width'),\n              $search: {\n                type: 'inputNumberDecimal2',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'inputNumberDecimal2',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入体重',\n                  },\n                ],\n                renderToEditTrigger: () => <CopyOutlined />,\n                renderSaveTrigger: () => <CheckCircleOutlined />,\n                renderCancelTrigger: () => <CloseCircleOutlined />,\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '籍贯',\n              dataIndex: 'homeTown',\n              key: 'homeTown',\n              ellipsis: true,\n              width: 200,\n              $search: {\n                type: 'input',\n                visible: true,\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入籍贯',\n                  },\n                ],\n                renderToEditTrigger: () => <CopyOutlined />,\n                renderSaveTrigger: () => <CheckCircleOutlined />,\n                renderCancelTrigger: () => <CloseCircleOutlined />,\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n            {\n              title: '现居住地',\n              dataIndex: 'address',\n              key: 'address',\n              width: 300,\n              $search: {\n                type: 'input',\n                visible: true,\n                valueAttrs: {\n                  colSpan: 5,\n                },\n              },\n              $editable: {\n                editable: true,\n                type: 'input',\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入居住地',\n                  },\n                ],\n                renderToEditTrigger: () => <CopyOutlined />,\n                renderSaveTrigger: () => <CheckCircleOutlined />,\n                renderCancelTrigger: () => <CloseCircleOutlined />,\n                onSave: ({ record, dataIndex, value }) => {\n                  return new Promise((resolve) => {\n                    this.updateEditorCellDate({\n                      record,\n                      dataIndex,\n                      value,\n                    }).then(() => resolve());\n                  });\n                },\n              },\n            },\n          ]);\n        }\n      }\n\n      EditableCellRenderTriggerStateSearchTable.propTypes = {};\n\n      const Wrap = SearchTableStateImplementFactory({\n        serviceNames: [serviceName],\n        middleWares: [],\n        reducer: null,\n        models: getModels(),\n      })(EditableCellRenderTriggerStateSearchTable);\n\n      export default Wrap;\n            ",type:"PlayGround",renderChildren:()=>l.createElement("div",{style:{display:"flex",height:700}},l.createElement(o.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:I}))},{id:"p20",name:"拖拽排序",mode:"code",scope:{React:l},cardProps:{description:{title:"拖拽排序",info:"拖拽排序"}},codeText:"",type:"PlayGround",renderChildren:()=>l.createElement("div",{style:{display:"flex",height:700}},l.createElement(h.Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:I}))}]}),l.createElement(i.sB,{title:"Props",config:[{border:!0,title:"Table",data:[{params:"className",desc:"附加样式",type:"string",defaultVal:""},{params:"style",desc:"附加样式",type:"object",defaultVal:"{}"},{params:"tableClassName",desc:"附加样式",type:"string",defaultVal:""},{params:"tableStyle",desc:"附加样式",type:"object",defaultVal:"{}"},{params:"searchClassName",desc:"附加样式",type:"string",defaultVal:""},{params:"searchStyle",desc:"附加样式",type:"object",defaultVal:"{}"},{params:"reset",desc:"是否重置",type:"boolean",defaultVal:"false"},{params:"firstLoading",desc:"是否是第一次加载",type:"boolean",defaultVal:"false"},{params:"antdTableProps",desc:"Table的antd配置",type:"object",defaultVal:"{}"},{params:"isShowExpandSearch",desc:"是否有展开和收缩的功能",type:"boolean",defaultVal:"true"},{params:"defaultExpandSearchCollapse",desc:"展开和收缩的默认状态",type:"boolean",defaultVal:"true"},{params:"fitSearch",desc:"撑开search",type:"boolean",defaultVal:"true"},{params:"fitTable",desc:"撑开表格",type:"boolean",defaultVal:"true"},{params:"autoFixed",desc:"是否是查询固定，表格自适应",type:"boolean",defaultVal:"true"},{params:"fixedHeaderAutoTable",desc:"锁定列头，表格滚动",type:"boolean",defaultVal:"false"},{params:"fixedTableSpaceBetween",desc:"两端固定(表格的头始终在上方，分页始终在下方)",type:"boolean",defaultVal:"false"}]},{border:!0,title:"TableImplement",data:[{params:"getTableWrapperInstance",desc:"",type:"Function",defaultVal:""}]}]}),l.createElement(i.ae,{title:"Api",config:[{border:!0,title:"重写的方法",data:[{name:"isShowNumber",desc:"表格是否显示序号",modifier:"public",params:[],returnType:"boolean",returnDesc:""},{name:"getTableNumberColumnWidth",desc:"表格序号列的宽度",modifier:"public",params:[],returnType:"number",returnDesc:"80"},{name:"getNumberGeneratorRule",desc:"获取符号列的生成规则",modifier:"public",params:[],returnType:"string",returnDesc:"NUMBER_GENERATOR_RULE_ALONE(单独模式),NUMBER_GENERATOR_RULE_CONTINUITY(连续模式)"},{name:"renderTableNumberColumn",desc:"渲染序号列",modifier:"public",params:[{name:"number",desc:"",type:"string",defaultVal:"",required:""},{name:"params",desc:"",type:"{ record: object; index: number }",defaultVal:"",required:""}],returnType:"React.ReactElement",returnDesc:""},{name:"renderTableHeader",desc:"渲染表格的头",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderTableFooter",desc:"渲染表格的脚",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"getRowKey",desc:"获取表格的主键属性",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getData",desc:"获取表格数据",modifier:"public",params:[],returnType:"Array<Object>",returnDesc:""},{name:"getColumns",desc:"获取表格列的信息",modifier:"public",params:[],returnType:"Array<object>",returnDesc:""},{name:"getRowSelection",desc:"获取表格行选择对象",modifier:"public",params:[],returnType:"TableRowSelection<object>",returnDesc:""},{name:"renderSearchForm",desc:"渲染查询的UI",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderTableHeader",desc:"渲染表格的头",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderTableFooter",desc:"渲染表格的脚",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderTableNumberColumn",desc:"渲染序号列",modifier:"public",params:[{name:"number",desc:"",type:"string",defaultVal:"",required:""}],returnType:"React.ReactElement",returnDesc:""},{name:"getTotal",desc:"获取表格数据的总数",modifier:"public",params:[],returnType:"number",returnDesc:""},{name:"getOrderFieldProp",desc:"获取表格的排序字段",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getOrderProp",desc:"获取表格的排序属性",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"onSubTableChange",desc:"获取表格change句柄",modifier:"public",params:[{name:"pagination",desc:"",type:"TablePaginationConfig",defaultVal:"",required:""},{name:"filters",desc:"",type:"Record<string, FilterValue | null>",defaultVal:"",required:""},{name:"sorter",desc:"",type:"SorterResult<object> | SorterResult<object>[]",defaultVal:"",required:""},{name:"extra",desc:"",type:"TableCurrentDataSource<object>",defaultVal:"",required:""}],returnType:"void",returnDesc:""},{name:"clear",desc:"清除操作",modifier:"public",params:[],returnType:"Promise<any>",returnDesc:""},{name:"renderSearchFooterItems",desc:"渲染SearchFooter的按钮组",modifier:"public",params:[],returnType:"Array<React.ReactElement> | null",returnDesc:""},{name:"onSearch",desc:"进行查询",modifier:"public",params:[],returnType:"void",returnDesc:""}]},{border:!0,title:"searchtableimplement重写的方法",data:[{name:"getFetchListPropName",desc:"获取调用列表接口的函数名",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getFetchListPropNameToFirstUpper",desc:"获取调用列表接口的函数名首字母大写",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"onSelectChange",desc:"",modifier:"public",params:[{name:"property",desc:"",type:"string",defaultVal:"",required:""},{name:"value",desc:"",type:"string",defaultVal:"",required:""}],returnType:"",returnDesc:""},{name:"onInputChange",desc:"",modifier:"public",params:[{name:"property",desc:"",type:"string",defaultVal:"",required:""},{name:"e",desc:"",type:"object",defaultVal:"",required:""}],returnType:"",returnDesc:""},{name:"onDateTimeRangeChange",desc:"",modifier:"public",params:[{name:"propertys",desc:"",type:"Array<string>",defaultVal:"",required:""},{name:"moments",desc:"",type:"Array<moment>",defaultVal:"",required:""}],returnType:"",returnDesc:""},{name:"getParams",desc:"获取查询参数对象",modifier:"public",params:[],returnType:"Object",returnDesc:""},{name:"getServiceName",desc:"获取接口服务的model名称",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getFetchDataParams",desc:"获取调用数据接口的参数",modifier:"public",params:[],returnType:"object",returnDesc:""},{name:"isShowNumber",desc:"是否线上序号列",modifier:"public",params:[],returnType:"boolean",returnDesc:""},{name:"getNumberGeneratorRule",desc:"表格序号列的生成规则",modifier:"public",params:[],returnType:"Symbol",returnDesc:""},{name:"getTableNumberColumnWidth",desc:"表格序号列的宽度",modifier:"public",params:[],returnType:"number",returnDesc:""},{name:"getRowKey",desc:"数据的主键",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getData",desc:"Table的数据(Table的dataSource字段)",modifier:"public",params:[],returnType:"Array<object>",returnDesc:""},{name:"getDataKey",desc:"获取数据的key",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getColumns",desc:"Table的列",modifier:"public",params:[],returnType:"Array<ColumnType<object>>",returnDesc:""},{name:"getRowSelection",desc:"获取表格行选择对象",modifier:"public",params:[],returnType:"TableRowSelection<object>",returnDesc:""},{name:"renderSearchFormBefore",desc:"渲染Table查询的表单之前的UI",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderSearchForm",desc:"渲染Table查询的表单",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderSearchFormAfter",desc:"渲染Table查询的表单之后的UI",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderInner",desc:"渲染主体",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"getTotal",desc:"Table数据的总条数",modifier:"public",params:[],returnType:"number",returnDesc:""},{name:"getTotalKey",desc:"获取total的key",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getLimit",desc:"获取分页条数",modifier:"public",params:[],returnType:"number",returnDesc:""},{name:"getOrderFieldProp",desc:"获取排序字段",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getOrderFieldValue",desc:"获取默认排序字段的值",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getOrderProp",desc:"获取排序方式",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getOrderPropValue",desc:"获取默认排序方式",modifier:"public",params:[],returnType:"'descend' | 'ascend'",returnDesc:""},{name:"clear",desc:"清空查询条件",modifier:"public",params:[],returnType:"Promise<any>",returnDesc:""},{name:"onClear",desc:"点击重置按钮",modifier:"public",params:[],returnType:"Promise<void>",returnDesc:""},{name:"renderSearchFooterItems",desc:"渲染表格的工具栏",modifier:"public",params:[],returnType:"Array<any>",returnDesc:""},{name:"showLoading",desc:"是否显示遮罩",modifier:"public",params:[],returnType:"boolean",returnDesc:""},{name:"fetchData",desc:"加载数据",modifier:"public",params:[],returnType:"Promise<any>",returnDesc:""},{name:"fetchDataExecute",desc:"真正的执行获取列表数据的接口",modifier:"public",params:[{name:"searchParams",desc:"",type:"object",defaultVal:"",required:""}],returnType:"Promise<any>",returnDesc:""},{name:"onSearch",desc:"点击查询",modifier:"public",params:[],returnType:"Promise<any>",returnDesc:""}]}]}))}},213556:function(e,t,n){"use strict";n.d(t,{i:function(){return s}});var r=n(518660),a=n(594062),l=n.n(a);const i=[];i.length=300,i.fill(0);const s={code:200,data:{total:1,list:[{id:l().random.uuid(),name:l().internet.userName(),sex:`${r.Z.generatorRandom(0,1)}`,homeTown:l().address.city(),birthday:(new Date).getTime(),deptName:l().company.companyName(),height:l().random.number(),width:l().random.number()}]}};t.Z={code:200,data:{total:i.length,list:i.map((()=>({id:l().random.uuid(),name:l().internet.userName(),sex:`${r.Z.generatorRandom(0,1)}`,homeTown:l().address.city(),address:l().address.city(),birthday:(new Date).getTime(),deptName:l().company.companyName(),height:l().random.number(),width:l().random.number()})))}}},174457:function(e,t,n){"use strict";n.r(t);var r=n(444033);t.default=()=>Object.assign(r.Z.model("user"),{})},827584:function(e,t,n){"use strict";var r=n(390242),a=n(793055),l=n(487861),i=n(690171);n(527637);const{ProSearchRowDragSortStateTable:s,SearchTableStateImplementFactory:d}=l.default,o="user";class c extends s{getComponentId(){return"RowDragSort"}getServiceName(){return o}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>i.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0}},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>a.Z.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"select",visible:!0,dictName:"SystemTestSexSelect"}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>i.createElement(r.Z.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}}}])}}c.propTypes={};const u=d({serviceNames:[o],middleWares:[],reducer:null,models:function(){const e=[],t=n(717435);return t.keys().forEach((n=>{const r=t(n);e.push(r.default())})),e}()})(c);t.Z=u},650066:function(e,t,n){"use strict";var r=n(724015),a=n(627217),l=n(586915),i=n(390242),s=n(793055),d=n(487861),o=n(5254),c=n(690171),u=n(774068),m=n(142835);n(527637);const{ProSearchStateTable:p,OptionsWrap:h,SearchTableStateImplementFactory:b,DisabledOption:y}=d.default,g="user";class v extends p{getComponentId(){return"ProSearchStateTableImpl"}getServiceName(){return g}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,$search:{type:"input",visible:!0}},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>s.Z.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"select",visible:!0,dictName:"SystemTestSexSelect"}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>c.createElement(i.Z.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",width:200,$search:{type:"input",visible:!0}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}}},{title:"操作",dataIndex:this.getOptionsColumnDataIndex(),key:this.getOptionsColumnDataIndex(),width:200,render:(e,t)=>c.createElement(h,{style:{justifyContent:"center"}},this.renderOptionColumn([{key:"edit",value:c.createElement(l.Z,{conditional:!1,noMatch:()=>c.createElement(y,null,"编辑")},(()=>c.createElement("a",null,"编辑")))},{key:"view",value:c.createElement("a",null,"查看")},{key:"delete",value:c.createElement(a.Z,{success:()=>Promise.resolve().then((()=>{this.fetchData()}))},c.createElement("a",null,"删除"))}],{value:e,record:t}))}])}renderSearchFooterItems(e){return super.renderSearchFooterItems([{key:"add",value:c.createElement(o.ZP,{key:"add",icon:c.createElement(u.Z,null),type:"primary",onClick:()=>{}},"新增")},{key:"delete",value:c.createElement(o.ZP,{key:"delete",icon:c.createElement(m.Z,null),type:"primary",onClick:()=>{const{selectedRowKeys:e}=this.state;e.length?a.Z.open((()=>Promise.resolve().then((()=>{this.setState({selectedRowKeys:[]}),this.fetchData()})))):(0,r.Z)("请选择要删除的数据")}},"删除")},...e])}}v.propTypes={};const S=b({serviceNames:[g],middleWares:[],reducer:null,models:function(){const e=[],t=n(717435);return t.keys().forEach((n=>{const r=t(n);e.push(r.default())})),e}()})(v);t.Z=S},138806:function(e,t,n){"use strict";var r=n(660030),a=n(66998),l=n(705134),i=n(5254),s=n(690171),d=n(875831);class o extends d.Z{renderSearchFormBefore(){return s.createElement(r.Z,{gutter:16},s.createElement(a.Z,{span:12},s.createElement(l.Z,{title:"Active Users",value:112893})),s.createElement(a.Z,{span:12},s.createElement(l.Z,{title:"Account Balance (CNY)",value:112893,precision:2}),s.createElement(i.ZP,{style:{marginTop:16},type:"primary"},"Recharge")),s.createElement(a.Z,{span:12},s.createElement(l.Z,{title:"Active Users",value:112893,loading:!0})))}renderSearchFormAfter(){return s.createElement(r.Z,{gutter:16},s.createElement(a.Z,{span:12},s.createElement(l.Z,{title:"Active Users",value:112893})),s.createElement(a.Z,{span:12},s.createElement(l.Z,{title:"Account Balance (CNY)",value:112893,precision:2}),s.createElement(i.ZP,{style:{marginTop:16},type:"primary"},"Recharge")),s.createElement(a.Z,{span:12},s.createElement(l.Z,{title:"Active Users",value:112893,loading:!0})))}}t.Z=o},999707:function(e,t,n){"use strict";var r=n(390242),a=n(793055),l=n(487861),i=n(690171);n(527637);const{SearchTableStateImplementFactory:s,ProEditableRowSearchStateTable:d,EditableRowControl:o}=l.default,c="user";class u extends d{getComponentId(){return"RowEditableStateSearchTable"}getServiceName(){return c}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>i.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入姓名"}],onSave:e=>{let{value:t,record:n,dataIndex:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:n,dataIndex:r,value:t}).then((()=>e()))}))}}},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>a.Z.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"select",visible:!0,dictName:"SystemTestSexSelect"},$editable:{editable:!0,type:"select",dictName:"SystemTestSexSelect",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>i.createElement(r.Z.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"},$editable:{editable:!0,type:"datePicker",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDateData({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"操作",dataIndex:this.getOptionsColumnDataIndex(),key:this.getOptionsColumnDataIndex(),width:100,render:(e,t)=>i.createElement(o,{record:t,rowKey:this.getRowKey(),editorRowId:this.state.editorRowId})}])}}u.propTypes={};const m=s({serviceNames:[c],middleWares:[],reducer:null,models:function(){const e=[],t=n(717435);return t.keys().forEach((n=>{const r=t(n);e.push(r.default())})),e}()})(u);t.Z=m},881303:function(e,t,n){"use strict";var r=n(487861),a=(n(690171),n(875831));const{Table:l}=r.default;class i extends a.Z{getRowSelectionMode(){return l.ROW_SELECTION_CONTINUOUS_MODE}}t.Z=i},588039:function(e,t,n){"use strict";var r=n(487861),a=(n(690171),n(875831));const{Table:l}=r.default;class i extends a.Z{getRowSelectionMode(){return l.ROW_SELECTION_NORMAL_MODE}}t.Z=i},527637:function(e,t,n){"use strict";var r=n(444033);!function(){const e=n(871376),t={};e.keys().forEach((n=>{const r=n.substring(2,n.length-3);t[r]=e(n)})),r.Z.initConfig(t)}()},980576:function(e,t,n){"use strict";n.r(t),n.d(t,{fetchList:function(){return l}});const r=new(n(559614).Z)(""),a=n(213556).Z,l={call:e=>{let{page:t,limit:n}=e;const l=JSON.parse(JSON.stringify(a)),i={code:200,data:{list:l.data.list.slice((t-1)*n,t*n),totalCount:l.data.total}};return r.get({path:i,mock:!0,loading:{show:!1}}).promise},defaultResult:()=>({totalCount:0,list:[]})};t.default={codeKey:"code",codeSuccessKey:200,dataKey:"data",messageKey:"message"}},423478:function(e,t,n){"use strict";var r=n(793055),a=n(481131),l=n(487861),i=n(622613),s=n(360346),d=n(82607),o=n(443011),c=n(219665),u=n.n(c),m=n(566891),p=n.n(m),h=n(690171);n(527637);const{Option:b}=i.default,{RangePicker:y}=s.default,{TableStateImplement:g,SearchTableStateImplementFactory:v}=l.default,{Label:S,Value:T}=a.default,f="user";class x extends g{componentWillReceiveProps(e){super.componentWillReceiveProps(e),this.props.pagination!==e.pagination&&this.setState({scrollY:0})}getServiceName(){return f}getOrderFieldValue(){return"height"}getTotalKey(){return"totalCount"}renderSearchForm(){return h.createElement(a.default,{density:"middle",data:[{name:"g1",width:"100%",columnCount:3,colgroup:[,"auto",,"auto",,"auto"],data:[{key:"UserName",label:h.createElement(S,null,"姓名："),value:h.createElement(T,null,h.createElement(d.default,{style:{width:"90%"},placeholder:"姓名",value:this.state.name,onChange:e=>{this.onInputChange("name",e)}}))},{key:"sex",label:h.createElement(S,null,"性别："),value:h.createElement(T,null,h.createElement(i.default,{style:{width:"90%"},value:this.state.sex,onChange:e=>{this.onSelectChange("sex",e)},getPopupContainer:r.Z.Dict.value.FormPopupContainer.value},r.Z.Dict.value.ResourceNormalSex.value.map((e=>h.createElement(b,{key:e.value,value:e.value},e.label)))))},{key:"birthday",label:h.createElement(S,null,"出生年月："),value:h.createElement(T,null,h.createElement(y,{style:{width:"90%"},value:[this.state.startTime,this.state.endTime],onChange:e=>{this.onDateTimeRangeChange(["startTime","endTime"],e)},getPopupContainer:r.Z.Dict.value.FormPopupContainer.value}))},{key:"homeTown",label:h.createElement(S,null,"籍贯："),value:h.createElement(T,null,h.createElement(d.default,{style:{width:"90%"},placeholder:"籍贯",value:this.state.homeTown,onChange:e=>{this.onInputChange("homeTown",e)}}))},{key:"height",label:h.createElement(S,null,"身高："),value:h.createElement(T,null,h.createElement(o.Z,{style:{width:"90%"},placeholder:"身高",value:this.state.height,onChange:e=>{this.onSelectChange("height",e)}}))},{key:"width",label:h.createElement(S,null,"体重："),value:h.createElement(T,null,h.createElement(o.Z,{style:{width:"90%"},placeholder:"体重",value:this.state.width,onChange:e=>{this.onSelectChange("width",e)}}))},{key:"deptCode",label:h.createElement(S,null,"所在部门："),value:h.createElement(T,null,h.createElement(i.default,{style:{width:"90%"},value:this.state.deptCode,getPopupContainer:r.Z.Dict.value.FormPopupContainer.value,onChange:e=>{this.onSelectChange("deptCode",e)}},h.createElement(b,{value:""},"全部"),h.createElement(b,{value:"0"},"产品部"),h.createElement(b,{value:"1"},"开发部"),h.createElement(b,{value:"2"},"工程部")))}]}]})}renderSearchFooterItems(e){return[...e]}getParams(){return{name:"",sex:"",startTime:null,endTime:null,deptCode:"",homeTown:"",width:"",height:""}}getColumns(){return[{title:"姓名",dataIndex:"name",key:"name",align:"center"},{title:"性别",dataIndex:"sex",key:"sex",align:"center",render:e=>r.Z.Dict.value.ResourceNormalSexMap.value.get(e).label},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",align:"center"},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>e?u()(e).format(r.Z.Dict.value.ResourceMomentFormat10.value()):""},{title:"所在部门",dataIndex:"deptName",key:"deptName",align:"center"},{title:"身高",dataIndex:"height",key:"height",align:"center",sorter:!0,sortOrder:this.sortOrder("height")},{title:"体重",dataIndex:"width",key:"width",align:"center",sorter:!0,sortOrder:this.sortOrder("width")}]}getFetchListPropName(){return"fetchList"}fetchDataExecute(e){return super.fetchDataExecute(e)}getPagination(){const{pagination:e}=this.props;return!!e&&super.getPagination()}onSubTableChange(e,t,n){}}x.defaultProps={pagination:!0},x.propTypes={pagination:p().bool};const E=v({serviceNames:[f],middleWares:[],reducer:null,models:function(){const e=[],t=n(717435);return t.keys().forEach((n=>{const r=t(n);e.push(r.default())})),e}()})(x);t.Z=E},875831:function(e,t,n){"use strict";var r=n(793055),a=n(559614),l=n(481131),i=n(487861),s=n(622613),d=n(360346),o=n(82607),c=n(443011),u=n(219665),m=n.n(u),p=n(566891),h=n.n(p),b=n(690171);const{TableImplement:y}=i.default,{Option:g}=s.default,{RangePicker:v}=d.default,{Label:S,Value:T}=l.default;class f extends y{constructor(e){super(e),this.request=new a.Z(""),Object.assign(this.state,{loading:!1})}componentWillReceiveProps(e){super.componentWillReceiveProps(e),this.props.pagination!==e.pagination&&this.setState({scrollY:0})}getParams(){return{name:"",sex:"",startTime:null,endTime:null,deptCode:"",homeTown:"",width:"",height:""}}getFetchDataParams(){const{searchParams:{startTime:e,endTime:t}}=this.state;return{startTime:e?`${e.format(r.Z.Dict.value.ResourceMomentFormat10.value())} 00:00:00`:null,endTime:t?`${t.format(r.Z.Dict.value.ResourceMomentFormat10.value())} 23:59:59`:null}}getData(){return this.state.dataSource.list}getPagination(){const{pagination:e}=this.props;return!!e&&super.getPagination()}getColumns(){return[{title:"姓名",dataIndex:"name",key:"name",align:"center"},{title:"性别",dataIndex:"sex",key:"sex",align:"center",render:e=>r.Z.Dict.value.ResourceNormalSexMap.value.get(e).label},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",align:"center"},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>e?m()(e).format(r.Z.Dict.value.ResourceMomentFormat10.value()):""},{title:"所在部门",dataIndex:"deptName",key:"deptName",align:"center"},{title:"身高",dataIndex:"height",key:"height",align:"center",sorter:!0,sortOrder:this.sortOrder("height")},{title:"体重",dataIndex:"width",key:"width",align:"center",sorter:!0,sortOrder:this.sortOrder("width")}]}renderSearchForm(){return b.createElement(l.default,{density:"middle",data:[{name:"g1",width:"100%",columnCount:3,colgroup:[,"auto",,"auto",,"auto"],data:[{key:"UserName",label:b.createElement(S,null,"姓名："),value:b.createElement(T,null,b.createElement(o.default,{style:{width:"90%"},placeholder:"姓名",value:this.state.name,onChange:e=>{this.onInputChange("name",e)}}))},{key:"sex",label:b.createElement(S,null,"性别："),value:b.createElement(T,null,b.createElement(s.default,{style:{width:"90%"},value:this.state.sex,onChange:e=>{this.onSelectChange("sex",e)},getPopupContainer:r.Z.Dict.value.FormPopupContainer.value},r.Z.Dict.value.ResourceNormalSex.value.map((e=>b.createElement(g,{key:e.value,value:e.value},e.label)))))},{key:"birthday",label:b.createElement(S,null,"出生年月："),value:b.createElement(T,null,b.createElement(v,{style:{width:"90%"},value:[this.state.startTime,this.state.endTime],onChange:e=>{this.onDateTimeRangeChange(["startTime","endTime"],e)},getPopupContainer:r.Z.Dict.value.FormPopupContainer.value}))},{key:"homeTown",label:b.createElement(S,null,"籍贯："),value:b.createElement(T,null,b.createElement(o.default,{style:{width:"90%"},placeholder:"籍贯",value:this.state.homeTown,onChange:e=>{this.onInputChange("homeTown",e)}}))},{key:"height",label:b.createElement(S,null,"身高："),value:b.createElement(T,null,b.createElement(c.Z,{style:{width:"90%"},placeholder:"身高",value:this.state.height,onChange:e=>{this.onSelectChange("height",e)}}))},{key:"width",label:b.createElement(S,null,"体重："),value:b.createElement(T,null,b.createElement(c.Z,{style:{width:"90%"},placeholder:"体重",value:this.state.width,onChange:e=>{this.onSelectChange("width",e)}}))},{key:"deptCode",label:b.createElement(S,null,"所在部门："),value:b.createElement(T,null,b.createElement(s.default,{style:{width:"90%"},value:this.state.deptCode,getPopupContainer:r.Z.Dict.value.FormPopupContainer.value,onChange:e=>{this.onSelectChange("deptCode",e)}},b.createElement(g,{value:""},"全部"),b.createElement(g,{value:"0"},"产品部"),b.createElement(g,{value:"1"},"开发部"),b.createElement(g,{value:"2"},"工程部")))}]}]})}getTotal(){return this.state.dataSource.total}getOrderFieldValue(){return"height"}renderSearchFooterItems(){return null}showLoading(){return this.state.loading}onSubTableChange(e,t,n){}fetchDataExecute(e){return new Promise((e=>{this.setState({loading:!0},(()=>{setTimeout((()=>{this.request.get({mock:!0,path:n(213556).Z.data}).promise.then((t=>{this.setState({dataSource:{total:t.total,list:t.list},loading:!1},(()=>{e()}))}))}),2e3)}))}))}}f.defaultProps={pagination:!0},f.propTypes={pagination:h().bool},t.Z=f},537502:function(e,t,n){"use strict";var r=n(690171),a=n(875831),l=n(816426);class i extends a.Z{renderSearchHeader(){return r.createElement("div",{className:l.Z.Header},r.createElement("h3",null,"查询表格"),r.createElement("div",null,this.renderTableDensitySetting()))}}t.Z=i},556508:function(e,t,n){"use strict";var r=n(390242),a=n(793055),l=n(487861),i=n(690171);n(527637);const{SearchTableStateImplementFactory:s,ProEditableSearchStateTable:d,EditableTableControl:o}=l.default,c="user";class u extends d{getComponentId(){return"TableEditableStateSearchTable"}getServiceName(){return c}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>i.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入姓名"}],onSave:e=>{let{value:t,record:n,dataIndex:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:n,dataIndex:r,value:t}).then((()=>e()))}))}},$resizable:!0},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>a.Z.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"select",visible:!0,dictName:"SystemTestSexSelect"},$editable:{editable:!0,type:"select",dictName:"SystemTestSexSelect",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>i.createElement(r.Z.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"},$editable:{editable:!0,type:"datePicker",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDateData({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:t,dataIndex:n,value:r}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}}])}renderSearchFooterItems(e){return super.renderSearchFooterItems([{key:"editorTable",value:i.createElement(o,null)},...e])}}u.propTypes={};const m=s({serviceNames:[c],middleWares:[],reducer:null,models:function(){const e=[],t=n(717435);return t.keys().forEach((n=>{const r=t(n);e.push(r.default())})),e}()})(u);t.Z=m},296032:function(e,t,n){"use strict";n.d(t,{$0:function(){return d},ae:function(){return u},e0:function(){return o},sB:function(){return c}});var r=n(570517),a=n(153757),l=n(690171);const{PlayGroundPageContext:i,PlayGroundPage:s}=a.default,{Section:d,CodeBoxSection:o,PropsSection:c,FunctionPropsSection:u}=s;t.ZP=function(e){let{children:t,...n}=e;const[a,d]=(0,l.useState)(),o=(0,l.useRef)();return(0,l.useEffect)((()=>{d(o.current.parentElement.parentElement)}),[]),l.createElement(i.Provider,{value:{scrollEl:a}},l.createElement(s,(0,r.Z)({ref:o},n),t))}},559614:function(e,t,n){"use strict";var r=n(591131);t.Z=r.Z},586915:function(e,t,n){"use strict";var r=n(519344);t.Z=r.Z},627217:function(e,t,n){"use strict";var r=n(639087);t.Z=r.Z},487861:function(e,t,n){"use strict";var r=n(117847);t.default=r.Z},991098:function(e,t,n){"use strict";var r=n(682796);t.Z=r.Z},481131:function(e,t,n){"use strict";var r=n(449077);t.default=r.Z},724015:function(e,t,n){"use strict";var r=n(17177);t.Z=r.Z},717435:function(e,t,n){var r={"./user.js":174457};function a(e){var t=l(e);return n(t)}function l(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=l,e.exports=a,a.id=717435},871376:function(e,t,n){var r={"./user.js":980576};function a(e){var t=l(e);return n(t)}function l(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=l,e.exports=a,a.id=871376}}]);