(self.webpackChunk_ctsj_build=self.webpackChunk_ctsj_build||[]).push([[3305],{78190:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>zr});const n="import ServiceRegister from '@ctsj/state/lib/middleware/saga/serviceregister';\r\n\r\nexport default () => Object.assign(ServiceRegister.model('user'), {});\r\n",a="import { Ajax } from '@baifendian/adhere';\r\n\r\nconst request = new Ajax('');\r\n\r\nconst data = require('../mock.js').default;\r\n\r\nexport const fetchList = (() => {\r\n  return {\r\n    call: ({ page, limit }) => {\r\n      const clone = JSON.parse(JSON.stringify(data));\r\n\r\n      const res = {\r\n        code: 200,\r\n        data: {\r\n          list: clone.data.list.slice((page - 1) * limit, page * limit),\r\n          totalCount: clone.data.total,\r\n        },\r\n      };\r\n\r\n      return request.get({\r\n        path: res,\r\n        mock: true,\r\n        loading: {\r\n          show: false,\r\n        },\r\n      }).promise;\r\n    },\r\n    defaultResult: () => ({\r\n      totalCount: 0,\r\n      list: [],\r\n    }),\r\n  };\r\n})();\r\n\r\nexport default {\r\n  codeKey: 'code',\r\n  codeSuccessKey: 200,\r\n  dataKey: 'data',\r\n  messageKey: 'message',\r\n};\r\n",l="import ServiceRegister from '@ctsj/state/lib/middleware/saga/serviceregister';\r\n\r\nfunction serviceRegister() {\r\n  const requireComponent = require.context('./service', false, /.*\\.(js)$/);\r\n\r\n  const services = {};\r\n  requireComponent.keys().forEach((fileName) => {\r\n    const serviceKey = fileName.substring(2, fileName.length - 3);\r\n    services[serviceKey] = requireComponent(fileName);\r\n  });\r\n\r\n  ServiceRegister.initConfig(services);\r\n}\r\n\r\nserviceRegister();\r\n",i="import { DatePicker, Input, InputNumber, Select } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { Ajax, Resource, SearchTable, TableGridLayout } from '@baifendian/adhere';\r\n\r\nconst { TableImplement } = SearchTable;\r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { Label, Value } = TableGridLayout;\r\n\r\n/**\r\n * Table\r\n * @class TableImpl\r\n * @classdesc TableImpl\r\n */\r\nclass TableImpl extends TableImplement {\r\n  // eslint-disable-next-line no-useless-constructor\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.request = new Ajax('');\r\n\r\n    Object.assign(this.state, {\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    super.componentWillReceiveProps(nextProps);\r\n\r\n    if (this.props.pagination !== nextProps.pagination) {\r\n      this.setState({\r\n        scrollY: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    return {\r\n      name: '',\r\n      sex: '',\r\n      startTime: null,\r\n      endTime: null,\r\n      deptCode: '',\r\n      homeTown: '',\r\n      width: '',\r\n      height: '',\r\n    };\r\n  }\r\n\r\n  getFetchDataParams() {\r\n    const {\r\n      searchParams: { startTime, endTime },\r\n    } = this.state;\r\n\r\n    return {\r\n      startTime: startTime\r\n        ? `${startTime.format(Resource.Dict.value.ResourceMomentFormat10.value())} 00:00:00`\r\n        : null,\r\n      endTime: endTime\r\n        ? `${endTime.format(Resource.Dict.value.ResourceMomentFormat10.value())} 23:59:59`\r\n        : null,\r\n    };\r\n  }\r\n\r\n  getData() {\r\n    return this.state.dataSource.list;\r\n  }\r\n\r\n  getPagination() {\r\n    const { pagination } = this.props;\r\n\r\n    if (pagination) {\r\n      return super.getPagination();\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getColumns() {\r\n    return [\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        key: 'sex',\r\n        align: 'center',\r\n        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\r\n      },\r\n      {\r\n        title: '籍贯',\r\n        dataIndex: 'homeTown',\r\n        key: 'homeTown',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '出生年月',\r\n        dataIndex: 'birthday',\r\n        key: 'birthday',\r\n        align: 'center',\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('birthday'),\r\n        render: (val) =>\r\n          val ? dayjs(val).format(Resource.Dict.value.ResourceMomentFormat10.value()) : '',\r\n      },\r\n      {\r\n        title: '所在部门',\r\n        dataIndex: 'deptName',\r\n        key: 'deptName',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '身高',\r\n        dataIndex: 'height',\r\n        key: 'height',\r\n        align: 'center',\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('height'),\r\n      },\r\n      {\r\n        title: '体重',\r\n        dataIndex: 'width',\r\n        key: 'width',\r\n        align: 'center',\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('width'),\r\n      },\r\n    ];\r\n  }\r\n\r\n  renderSearchForm() {\r\n    return (\r\n      <TableGridLayout\r\n        density=\"middle\"\r\n        data={[\r\n          {\r\n            name: 'g1',\r\n            width: '100%',\r\n            columnCount: 3,\r\n            colgroup: [, 'auto', , 'auto', , 'auto'],\r\n            data: [\r\n              {\r\n                key: 'UserName',\r\n                label: <Label>姓名：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Input\r\n                      style={{ width: '90%' }}\r\n                      placeholder=\"姓名\"\r\n                      value={this.state.name}\r\n                      onChange={(e) => {\r\n                        this.onInputChange('name', e);\r\n                      }}\r\n                    />\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'sex',\r\n                label: <Label>性别：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Select\r\n                      style={{ width: '90%' }}\r\n                      value={this.state.sex}\r\n                      onChange={(v) => {\r\n                        this.onSelectChange('sex', v);\r\n                      }}\r\n                      getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\r\n                    >\r\n                      {Resource.Dict.value.ResourceNormalSex.value.map((t) => (\r\n                        <Option key={t.value} value={t.value}>\r\n                          {t.label}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'birthday',\r\n                label: <Label>出生年月：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <RangePicker\r\n                      style={{ width: '90%' }}\r\n                      value={[this.state.startTime, this.state.endTime]}\r\n                      onChange={(dayjss) => {\r\n                        this.onDateTimeRangeChange(['startTime', 'endTime'], dayjss);\r\n                      }}\r\n                      getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\r\n                    />\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'homeTown',\r\n                label: <Label>籍贯：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Input\r\n                      style={{ width: '90%' }}\r\n                      placeholder=\"籍贯\"\r\n                      value={this.state.homeTown}\r\n                      onChange={(e) => {\r\n                        this.onInputChange('homeTown', e);\r\n                      }}\r\n                    />\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'height',\r\n                label: <Label>身高：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <InputNumber\r\n                      style={{ width: '90%' }}\r\n                      placeholder=\"身高\"\r\n                      value={this.state.height}\r\n                      onChange={(v) => {\r\n                        this.onSelectChange('height', v);\r\n                      }}\r\n                    />\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'width',\r\n                label: <Label>体重：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <InputNumber\r\n                      style={{ width: '90%' }}\r\n                      placeholder=\"体重\"\r\n                      value={this.state.width}\r\n                      onChange={(v) => {\r\n                        this.onSelectChange('width', v);\r\n                      }}\r\n                    />\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'deptCode',\r\n                label: <Label>所在部门：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Select\r\n                      style={{ width: '90%' }}\r\n                      value={this.state.deptCode}\r\n                      getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\r\n                      onChange={(v) => {\r\n                        this.onSelectChange('deptCode', v);\r\n                      }}\r\n                    >\r\n                      <Option value=\"\">全部</Option>\r\n                      <Option value=\"0\">产品部</Option>\r\n                      <Option value=\"1\">开发部</Option>\r\n                      <Option value=\"2\">工程部</Option>\r\n                    </Select>\r\n                  </Value>\r\n                ),\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n\r\n  getTotal() {\r\n    return this.state.dataSource.total;\r\n  }\r\n\r\n  getOrderFieldValue() {\r\n    return 'height';\r\n  }\r\n\r\n  renderSearchFooterItems() {\r\n    return null;\r\n  }\r\n\r\n  showLoading() {\r\n    return this.state.loading;\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  onSubTableChange(pagination, filters, sorter) {}\r\n\r\n  fetchDataExecute(searchParams) {\r\n    return new Promise((resolve) => {\r\n      this.setState(\r\n        {\r\n          loading: true,\r\n        },\r\n        () => {\r\n          setTimeout(() => {\r\n            this.request\r\n              .get({\r\n                mock: true,\r\n                // eslint-disable-next-line global-require\r\n                path: require('./mock.js').default.data,\r\n              })\r\n              .promise.then((result) => {\r\n                this.setState(\r\n                  {\r\n                    dataSource: {\r\n                      total: result.total,\r\n                      list: result.list,\r\n                    },\r\n                    loading: false,\r\n                  },\r\n                  () => {\r\n                    resolve();\r\n                  },\r\n                );\r\n              });\r\n          }, 2000);\r\n        },\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nTableImpl.defaultProps = {\r\n  pagination: true,\r\n};\r\n\r\nTableImpl.propTypes = {\r\n  pagination: PropTypes.bool,\r\n};\r\n\r\nexport default TableImpl;\r\n";var o=t(26322),s=t(19994),d=t(14732),c=t(7847),u=t(35696),p=t(9829),m=t(87318),h=t(74728),y=t(48305),b=t(97930),g=t(34419),S=t.n(g),v=t(93266),T=t.n(v);const{TableImplement:x}=p.A,{Option:f}=m.A,{RangePicker:C}=h.A,{Label:E,Value:w}=u.A;class D extends x{constructor(e){super(e),this.request=new c.A(""),Object.assign(this.state,{loading:!1})}componentWillReceiveProps(e){super.componentWillReceiveProps(e),this.props.pagination!==e.pagination&&this.setState({scrollY:0})}getParams(){return{name:"",sex:"",startTime:null,endTime:null,deptCode:"",homeTown:"",width:"",height:""}}getFetchDataParams(){const{searchParams:{startTime:e,endTime:r}}=this.state;return{startTime:e?"".concat(e.format(d.A.Dict.value.ResourceMomentFormat10.value())," 00:00:00"):null,endTime:r?"".concat(r.format(d.A.Dict.value.ResourceMomentFormat10.value())," 23:59:59"):null}}getData(){return this.state.dataSource.list}getPagination(){const{pagination:e}=this.props;return!!e&&super.getPagination()}getColumns(){return[{title:"姓名",dataIndex:"name",key:"name",align:"center"},{title:"性别",dataIndex:"sex",key:"sex",align:"center",render:e=>d.A.Dict.value.ResourceNormalSexMap.value.get(e).label},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",align:"center"},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>e?S()(e).format(d.A.Dict.value.ResourceMomentFormat10.value()):""},{title:"所在部门",dataIndex:"deptName",key:"deptName",align:"center"},{title:"身高",dataIndex:"height",key:"height",align:"center",sorter:!0,sortOrder:this.sortOrder("height")},{title:"体重",dataIndex:"width",key:"width",align:"center",sorter:!0,sortOrder:this.sortOrder("width")}]}renderSearchForm(){return o.createElement(u.A,{density:"middle",data:[{name:"g1",width:"100%",columnCount:3,colgroup:[,"auto",,"auto",,"auto"],data:[{key:"UserName",label:o.createElement(E,null,"姓名："),value:o.createElement(w,null,o.createElement(y.A,{style:{width:"90%"},placeholder:"姓名",value:this.state.name,onChange:e=>{this.onInputChange("name",e)}}))},{key:"sex",label:o.createElement(E,null,"性别："),value:o.createElement(w,null,o.createElement(m.A,{style:{width:"90%"},value:this.state.sex,onChange:e=>{this.onSelectChange("sex",e)},getPopupContainer:d.A.Dict.value.FormPopupContainer.value},d.A.Dict.value.ResourceNormalSex.value.map((e=>o.createElement(f,{key:e.value,value:e.value},e.label)))))},{key:"birthday",label:o.createElement(E,null,"出生年月："),value:o.createElement(w,null,o.createElement(C,{style:{width:"90%"},value:[this.state.startTime,this.state.endTime],onChange:e=>{this.onDateTimeRangeChange(["startTime","endTime"],e)},getPopupContainer:d.A.Dict.value.FormPopupContainer.value}))},{key:"homeTown",label:o.createElement(E,null,"籍贯："),value:o.createElement(w,null,o.createElement(y.A,{style:{width:"90%"},placeholder:"籍贯",value:this.state.homeTown,onChange:e=>{this.onInputChange("homeTown",e)}}))},{key:"height",label:o.createElement(E,null,"身高："),value:o.createElement(w,null,o.createElement(b.A,{style:{width:"90%"},placeholder:"身高",value:this.state.height,onChange:e=>{this.onSelectChange("height",e)}}))},{key:"width",label:o.createElement(E,null,"体重："),value:o.createElement(w,null,o.createElement(b.A,{style:{width:"90%"},placeholder:"体重",value:this.state.width,onChange:e=>{this.onSelectChange("width",e)}}))},{key:"deptCode",label:o.createElement(E,null,"所在部门："),value:o.createElement(w,null,o.createElement(m.A,{style:{width:"90%"},value:this.state.deptCode,getPopupContainer:d.A.Dict.value.FormPopupContainer.value,onChange:e=>{this.onSelectChange("deptCode",e)}},o.createElement(f,{value:""},"全部"),o.createElement(f,{value:"0"},"产品部"),o.createElement(f,{value:"1"},"开发部"),o.createElement(f,{value:"2"},"工程部")))}]}]})}getTotal(){return this.state.dataSource.total}getOrderFieldValue(){return"height"}renderSearchFooterItems(){return null}showLoading(){return this.state.loading}onSubTableChange(e,r,t){}fetchDataExecute(e){return new Promise((e=>{this.setState({loading:!0},(()=>{setTimeout((()=>{this.request.get({mock:!0,path:t(45020).A.data}).promise.then((r=>{this.setState({dataSource:{total:r.total,list:r.list},loading:!1},(()=>{e()}))}))}),2e3)}))}))}}D.defaultProps={pagination:!0},D.propTypes={pagination:T().bool};const I=D,k=()=>o.createElement(I,{isShowExpandSearch:!0,defaultExpandSearchCollapse:!1});var N=t(32517),P=t(85579);const R="xFhLeQkmOzRm2N1twXYr",O="OOrdUbF0E1x9bB7_RFGt",A="XO2Y1eSJK9MqFgqWk58H",j=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement(o.Fragment,null,o.createElement(P.A,{checkedChildren:"分页",checked:e,onChange:()=>{r(!e)}}),o.createElement(N.A,{direction:"vertical"}),o.createElement("div",{className:A},o.createElement(I,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,autoFixed:!0,pagination:e})))},$=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement(o.Fragment,null,o.createElement(P.A,{checkedChildren:"分页",checked:e,onChange:()=>{r(!e)}}),o.createElement(N.A,{direction:"vertical"}),o.createElement("div",{className:R},o.createElement(I,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,pagination:e})))};var F=t(80711);const L="vp7lqBBF_w2BM06QUFFX",q="PoCxbaClU7s4Nu0wyV1f";const K=class extends I{renderSearchHeader(){return o.createElement("div",{className:L},o.createElement("h3",null,"查询表格"),o.createElement("div",null,o.createElement(F.Ay,{type:"primary"},"新建")))}renderSearchFooter(){return o.createElement("div",{className:q},"renderTableFooter")}},W=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement(o.Fragment,null,o.createElement(P.A,{checkedChildren:"分页",checked:e,onChange:()=>{r(!e)}}),o.createElement(N.A,{direction:"vertical"}),o.createElement("div",{className:O},o.createElement(K,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,pagination:e})))};var B=t(45020);const G=class extends I{fetchDataExecute(e){return new Promise((e=>{this.setState({loading:!0},(()=>{setTimeout((()=>{this.request.get({mock:!0,path:B.J.data}).promise.then((r=>{this.setState({dataSource:{total:r.total,list:r.list},loading:!1},(()=>{e()}))}))}),2e3)}))}))}},_=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement(o.Fragment,null,o.createElement(P.A,{checkedChildren:"分页",checked:e,onChange:()=>{r(!e)}}),o.createElement(N.A,{direction:"vertical"}),o.createElement("div",{className:R},o.createElement(G,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e})))};var M=t(3307);!function(){const e=t(75457),r={};e.keys().forEach((t=>{const n=t.substring(2,t.length-3);r[n]=e(t)})),M.A.initConfig(r)}();const{Option:V}=m.A,{RangePicker:U}=h.A,{TableStateImplement:H,SearchTableStateImplementFactory:z}=p.A,{Label:Y,Value:X}=u.A,J="user";class Q extends H{componentWillReceiveProps(e){super.componentWillReceiveProps(e),this.props.pagination!==e.pagination&&this.setState({scrollY:0})}getServiceName(){return J}getOrderFieldValue(){return"height"}getTotalKey(){return"totalCount"}renderSearchForm(){return o.createElement(u.A,{density:"middle",data:[{name:"g1",width:"100%",columnCount:3,colgroup:[,"auto",,"auto",,"auto"],data:[{key:"UserName",label:o.createElement(Y,null,"姓名："),value:o.createElement(X,null,o.createElement(y.A,{style:{width:"90%"},placeholder:"姓名",value:this.state.name,onChange:e=>{this.onInputChange("name",e)}}))},{key:"sex",label:o.createElement(Y,null,"性别："),value:o.createElement(X,null,o.createElement(m.A,{style:{width:"90%"},value:this.state.sex,onChange:e=>{this.onSelectChange("sex",e)},getPopupContainer:d.A.Dict.value.FormPopupContainer.value},d.A.Dict.value.ResourceNormalSex.value.map((e=>o.createElement(V,{key:e.value,value:e.value},e.label)))))},{key:"birthday",label:o.createElement(Y,null,"出生年月："),value:o.createElement(X,null,o.createElement(U,{style:{width:"90%"},value:[this.state.startTime,this.state.endTime],onChange:e=>{this.onDateTimeRangeChange(["startTime","endTime"],e)},getPopupContainer:d.A.Dict.value.FormPopupContainer.value}))},{key:"homeTown",label:o.createElement(Y,null,"籍贯："),value:o.createElement(X,null,o.createElement(y.A,{style:{width:"90%"},placeholder:"籍贯",value:this.state.homeTown,onChange:e=>{this.onInputChange("homeTown",e)}}))},{key:"height",label:o.createElement(Y,null,"身高："),value:o.createElement(X,null,o.createElement(b.A,{style:{width:"90%"},placeholder:"身高",value:this.state.height,onChange:e=>{this.onSelectChange("height",e)}}))},{key:"width",label:o.createElement(Y,null,"体重："),value:o.createElement(X,null,o.createElement(b.A,{style:{width:"90%"},placeholder:"体重",value:this.state.width,onChange:e=>{this.onSelectChange("width",e)}}))},{key:"deptCode",label:o.createElement(Y,null,"所在部门："),value:o.createElement(X,null,o.createElement(m.A,{style:{width:"90%"},value:this.state.deptCode,getPopupContainer:d.A.Dict.value.FormPopupContainer.value,onChange:e=>{this.onSelectChange("deptCode",e)}},o.createElement(V,{value:""},"全部"),o.createElement(V,{value:"0"},"产品部"),o.createElement(V,{value:"1"},"开发部"),o.createElement(V,{value:"2"},"工程部")))}]}]})}renderSearchFooterItems(e){return[...e]}getParams(){return{name:"",sex:"",startTime:null,endTime:null,deptCode:"",homeTown:"",width:"",height:""}}getColumns(){return[{title:"姓名",dataIndex:"name",key:"name",align:"center"},{title:"性别",dataIndex:"sex",key:"sex",align:"center",render:e=>d.A.Dict.value.ResourceNormalSexMap.value.get(e).label},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",align:"center"},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>e?S()(e).format(d.A.Dict.value.ResourceMomentFormat10.value()):""},{title:"所在部门",dataIndex:"deptName",key:"deptName",align:"center"},{title:"身高",dataIndex:"height",key:"height",align:"center",sorter:!0,sortOrder:this.sortOrder("height")},{title:"体重",dataIndex:"width",key:"width",align:"center",sorter:!0,sortOrder:this.sortOrder("width")}]}getFetchListPropName(){return"fetchList"}fetchDataExecute(e){return super.fetchDataExecute(e)}getPagination(){const{pagination:e}=this.props;return!!e&&super.getPagination()}onSubTableChange(e,r,t){}}Q.defaultProps={pagination:!0},Q.propTypes={pagination:T().bool};const Z=z({serviceNames:[J],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(Q),ee=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement(o.Fragment,null,o.createElement(P.A,{checkedChildren:"分页",checked:e,onChange:()=>{r(!e)}}),o.createElement(N.A,{direction:"vertical"}),o.createElement("div",{className:R},o.createElement(Z,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e})))},{Table:re}=p.A;const te=class extends I{getRowSelectionMode(){return re.ROW_SELECTION_NORMAL_MODE}},ne=()=>o.createElement(te,{isShowExpandSearch:!0,defaultExpandSearchCollapse:!1}),{Table:ae}=p.A;const le=class extends I{getRowSelectionMode(){return ae.ROW_SELECTION_CONTINUOUS_MODE}},ie=()=>o.createElement(le,{isShowExpandSearch:!0,defaultExpandSearchCollapse:!1});const oe=class extends I{getColumns(){return super.getColumns().map((e=>({...e,$resizable:!0})))}},se=()=>o.createElement("div",{className:R},o.createElement(oe,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0}));const de=class extends I{renderSearchHeader(){return o.createElement("div",{className:L},o.createElement("h3",null,"查询表格"),o.createElement("div",null,this.renderColumnSetting()))}},ce=()=>o.createElement(de,{isShowExpandSearch:!0,defaultExpandSearchCollapse:!1});const ue=class extends I{renderSearchHeader(){return o.createElement("div",{className:L},o.createElement("h3",null,"查询表格"),o.createElement("div",null,this.renderTableDensitySetting()))}},pe=()=>o.createElement(ue,{isShowExpandSearch:!0,defaultExpandSearchCollapse:!1});var me=t(10346),he=t(42040),ye=t(47642);const be=class extends I{renderSearchFormBefore(){return o.createElement(me.A,{gutter:16},o.createElement(he.A,{span:12},o.createElement(ye.A,{title:"Active Users",value:112893})),o.createElement(he.A,{span:12},o.createElement(ye.A,{title:"Account Balance (CNY)",value:112893,precision:2}),o.createElement(F.Ay,{style:{marginTop:16},type:"primary"},"Recharge")),o.createElement(he.A,{span:12},o.createElement(ye.A,{title:"Active Users",value:112893,loading:!0})))}renderSearchFormAfter(){return o.createElement(me.A,{gutter:16},o.createElement(he.A,{span:12},o.createElement(ye.A,{title:"Active Users",value:112893})),o.createElement(he.A,{span:12},o.createElement(ye.A,{title:"Account Balance (CNY)",value:112893,precision:2}),o.createElement(F.Ay,{style:{marginTop:16},type:"primary"},"Recharge")),o.createElement(he.A,{span:12},o.createElement(ye.A,{title:"Active Users",value:112893,loading:!0})))}},ge=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement(o.Fragment,null,o.createElement("div",{className:O},o.createElement(be,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,pagination:e})))};var Se=t(44165),ve=t(4096),Te=t(51288),xe=t(58278),fe=t(96815),Ce=t(87151),Ee=t(6121);const{ProSearchStateTable:we,OptionsWrap:De,SearchTableStateImplementFactory:Ie,DisabledOption:ke}=p.A,Ne="user";class Pe extends we{getComponentId(){return"ProSearchStateTableImpl"}getServiceName(){return Ne}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,$search:{type:"input",visible:!0}},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>d.A.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"dict",visible:!0,dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard)}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>o.createElement(Ce.A.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",width:200,$search:{type:"input",visible:!0}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}}},{title:"操作",dataIndex:this.getOptionsColumnDataIndex(),key:this.getOptionsColumnDataIndex(),width:200,render:(e,r)=>o.createElement(De,{style:{justifyContent:"center"}},this.renderOptionColumn([{key:"edit",value:o.createElement(fe.A,{conditional:!1,noMatch:()=>o.createElement(ke,null,"编辑")},(()=>o.createElement("a",null,"编辑")))},{key:"view",value:o.createElement("a",null,"查看")},{key:"delete",value:o.createElement(xe.A,{success:()=>Promise.resolve().then((()=>{this.fetchData()}))},o.createElement("a",null,"删除"))}],{value:e,record:r}))}])}renderSearchFooterItems(e){return super.renderSearchFooterItems([{key:"add",value:o.createElement(F.Ay,{key:"add",icon:o.createElement(Te.A,null),type:"primary",onClick:()=>{}},"新增")},{key:"delete",value:o.createElement(F.Ay,{key:"delete",icon:o.createElement(ve.A,null),type:"primary",onClick:()=>{const{selectedRowKeys:e}=this.state;e.length?xe.A.open((()=>Promise.resolve().then((()=>{this.setState({selectedRowKeys:[]}),this.fetchData()})))):(0,Se.A)("请选择要删除的数据")}},"删除")},...e])}}Pe.propTypes={};const Re=Ie({serviceNames:[Ne],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(Pe),Oe=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement("div",{className:R},o.createElement(Re,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e}))},{SearchTableStateImplementFactory:Ae,ProEditableCellSearchStateTable:je,OptionsWrap:$e}=p.A,Fe="user";class Le extends je{getComponentId(){return"EditableCellStateSearchTable"}getServiceName(){return Fe}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>o.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入姓名"}],onSave:e=>{let{value:r,record:t,dataIndex:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}},$resizable:!0},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>d.A.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"dict",visible:!0,dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard)},$editable:{editable:!0,type:"dict",dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard),rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>o.createElement(Ce.A.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"},$editable:{editable:!0,type:"datePicker",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDateData({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入身高"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入体重"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入籍贯"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入居住地"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"操作",dataIndex:this.getOptionsColumnDataIndex(),key:this.getOptionsColumnDataIndex(),width:260,render:(e,r)=>o.createElement($e,{style:{justifyContent:"center"}},this.renderOptionColumn([{key:"view",value:o.createElement("a",null,"查看")},{key:"delete",value:o.createElement(xe.A,{success:()=>Promise.resolve().then((()=>{this.fetchData()}))},o.createElement("a",null,"删除"))}],{value:e,record:r}))}])}}Le.propTypes={};const qe=Ae({serviceNames:[Fe],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(Le),Ke=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement("div",{className:R},o.createElement(qe,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e}))},{SearchTableStateImplementFactory:We,ProEditableRowSearchStateTable:Be,EditableRowControl:Ge}=p.A,_e="user";class Me extends Be{getComponentId(){return"RowEditableStateSearchTable"}getServiceName(){return _e}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>o.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入姓名"}],onSave:e=>{let{value:r,record:t,dataIndex:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}}},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>d.A.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"dict",visible:!0,dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard)},$editable:{editable:!0,type:"dict",dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard),rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>o.createElement(Ce.A.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"},$editable:{editable:!0,type:"datePicker",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDateData({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"操作",dataIndex:this.getOptionsColumnDataIndex(),key:this.getOptionsColumnDataIndex(),width:100,render:(e,r)=>o.createElement(Ge,{record:r,rowKey:this.getRowKey(),editorRowId:this.state.editorRowId})}])}}Me.propTypes={};const Ve=We({serviceNames:[_e],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(Me),Ue=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement("div",{className:R},o.createElement(Ve,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e}))},{SearchTableStateImplementFactory:He,ProEditableSearchStateTable:ze,EditableTableControl:Ye}=p.A,Xe="user";class Je extends ze{getComponentId(){return"TableEditableStateSearchTable"}getServiceName(){return Xe}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>o.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入姓名"}],onSave:e=>{let{value:r,record:t,dataIndex:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}},$resizable:!0},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>d.A.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"dict",visible:!0,dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard)},$editable:{editable:!0,type:"dict",dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard),rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>o.createElement(Ce.A.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"},$editable:{editable:!0,type:"datePicker",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDateData({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请选择"}],onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}}])}renderSearchFooterItems(e){return super.renderSearchFooterItems([{key:"editorTable",value:o.createElement(Ye,null)},...e])}}Je.propTypes={};const Qe=He({serviceNames:[Xe],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(Je),Ze=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement("div",{className:R},o.createElement(Qe,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e}))},{SearchTableStateImplementFactory:er,ProEditableCellSearchStateTable:rr}=p.A,tr="user";class nr extends rr{getComponentId(){return"EditableCellUseKeepEditStateSearchTable"}getServiceName(){return tr}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>o.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入姓名"}],useKeepEdit:!0,props:{onBlur:(e,r)=>{let{updateEditorCellData:t,form:n,dataIndex:a,rowIndex:l}=r;t()}}},$resizable:!0},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>d.A.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"dict",visible:!0,dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard)},$editable:{editable:!0,type:"dict",dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard),rules:[{required:!0,message:"请选择"}],useKeepEdit:!0,props:{onChange:(e,r)=>{let{updateEditorCellData:t}=r;t()}}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>o.createElement(Ce.A.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"},$editable:{editable:!0,type:"datePicker",rules:[{required:!0,message:"请选择"}],useKeepEdit:!0,props:{onChange:(e,r)=>{let{updateEditorCellData:t}=r;t()}}}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入身高"}],useKeepEdit:!0,props:{onBlur:(e,r)=>{let{updateEditorCellData:t}=r;t()}}}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入体重"}],useKeepEdit:!0,props:{onBlur:(e,r)=>{let{updateEditorCellData:t}=r;t()}}}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入籍贯"}],useKeepEdit:!0,props:{onBlur:(e,r)=>{let{updateEditorCellData:t}=r;t()}}}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入居住地"}],useKeepEdit:!0,props:{onBlur:(e,r)=>{let{updateEditorCellData:t}=r;t()}}}}])}}nr.propTypes={};const ar=er({serviceNames:[tr],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(nr),lr=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement("div",{className:R},o.createElement(ar,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e}))};var ir=t(86066),or=t(22721),sr=t(55376);const{SearchTableStateImplementFactory:dr,ProEditableCellSearchStateTable:cr,OptionsWrap:ur}=p.A,pr="user";class mr extends cr{getComponentId(){return"EditableCellRenderTriggerStateSearchTable"}getServiceName(){return pr}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>o.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入姓名"}],renderToEditTrigger:()=>o.createElement(sr.A,null),renderSaveTrigger:()=>o.createElement(or.A,null),renderCancelTrigger:()=>o.createElement(ir.A,null),onSave:e=>{let{value:r,record:t,dataIndex:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:t,dataIndex:n,value:r}).then((()=>e()))}))}},$resizable:!0},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>d.A.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"dict",visible:!0,dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard)},$editable:{editable:!0,type:"dict",dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard),rules:[{required:!0,message:"请选择"}],renderToEditTrigger:()=>o.createElement(sr.A,null),renderSaveTrigger:()=>o.createElement(or.A,null),renderCancelTrigger:()=>o.createElement(ir.A,null),onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>o.createElement(Ce.A.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"},$editable:{editable:!0,type:"datePicker",rules:[{required:!0,message:"请选择"}],renderToEditTrigger:()=>o.createElement(sr.A,null),renderSaveTrigger:()=>o.createElement(or.A,null),renderCancelTrigger:()=>o.createElement(ir.A,null),onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDateData({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入身高"}],renderToEditTrigger:()=>o.createElement(sr.A,null),renderSaveTrigger:()=>o.createElement(or.A,null),renderCancelTrigger:()=>o.createElement(ir.A,null),onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0},$editable:{editable:!0,type:"inputNumberDecimal2",rules:[{required:!0,message:"请输入体重"}],renderToEditTrigger:()=>o.createElement(sr.A,null),renderSaveTrigger:()=>o.createElement(or.A,null),renderCancelTrigger:()=>o.createElement(ir.A,null),onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入籍贯"}],renderToEditTrigger:()=>o.createElement(sr.A,null),renderSaveTrigger:()=>o.createElement(or.A,null),renderCancelTrigger:()=>o.createElement(ir.A,null),onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}},$editable:{editable:!0,type:"input",rules:[{required:!0,message:"请输入居住地"}],renderToEditTrigger:()=>o.createElement(sr.A,null),renderSaveTrigger:()=>o.createElement(or.A,null),renderCancelTrigger:()=>o.createElement(ir.A,null),onSave:e=>{let{record:r,dataIndex:t,value:n}=e;return new Promise((e=>{this.updateEditorCellDate({record:r,dataIndex:t,value:n}).then((()=>e()))}))}}}])}}mr.propTypes={};const hr=dr({serviceNames:[pr],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(mr),yr=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement("div",{className:R},o.createElement(hr,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e}))},{ProSearchRowDragSortStateTable:br,SearchTableStateImplementFactory:gr}=p.A,Sr="user";class vr extends br{getComponentId(){return"RowDragSort"}getServiceName(){return Sr}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,render:e=>o.createElement("div",{style:{color:"red"}},e),$search:{type:"input",visible:!0}},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>d.A.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"dict",visible:!0,dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard)}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>o.createElement(Ce.A.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",ellipsis:!0,width:200,$search:{type:"input",visible:!0}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}}}])}}vr.propTypes={};const Tr=gr({serviceNames:[Sr],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(vr),xr=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement("div",{className:R},o.createElement(Tr,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e}))};var fr=t(66003);const{ProSearchStateTable:Cr,OptionsWrap:Er,SearchTableStateImplementFactory:wr,DisabledOption:Dr}=p.A,Ir="user";class kr extends Cr{getComponentId(){return"ProSearchStateTableImpl"}getServiceName(){return Ir}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}renderAdvancedSearchPanel(e){let{advancedSearchConfig:r,tableGridLayoutConfig:t,groupData:n,remainingGroupData:a}=e;const l=n[0].data;return o.createElement("div",null,o.createElement(fr.A,{title:"法人及实际经营者信息"},o.createElement(u.A,{layout:"horizontal",data:[{name:"g1",width:"100%",columnCount:1,colgroup:[120,"auto"],data:l.slice(0,3)}]})),o.createElement(fr.A,{title:"从业人员信息"},o.createElement(u.A,{layout:"horizontal",data:[{name:"g1",width:"100%",columnCount:1,colgroup:[120,"auto"],data:l.slice(3,5)}]})),o.createElement(fr.A,{title:"九小场所"},o.createElement(u.A,{data:[{name:"g1",width:"100%",columnCount:1,colgroup:[120,"auto"],data:l.slice(5)}],layout:"horizontal"})))}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,$search:{type:"input",visible:!0}},{title:"性别",dataIndex:"sex",key:"sex",align:"center",width:150,render:e=>d.A.Dict.value.ResourceNormalSexMap.value.get(e).label,$search:{type:"dict",visible:!0,dictName:"SystemTestSex".concat(Ee.A.ComponentNames.Select.Standard)}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>o.createElement(Ce.A.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"}},{title:"身高",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"inputNumberDecimal2",visible:!0}},{title:"体重",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"inputNumberDecimal2",visible:!0}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",width:200,$search:{type:"input",visible:!0}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}}},{title:"操作",dataIndex:this.getOptionsColumnDataIndex(),key:this.getOptionsColumnDataIndex(),width:200,render:(e,r)=>o.createElement(Er,{style:{justifyContent:"center"}},this.renderOptionColumn([{key:"edit",value:o.createElement(fe.A,{conditional:!1,noMatch:()=>o.createElement(Dr,null,"编辑")},(()=>o.createElement("a",null,"编辑")))},{key:"view",value:o.createElement("a",null,"查看")},{key:"delete",value:o.createElement(xe.A,{success:()=>Promise.resolve().then((()=>{this.fetchData()}))},o.createElement("a",null,"删除"))}],{value:e,record:r}))}])}renderSearchFooterItems(e){return super.renderSearchFooterItems([{key:"add",value:o.createElement(F.Ay,{key:"add",icon:o.createElement(Te.A,null),type:"primary",onClick:()=>{}},"新增")},{key:"delete",value:o.createElement(F.Ay,{key:"delete",icon:o.createElement(ve.A,null),type:"primary",onClick:()=>{const{selectedRowKeys:e}=this.state;e.length?xe.A.open((()=>Promise.resolve().then((()=>{this.setState({selectedRowKeys:[]}),this.fetchData()})))):(0,Se.A)("请选择要删除的数据")}},"删除")},...e])}}kr.propTypes={};const Nr=wr({serviceNames:[Ir],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(kr),Pr=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement("div",{className:R},o.createElement(Nr,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e}))},{ProSearchStateTable:Rr,OptionsWrap:Or,SearchTableStateImplementFactory:Ar,DisabledOption:jr}=p.A,$r="user";class Fr extends Rr{getComponentId(){return"ProSearchStateTableImpl"}getServiceName(){return $r}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}hasAdvancedSearch(){return!1}getGridSearchFormGroupParams(){return[[{name:"g1",columnCount:3,colgroup:[,"auto",,"auto",,"auto"],data:this.getGridSearchFormGroupDataByColumnConfig()}],{},{rowCount:Number.MAX_VALUE}]}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,$search:{type:"input",visible:!0}},{title:"省",dataIndex:"sex",key:"sex",align:"center",width:150,$search:{type:"dict",visible:!0,dictName:"SystemProvince".concat(Ee.A.ComponentNames.SelectDynamic.Standard)}},{title:"市",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$search:{type:"dict",visible:!0,dictName:"SystemCity".concat(Ee.A.ComponentNames.SelectDynamic.Standard),props:{cascadeParams:this.state.sex}}},{title:"区",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("width"),$search:{type:"dict",visible:!0,dictName:"SystemCounty".concat(Ee.A.ComponentNames.SelectDynamic.Standard),props:{cascadeParams:this.state.height}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>o.createElement(Ce.A.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",width:200,$search:{type:"dict",visible:!0,dictName:"SystemDepartmentAll".concat(Ee.A.ComponentNames.SelectDynamic.Multi)}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}}},{title:"操作",dataIndex:this.getOptionsColumnDataIndex(),key:this.getOptionsColumnDataIndex(),width:200,render:(e,r)=>o.createElement(Or,{style:{justifyContent:"center"}},this.renderOptionColumn([{key:"edit",value:o.createElement(fe.A,{conditional:!1,noMatch:()=>o.createElement(jr,null,"编辑")},(()=>o.createElement("a",null,"编辑")))},{key:"view",value:o.createElement("a",null,"查看")},{key:"delete",value:o.createElement(xe.A,{success:()=>Promise.resolve().then((()=>{this.fetchData()}))},o.createElement("a",null,"删除"))}],{value:e,record:r}))}])}renderSearchFooterItems(e){return super.renderSearchFooterItems([{key:"add",value:o.createElement(F.Ay,{key:"add",icon:o.createElement(Te.A,null),type:"primary",onClick:()=>{}},"新增")},{key:"delete",value:o.createElement(F.Ay,{key:"delete",icon:o.createElement(ve.A,null),type:"primary",onClick:()=>{const{selectedRowKeys:e}=this.state;e.length?xe.A.open((()=>Promise.resolve().then((()=>{this.setState({selectedRowKeys:[]}),this.fetchData()})))):(0,Se.A)("请选择要删除的数据")}},"删除")},...e])}}Fr.propTypes={};const Lr=Ar({serviceNames:[$r],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(Fr),qr=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement("div",{className:R},o.createElement(Lr,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e}))},{ProSearchStateTable:Kr,OptionsWrap:Wr,SearchTableStateImplementFactory:Br,DisabledOption:Gr}=p.A,_r="user";class Mr extends Kr{getComponentId(){return"ProSearchStateTableImpl"}getServiceName(){return _r}getFetchListPropName(){return"fetchList"}getOrderFieldValue(){return"height"}getDataKey(){return"list"}getTotalKey(){return"totalCount"}hasAdvancedSearch(){return!1}getGridSearchFormGroupParams(){return[[{name:"g1",columnCount:3,colgroup:[,"auto",,"auto",,"auto"],data:this.getGridSearchFormGroupDataByColumnConfig()}],{},{rowCount:Number.MAX_VALUE}]}getColumns(){return super.getColumns([{title:"姓名",dataIndex:"name",key:"name",width:150,$search:{type:"input",visible:!0}},{title:"省",dataIndex:"sex",key:"sex",align:"center",width:150,$hide:!0,$search:{type:"dict",visible:!0,dictName:"SystemProvince".concat(Ee.A.ComponentNames.SelectDynamic.Standard)}},{title:"市",dataIndex:"height",key:"height",align:"center",width:150,sorter:!0,sortOrder:this.sortOrder("height"),$hide:!0,$search:{type:"dict",visible:!0,dictName:"SystemCity".concat(Ee.A.ComponentNames.SelectDynamic.Standard),props:{cascadeParams:this.state.sex}}},{title:"区",dataIndex:"width",key:"width",align:"center",width:150,sorter:!0,$hide:!0,sortOrder:this.sortOrder("width"),$search:{type:"dict",visible:!0,dictName:"SystemCounty".concat(Ee.A.ComponentNames.SelectDynamic.Standard),props:{cascadeParams:this.state.height}}},{title:"出生年月",dataIndex:"birthday",key:"birthday",align:"center",width:200,sorter:!0,sortOrder:this.sortOrder("birthday"),render:e=>o.createElement(Ce.A.DateDisplay10,{value:e}),$search:{type:"rangePicker",visible:!0,startName:"birthDayStart",endName:"birthDayEnd"}},{title:"籍贯",dataIndex:"homeTown",key:"homeTown",width:200,$search:{type:"dict",visible:!0,dictName:"SystemDepartmentAll".concat(Ee.A.ComponentNames.SelectDynamic.Multi)}},{title:"现居住地",dataIndex:"address",key:"address",width:300,$search:{type:"input",visible:!0,valueAttrs:{colSpan:5}}},{title:"操作",dataIndex:this.getOptionsColumnDataIndex(),key:this.getOptionsColumnDataIndex(),width:200,render:(e,r)=>o.createElement(Wr,{style:{justifyContent:"center"}},this.renderOptionColumn([{key:"edit",value:o.createElement(fe.A,{conditional:!1,noMatch:()=>o.createElement(Gr,null,"编辑")},(()=>o.createElement("a",null,"编辑")))},{key:"view",value:o.createElement("a",null,"查看")},{key:"delete",value:o.createElement(xe.A,{success:()=>Promise.resolve().then((()=>{this.fetchData()}))},o.createElement("a",null,"删除"))}],{value:e,record:r}))}])}renderSearchFooterItems(e){return super.renderSearchFooterItems([{key:"add",value:o.createElement(F.Ay,{key:"add",icon:o.createElement(Te.A,null),type:"primary",onClick:()=>{}},"新增")},{key:"delete",value:o.createElement(F.Ay,{key:"delete",icon:o.createElement(ve.A,null),type:"primary",onClick:()=>{const{selectedRowKeys:e}=this.state;e.length?xe.A.open((()=>Promise.resolve().then((()=>{this.setState({selectedRowKeys:[]}),this.fetchData()})))):(0,Se.A)("请选择要删除的数据")}},"删除")},...e])}}Mr.propTypes={};const Vr=Br({serviceNames:[_r],middleWares:[],reducer:null,models:function(){const e=[],r=t(99231);return r.keys().forEach((t=>{const n=r(t);e.push(n.default())})),e}()})(Mr),Ur=()=>{const[e,r]=(0,o.useState)(!1);return o.createElement("div",{className:R},o.createElement(Vr,{style:{height:"100%"},isShowExpandSearch:!0,defaultExpandSearchCollapse:!1,fixedHeaderAutoTable:!0,fixedTableSpaceBetween:!0,pagination:e}))},Hr=".Header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 20px;\r\n  //background-color: #fff;\r\n}\r\n\r\n.Footer {\r\n  padding: 0 20px 20px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  //background-color: #fff;\r\n}\r\n",zr=()=>o.createElement(s.Ay,null,o.createElement(s.wn,{title:"SearchTable"},o.createElement("p",null,"一种查询表格的通用模式(如果 UI 没有明确给出查询表格的 UI，就可以用这个默认模式)")),o.createElement(s.Wc,{title:"代码演示",columnCount:1,config:[{id:"p1",name:"基本使用",cardProps:{description:{title:"基本使用",info:"基本使用"}},active:"p1.jsx",config:[{title:"p1.jsx",key:"p1.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\r\n\r\nimport Table from '../table';\r\n\r\nexport default () => <Table isShowExpandSearch defaultExpandSearchCollapse={false} />;\r\n"},{title:"Table.jsx",key:"Table.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:i}],type:"PlayGroundTab",renderChildren:()=>o.createElement(k,null)},{id:"p2",name:"表格体可以滚动",cardProps:{description:{title:"表格体可以滚动",info:"表格体可以滚动"}},active:"p2.jsx",config:[{title:"p2.jsx",key:"p2.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { Switch } from 'antd';\nimport React, { useState } from 'react';\n\nimport { Space } from '@baifendian/adhere';\n\nimport Table from '../table';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <>\n      <Switch\n        checkedChildren=\"分页\"\n        checked={pagination}\n        onChange={() => {\n          setPagination(!pagination);\n        }}\n      />\n\n      <Space direction=\"vertical\" />\n\n      <div className={styles.Wrapper2}>\n        <Table\n          style={{ height: '100%' }}\n          isShowExpandSearch\n          defaultExpandSearchCollapse={false}\n          autoFixed\n          pagination={pagination}\n        />\n      </div>\n    </>\n  );\n};\n"},{title:"Table.jsx",key:"Table.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:i}],type:"PlayGroundTab",renderChildren:()=>o.createElement(j,null)},{id:"p3",name:"固定列头",cardProps:{description:{title:"固定列头",info:"固定列头"}},active:"p3.jsx",config:[{title:"p3.jsx",key:"p3.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { Switch } from 'antd';\nimport React, { useState } from 'react';\n\nimport { Space } from '@baifendian/adhere';\n\nimport Table from '../table';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <>\n      <Switch\n        checkedChildren=\"分页\"\n        checked={pagination}\n        onChange={() => {\n          setPagination(!pagination);\n        }}\n      />\n\n      <Space direction=\"vertical\" />\n\n      <div className={styles.Wrapper}>\n        <Table\n          style={{ height: '100%' }}\n          isShowExpandSearch\n          defaultExpandSearchCollapse={false}\n          fixedHeaderAutoTable\n          pagination={pagination}\n        />\n      </div>\n    </>\n  );\n};\n"},{title:"Table.jsx",key:"Table.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:i}],type:"PlayGroundTab",renderChildren:()=>o.createElement($,null)},{id:"p4",name:"列表两端的渲染",cardProps:{description:{title:"列表两端的渲染",info:"列表两端的渲染"}},active:"p4.jsx",config:[{title:"p4.jsx",key:"p4.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { Switch } from 'antd';\nimport React, { useState } from 'react';\n\nimport { Space } from '@baifendian/adhere';\n\nimport FixedTableSpaceBetweenTable from '../fixedTableSpaceBetweenTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <>\n      <Switch\n        checkedChildren=\"分页\"\n        checked={pagination}\n        onChange={() => {\n          setPagination(!pagination);\n        }}\n      />\n\n      <Space direction=\"vertical\" />\n\n      <div className={styles.Wrapper1}>\n        <FixedTableSpaceBetweenTable\n          style={{ height: '100%' }}\n          isShowExpandSearch\n          defaultExpandSearchCollapse={false}\n          fixedHeaderAutoTable\n          pagination={pagination}\n        />\n      </div>\n    </>\n  );\n};\n"},{title:"FixedTableSpaceBetweenTable.jsx",key:"FixedTableSpaceBetweenTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport Table from './table';\r\n\r\nimport styles from './fixedTableSpaceBetweenTable.less';\r\n\r\n/**\r\n * FixedTableSpaceBetweenTable\r\n * @classdesc\r\n */\r\nclass FixedTableSpaceBetweenTable extends Table {\r\n  renderSearchHeader() {\r\n    return (\r\n      <div className={styles.Header}>\r\n        <h3>查询表格</h3>\r\n        <div>\r\n          <Button type=\"primary\">新建</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSearchFooter() {\r\n    return <div className={styles.Footer}>renderTableFooter</div>;\r\n  }\r\n}\r\n\r\nexport default FixedTableSpaceBetweenTable;\r\n"},{title:"FixedTableSpaceBetweenTable.less",key:"FixedTableSpaceBetweenTable.less",mode:"code",theme:"eclipse",scope:{React:o},codeText:Hr}],type:"PlayGroundTab",renderChildren:()=>o.createElement(W,null)},{id:"p5",name:"分页始终居底",cardProps:{description:{title:"分页始终居底",info:"分页始终居底"}},active:"p5.jsx",config:[{title:"p5.jsx",key:"p5.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { Switch } from 'antd';\nimport React, { useState } from 'react';\n\nimport { Space } from '@baifendian/adhere';\n\nimport FewTable from '../fewTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <>\n      <Switch\n        checkedChildren=\"分页\"\n        checked={pagination}\n        onChange={() => {\n          setPagination(!pagination);\n        }}\n      />\n\n      <Space direction=\"vertical\" />\n\n      <div className={styles.Wrapper}>\n        <FewTable\n          style={{ height: '100%' }}\n          isShowExpandSearch\n          defaultExpandSearchCollapse={false}\n          fixedHeaderAutoTable\n          fixedTableSpaceBetween\n          pagination={pagination}\n        />\n      </div>\n    </>\n  );\n};\n"},{title:"Table.jsx",key:"Table.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:i}],type:"PlayGroundTab",renderChildren:()=>o.createElement(_,null)},{id:"p6",name:"使用@ctsj/state的Table",cardProps:{description:{title:"使用@ctsj/state的Table",info:"使用@ctsj/state的Table"}},active:"p6.jsx",config:[{title:"p6.jsx",key:"p6.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { Switch } from 'antd';\nimport React, { useState } from 'react';\n\nimport { Space } from '@baifendian/adhere';\n\nimport StateTable from '../stateTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <>\n      <Switch\n        checkedChildren=\"分页\"\n        checked={pagination}\n        onChange={() => {\n          setPagination(!pagination);\n        }}\n      />\n\n      <Space direction=\"vertical\" />\n\n      <div className={styles.Wrapper}>\n        <StateTable\n          style={{ height: '100%' }}\n          isShowExpandSearch\n          defaultExpandSearchCollapse={false}\n          fixedHeaderAutoTable\n          fixedTableSpaceBetween\n          pagination={pagination}\n        />\n      </div>\n    </>\n  );\n};\n"},{title:"StateTable.jsx",key:"StateTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { DatePicker, Input, InputNumber, Select } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { Resource, SearchTable, TableGridLayout } from '@baifendian/adhere';\r\n\r\nimport './serviceRegister';\r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { TableStateImplement, SearchTableStateImplementFactory } = SearchTable;\r\n\r\nconst { Label, Value } = TableGridLayout;\r\n\r\nconst serviceName = 'user';\r\n\r\n/**\r\n * StateTable\r\n */\r\nclass StateTable extends TableStateImplement {\r\n  componentWillReceiveProps(nextProps) {\r\n    super.componentWillReceiveProps(nextProps);\r\n\r\n    if (this.props.pagination !== nextProps.pagination) {\r\n      this.setState({\r\n        scrollY: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  getServiceName() {\r\n    return serviceName;\r\n  }\r\n\r\n  getOrderFieldValue() {\r\n    return 'height';\r\n  }\r\n\r\n  getTotalKey() {\r\n    return 'totalCount';\r\n  }\r\n\r\n  renderSearchForm() {\r\n    return (\r\n      <TableGridLayout\r\n        density=\"middle\"\r\n        data={[\r\n          {\r\n            name: 'g1',\r\n            width: '100%',\r\n            columnCount: 3,\r\n            colgroup: [, 'auto', , 'auto', , 'auto'],\r\n            data: [\r\n              {\r\n                key: 'UserName',\r\n                label: <Label>姓名：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Input\r\n                      style={{ width: '90%' }}\r\n                      placeholder=\"姓名\"\r\n                      value={this.state.name}\r\n                      onChange={(e) => {\r\n                        this.onInputChange('name', e);\r\n                      }}\r\n                    />\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'sex',\r\n                label: <Label>性别：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Select\r\n                      style={{ width: '90%' }}\r\n                      value={this.state.sex}\r\n                      onChange={(v) => {\r\n                        this.onSelectChange('sex', v);\r\n                      }}\r\n                      getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\r\n                    >\r\n                      {Resource.Dict.value.ResourceNormalSex.value.map((t) => (\r\n                        <Option key={t.value} value={t.value}>\r\n                          {t.label}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'birthday',\r\n                label: <Label>出生年月：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <RangePicker\r\n                      style={{ width: '90%' }}\r\n                      value={[this.state.startTime, this.state.endTime]}\r\n                      onChange={(dayjss) => {\r\n                        this.onDateTimeRangeChange(['startTime', 'endTime'], dayjss);\r\n                      }}\r\n                      getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\r\n                    />\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'homeTown',\r\n                label: <Label>籍贯：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Input\r\n                      style={{ width: '90%' }}\r\n                      placeholder=\"籍贯\"\r\n                      value={this.state.homeTown}\r\n                      onChange={(e) => {\r\n                        this.onInputChange('homeTown', e);\r\n                      }}\r\n                    />\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'height',\r\n                label: <Label>身高：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <InputNumber\r\n                      style={{ width: '90%' }}\r\n                      placeholder=\"身高\"\r\n                      value={this.state.height}\r\n                      onChange={(v) => {\r\n                        this.onSelectChange('height', v);\r\n                      }}\r\n                    />\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'width',\r\n                label: <Label>体重：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <InputNumber\r\n                      style={{ width: '90%' }}\r\n                      placeholder=\"体重\"\r\n                      value={this.state.width}\r\n                      onChange={(v) => {\r\n                        this.onSelectChange('width', v);\r\n                      }}\r\n                    />\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'deptCode',\r\n                label: <Label>所在部门：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Select\r\n                      style={{ width: '90%' }}\r\n                      value={this.state.deptCode}\r\n                      getPopupContainer={Resource.Dict.value.FormPopupContainer.value}\r\n                      onChange={(v) => {\r\n                        this.onSelectChange('deptCode', v);\r\n                      }}\r\n                    >\r\n                      <Option value=\"\">全部</Option>\r\n                      <Option value=\"0\">产品部</Option>\r\n                      <Option value=\"1\">开发部</Option>\r\n                      <Option value=\"2\">工程部</Option>\r\n                    </Select>\r\n                  </Value>\r\n                ),\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSearchFooterItems(defaultItems) {\r\n    return [...defaultItems];\r\n  }\r\n\r\n  getParams() {\r\n    return {\r\n      name: '',\r\n      sex: '',\r\n      startTime: null,\r\n      endTime: null,\r\n      deptCode: '',\r\n      homeTown: '',\r\n      width: '',\r\n      height: '',\r\n    };\r\n  }\r\n\r\n  getColumns() {\r\n    return [\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        key: 'sex',\r\n        align: 'center',\r\n        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\r\n      },\r\n      {\r\n        title: '籍贯',\r\n        dataIndex: 'homeTown',\r\n        key: 'homeTown',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '出生年月',\r\n        dataIndex: 'birthday',\r\n        key: 'birthday',\r\n        align: 'center',\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('birthday'),\r\n        render: (val) =>\r\n          val ? dayjs(val).format(Resource.Dict.value.ResourceMomentFormat10.value()) : '',\r\n      },\r\n      {\r\n        title: '所在部门',\r\n        dataIndex: 'deptName',\r\n        key: 'deptName',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '身高',\r\n        dataIndex: 'height',\r\n        key: 'height',\r\n        align: 'center',\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('height'),\r\n      },\r\n      {\r\n        title: '体重',\r\n        dataIndex: 'width',\r\n        key: 'width',\r\n        align: 'center',\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('width'),\r\n      },\r\n    ];\r\n  }\r\n\r\n  getFetchListPropName() {\r\n    return 'fetchList';\r\n  }\r\n\r\n  fetchDataExecute(searchParams) {\r\n    return super.fetchDataExecute(searchParams);\r\n  }\r\n\r\n  getPagination() {\r\n    const { pagination } = this.props;\r\n\r\n    if (pagination) {\r\n      return super.getPagination();\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  onSubTableChange(pagination, filters, sorter) {}\r\n}\r\n\r\nStateTable.defaultProps = {\r\n  pagination: true,\r\n};\r\n\r\nStateTable.propTypes = {\r\n  pagination: PropTypes.bool,\r\n};\r\n\r\nfunction getModels() {\r\n  const models = [];\r\n\r\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\r\n\r\n  requireComponent.keys().forEach((fileName) => {\r\n    const model = requireComponent(fileName);\r\n    models.push(model.default());\r\n  });\r\n\r\n  return models;\r\n}\r\n\r\nconst Wrap = SearchTableStateImplementFactory({\r\n  serviceNames: [serviceName],\r\n  middleWares: [],\r\n  reducer: null,\r\n  models: getModels(),\r\n})(StateTable);\r\n\r\nexport default Wrap;\r\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(ee,null)},{id:"p8",name:"标准的RowSelected",cardProps:{description:{title:"标准的RowSelected",info:"标准的RowSelected"}},active:"p8.jsx",config:[{title:"p8.jsx",key:"p8.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\r\n\r\nimport RowSelectedNormal from '../rowSelectedNormal';\r\n\r\nexport default () => {\r\n  return <RowSelectedNormal isShowExpandSearch defaultExpandSearchCollapse={false} />;\r\n};\r\n"},{title:"RowSelectedNormal.jsx",key:"RowSelectedNormal.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\r\n\r\nimport { SearchTable } from '@baifendian/adhere';\r\n\r\nimport Table from './table';\r\n\r\nconst { Table: $SearchTable } = SearchTable;\r\n\r\n/**\r\n * RowSelectedContinuous\r\n * @classdesc\r\n */\r\nclass RowSelectedContinuous extends Table {\r\n  getRowSelectionMode() {\r\n    return $SearchTable.ROW_SELECTION_NORMAL_MODE;\r\n  }\r\n}\r\n\r\nexport default RowSelectedContinuous;\r\n"},{title:"Table.jsx",key:"Table.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:i}],type:"PlayGroundTab",renderChildren:()=>o.createElement(ne,null)},{id:"p9",name:"可以跨页选择的RowSelected",cardProps:{description:{title:"可以跨页选择的RowSelected",info:"可以跨页选择的RowSelected"}},active:"p9.jsx",config:[{title:"p9.jsx",key:"p9.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\r\n\r\nimport RowSelectedContinuous from '../rowSelectedContinuous';\r\n\r\nexport default () => (\r\n  <RowSelectedContinuous isShowExpandSearch defaultExpandSearchCollapse={false} />\r\n);\r\n"},{title:"RowSelectedContinuous.jsx",key:"RowSelectedContinuous.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\r\n\r\nimport { SearchTable } from '@baifendian/adhere';\r\n\r\nimport Table from './table';\r\n\r\nconst { Table: $SearchTable } = SearchTable;\r\n\r\n/**\r\n * RowSelectedContinuous\r\n * @classdesc\r\n */\r\nclass RowSelectedContinuous extends Table {\r\n  getRowSelectionMode() {\r\n    return $SearchTable.ROW_SELECTION_CONTINUOUS_MODE;\r\n  }\r\n}\r\n\r\nexport default RowSelectedContinuous;\r\n"},{title:"Table.jsx",key:"Table.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:i}],type:"PlayGroundTab",renderChildren:()=>o.createElement(ie,null)},{id:"p10",name:"可以拖动的列",cardProps:{description:{title:"可以拖动的列",info:"可以拖动的列"}},active:"p10.jsx",config:[{title:"p10.jsx",key:"p10.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\n\nimport ColumnResizeTable from '../columnResizeTable';\n\nimport styles from './examples.less';\n\nexport default () => (\n  <div className={styles.Wrapper}>\n    <ColumnResizeTable\n      style={{ height: '100%' }}\n      isShowExpandSearch\n      defaultExpandSearchCollapse={false}\n      fixedHeaderAutoTable\n    />\n  </div>\n);\n"},{title:"ColumnResizeTable.jsx",key:"ColumnResizeTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport React from 'react';\r\n\r\nimport Table from './table';\r\n\r\n/**\r\n * ColumnResizeTable\r\n * @classdesc\r\n */\r\nclass ColumnResizeTable extends Table {\r\n  getColumns() {\r\n    return super.getColumns().map((column) => ({\r\n      ...column,\r\n      $resizable: true,\r\n    }));\r\n  }\r\n}\r\n\r\nexport default ColumnResizeTable;\r\n"},{title:"Table.jsx",key:"Table.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:i}],type:"PlayGroundTab",renderChildren:()=>o.createElement(se,null)},{id:"p11",name:"列设置",cardProps:{description:{title:"列设置",info:"列设置"}},active:"p11.jsx",config:[{title:"p11.jsx",key:"p11.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\r\n\r\nimport ColumnSettingTable from '../columnSettingTable';\r\n\r\nexport default () => <ColumnSettingTable isShowExpandSearch defaultExpandSearchCollapse={false} />;\r\n"},{title:"ColumnSettingTable.jsx",key:"ColumnSettingTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport React from 'react';\r\n\r\nimport Table from './table';\r\n\r\nimport styles from './fixedTableSpaceBetweenTable.less';\r\n\r\n/**\r\n * ColumnSettingTable\r\n * @classdesc\r\n */\r\nclass ColumnSettingTable extends Table {\r\n  renderSearchHeader() {\r\n    return (\r\n      <div className={styles.Header}>\r\n        <h3>查询表格</h3>\r\n        <div>{this.renderColumnSetting()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColumnSettingTable;\r\n"},{title:"Table.jsx",key:"Table.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:i},{title:"fixedTableSpaceBetweenTable.less",key:"fixedTableSpaceBetweenTable.less",mode:"code",theme:"eclipse",scope:{React:o},codeText:Hr}],type:"PlayGroundTab",renderChildren:()=>o.createElement(ce,null)},{id:"p12",name:"表格密度设置",cardProps:{description:{title:"表格密度设置",info:"表格密度设置"}},active:"p12.jsx",config:[{title:"p12.jsx",key:"p12.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\r\n\r\nimport TableDensitySetting from '../tableDensitySetting';\r\n\r\nexport default () => <TableDensitySetting isShowExpandSearch defaultExpandSearchCollapse={false} />;\r\n"},{title:"TableDensitySetting.jsx",key:"TableDensitySetting.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport React from 'react';\r\n\r\nimport Table from './table';\r\n\r\nimport styles from './fixedTableSpaceBetweenTable.less';\r\n\r\n/**\r\n * TableDensitySetting\r\n * @classdesc\r\n */\r\nclass TableDensitySetting extends Table {\r\n  renderSearchHeader() {\r\n    return (\r\n      <div className={styles.Header}>\r\n        <h3>查询表格</h3>\r\n        <div>{this.renderTableDensitySetting()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableDensitySetting;\r\n"},{title:"Table.jsx",key:"Table.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:i},{title:"fixedTableSpaceBetweenTable.less",key:"fixedTableSpaceBetweenTable.less",mode:"code",theme:"eclipse",scope:{React:o},codeText:Hr}],type:"PlayGroundTab",renderChildren:()=>o.createElement(pe,null)},{id:"p13",name:"查询面板两端的渲染",cardProps:{description:{title:"查询面板两端的渲染",info:"查询面板两端的渲染"}},active:"p13.jsx",config:[{title:"p13.jsx",key:"p13.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport RenderSearchBetweenTable from '../renderSearchBetweenTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <>\n      <div className={styles.Wrapper1}>\n        <RenderSearchBetweenTable\n          style={{ height: '100%' }}\n          isShowExpandSearch\n          defaultExpandSearchCollapse={false}\n          fixedHeaderAutoTable\n          pagination={pagination}\n        />\n      </div>\n    </>\n  );\n};\n"},{title:"RenderSearchBetweenTable.jsx",key:"RenderSearchBetweenTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:'import { Button, Col, Row, Statistic } from \'antd\';\r\nimport React from \'react\';\r\n\r\nimport Table from \'./table\';\r\n\r\n/**\r\n * RenderSearchBetweenTable\r\n * @classdesc\r\n */\r\nclass RenderSearchBetweenTable extends Table {\r\n  renderSearchFormBefore() {\r\n    return (\r\n      <Row gutter={16}>\r\n        <Col span={12}>\r\n          <Statistic title="Active Users" value={112893} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic title="Account Balance (CNY)" value={112893} precision={2} />\r\n          <Button style={{ marginTop: 16 }} type="primary">\r\n            Recharge\r\n          </Button>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic title="Active Users" value={112893} loading />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  renderSearchFormAfter() {\r\n    return (\r\n      <Row gutter={16}>\r\n        <Col span={12}>\r\n          <Statistic title="Active Users" value={112893} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic title="Account Balance (CNY)" value={112893} precision={2} />\r\n          <Button style={{ marginTop: 16 }} type="primary">\r\n            Recharge\r\n          </Button>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic title="Active Users" value={112893} loading />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RenderSearchBetweenTable;\r\n'},{title:"Table.jsx",key:"Table.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:i}],type:"PlayGroundTab",renderChildren:()=>o.createElement(ge,null)},{id:"p14",name:"ProSearchStateTable",cardProps:{description:{title:"ProSearchStateTable",info:"ProSearchStateTable"}},active:"p14.jsx",config:[{title:"p14.jsx",key:"p14.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport ProSearchStateTableImpl from '../proStateSearchTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <div className={styles.Wrapper}>\n      <ProSearchStateTableImpl\n        style={{ height: '100%' }}\n        isShowExpandSearch\n        defaultExpandSearchCollapse={false}\n        fixedHeaderAutoTable\n        fixedTableSpaceBetween\n        pagination={pagination}\n      />\n    </div>\n  );\n};\n"},{title:"ProSearchStateTableImpl.jsx",key:"ProSearchStateTableImpl.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { DeleteOutlined, UserAddOutlined } from '@ant-design/icons';\r\nimport {\r\n  ConditionalRender,\r\n  DateDisplay,\r\n  DelConfirm,\r\n  FieldGeneratorToDict,\r\n  Resource,\r\n  SearchTable,\r\n  WarnPrompt,\r\n} from '@baifendian/adhere';\r\n\r\nimport './serviceRegister';\r\n\r\nconst { ProSearchStateTable, OptionsWrap, SearchTableStateImplementFactory, DisabledOption } =\r\n  SearchTable;\r\n\r\nconst serviceName = 'user';\r\n\r\n/**\r\n * ProSearchStateTableImpl\r\n * @class ProSearchStateTableImpl\r\n * @classdesc ProSearchStateTableImpl\r\n */\r\nclass ProSearchStateTableImpl extends ProSearchStateTable {\r\n  getComponentId() {\r\n    return 'ProSearchStateTableImpl';\r\n  }\r\n\r\n  getServiceName() {\r\n    return serviceName;\r\n  }\r\n\r\n  getFetchListPropName() {\r\n    return 'fetchList';\r\n  }\r\n\r\n  getOrderFieldValue() {\r\n    return 'height';\r\n  }\r\n\r\n  /**\r\n   * getDataKey\r\n   * @description - 获取数据的key\r\n   * @protected\r\n   */\r\n  getDataKey() {\r\n    return 'list';\r\n  }\r\n\r\n  /**\r\n   * getTotalKey\r\n   * @description - 获取total的key\r\n   * @protected\r\n   */\r\n  getTotalKey() {\r\n    return 'totalCount';\r\n  }\r\n\r\n  /**\r\n   * hasAdvancedSearchPanel\r\n   * @description 是否有高级搜索按钮\r\n   * @returns {boolean}\r\n   */\r\n  // hasAdvancedSearch() {\r\n  //   return false;\r\n  // }\r\n\r\n  /**\r\n   * getGridSearchFormGroupParams\r\n   * @description 获取GridSearchFormGroup的参数\r\n   * @return {Array}\r\n   */\r\n  // getGridSearchFormGroupParams() {\r\n  //   return [\r\n  //     [\r\n  //       {\r\n  //         name: 'g1',\r\n  //         // 一行显示的列数\r\n  //         columnCount: 3,\r\n  //         // 各个列的宽度\r\n  //         colgroup: [, 'auto', , 'auto', , 'auto'],\r\n  //         data: this.getGridSearchFormGroupDataByColumnConfig(),\r\n  //       },\r\n  //     ],\r\n  //     {},\r\n  //     {\r\n  //       // 一共多少行\r\n  //       rowCount: Number.MAX_VALUE,\r\n  //       // renderTitleLabel: () => <div>搜索</div>,\r\n  //       // // 渲染高级查询面板的Collapse\r\n  //       // renderCollapse: (collapse) => <div>收起</div>,\r\n  //       // // 渲染高级查询面板显示的按钮\r\n  //       // renderSearchButton: (callback) => <div onClick={() => callback()}>高级搜索</div>,\r\n  //       // // 高级查询面板查询按钮的插入位置 (defaultItems) => {}\r\n  //       // insertSearchButton: null,\r\n  //     },\r\n  //   ];\r\n  // }\r\n\r\n  /**\r\n   * Table的列\r\n   * @override\r\n   * @return {*[]}\r\n   */\r\n  getColumns() {\r\n    return super.getColumns([\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: 150,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        key: 'sex',\r\n        align: 'center',\r\n        width: 150,\r\n        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\r\n        },\r\n      },\r\n      {\r\n        title: '出生年月',\r\n        dataIndex: 'birthday',\r\n        key: 'birthday',\r\n        align: 'center',\r\n        width: 200,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('birthday'),\r\n        render: (val) => <DateDisplay.DateDisplay10 value={val} />,\r\n        $search: {\r\n          type: 'rangePicker',\r\n          visible: true,\r\n          startName: 'birthDayStart',\r\n          endName: 'birthDayEnd',\r\n        },\r\n      },\r\n      {\r\n        title: '身高',\r\n        dataIndex: 'height',\r\n        key: 'height',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('height'),\r\n        $search: {\r\n          type: 'inputNumberDecimal2',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '体重',\r\n        dataIndex: 'width',\r\n        key: 'width',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('width'),\r\n        $search: {\r\n          type: 'inputNumberDecimal2',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '籍贯',\r\n        dataIndex: 'homeTown',\r\n        key: 'homeTown',\r\n        width: 200,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '现居住地',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        width: 300,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n          valueAttrs: {\r\n            colSpan: 5,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: this.getOptionsColumnDataIndex(),\r\n        key: this.getOptionsColumnDataIndex(),\r\n        width: 200,\r\n        render: (v, record) => (\r\n          <OptionsWrap style={{ justifyContent: 'center' }}>\r\n            {this.renderOptionColumn(\r\n              [\r\n                {\r\n                  key: 'edit',\r\n                  value: (\r\n                    <ConditionalRender\r\n                      conditional={false}\r\n                      noMatch={() => <DisabledOption>编辑</DisabledOption>}\r\n                    >\r\n                      {() => <a>编辑</a>}\r\n                    </ConditionalRender>\r\n                  ),\r\n                },\r\n                {\r\n                  key: 'view',\r\n                  value: <a>查看</a>,\r\n                },\r\n                {\r\n                  key: 'delete',\r\n                  value: (\r\n                    <DelConfirm\r\n                      success={() =>\r\n                        Promise.resolve().then(() => {\r\n                          this.fetchData();\r\n                        })\r\n                      }\r\n                    >\r\n                      <a>删除</a>\r\n                    </DelConfirm>\r\n                  ),\r\n                },\r\n              ],\r\n              { value: v, record },\r\n            )}\r\n          </OptionsWrap>\r\n        ),\r\n      },\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * renderSearchFooterItems\r\n   * 渲染表格的工具栏\r\n   * @override\r\n   */\r\n  renderSearchFooterItems(defaultItems) {\r\n    return super.renderSearchFooterItems([\r\n      {\r\n        key: 'add',\r\n        value: (\r\n          <Button key=\"add\" icon={<UserAddOutlined />} type=\"primary\" onClick={() => {}}>\r\n            新增\r\n          </Button>\r\n        ),\r\n      },\r\n      {\r\n        key: 'delete',\r\n        value: (\r\n          <Button\r\n            key=\"delete\"\r\n            icon={<DeleteOutlined />}\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              const { selectedRowKeys } = this.state;\r\n\r\n              if (!selectedRowKeys.length) {\r\n                WarnPrompt('请选择要删除的数据');\r\n                return;\r\n              }\r\n\r\n              DelConfirm.open(() => {\r\n                return Promise.resolve().then(() => {\r\n                  this.setState({\r\n                    selectedRowKeys: [],\r\n                  });\r\n\r\n                  this.fetchData();\r\n                });\r\n              });\r\n            }}\r\n          >\r\n            删除\r\n          </Button>\r\n        ),\r\n      },\r\n      ...defaultItems,\r\n    ]);\r\n  }\r\n}\r\n\r\nProSearchStateTableImpl.propTypes = {};\r\n\r\nfunction getModels() {\r\n  const models = [];\r\n\r\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\r\n\r\n  requireComponent.keys().forEach((fileName) => {\r\n    const model = requireComponent(fileName);\r\n    models.push(model.default());\r\n  });\r\n\r\n  return models;\r\n}\r\n\r\nconst Wrap = SearchTableStateImplementFactory({\r\n  serviceNames: [serviceName],\r\n  middleWares: [],\r\n  reducer: null,\r\n  models: getModels(),\r\n})(ProSearchStateTableImpl);\r\n\r\nexport default Wrap;\r\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(Oe,null)},{id:"p15",name:"可编辑的单元格",cardProps:{description:{title:"可编辑的单元格",info:"可编辑的单元格"}},active:"p15.jsx",config:[{title:"p15.jsx",key:"p15.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport EditorCellStateSearchTable from '../editorCellStateSearchTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <div className={styles.Wrapper}>\n      <EditorCellStateSearchTable\n        style={{ height: '100%' }}\n        isShowExpandSearch\n        defaultExpandSearchCollapse={false}\n        fixedHeaderAutoTable\n        fixedTableSpaceBetween\n        pagination={pagination}\n      />\n    </div>\n  );\n};\n"},{title:"EditorCellStateSearchTable.jsx",key:"EditorCellStateSearchTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\n\nimport {\n  DateDisplay,\n  DelConfirm,\n  FieldGeneratorToDict,\n  Resource,\n  SearchTable,\n} from '@baifendian/adhere';\n\nimport './serviceRegister';\n\nconst { SearchTableStateImplementFactory, ProEditableCellSearchStateTable, OptionsWrap } =\n  SearchTable;\n\nconst serviceName = 'user';\n\nfunction getModels() {\n  const models = [];\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\n  requireComponent.keys().forEach((fileName) => {\n    const model = requireComponent(fileName);\n    models.push(model.default());\n  });\n\n  return models;\n}\n\n/**\n * EditableCellStateSearchTable\n * @class EditableCellStateSearchTable\n * @classdesc EditableCellStateSearchTable\n */\nclass EditableCellStateSearchTable extends ProEditableCellSearchStateTable {\n  getComponentId() {\n    return 'EditableCellStateSearchTable';\n  }\n\n  getServiceName() {\n    return serviceName;\n  }\n\n  getFetchListPropName() {\n    return 'fetchList';\n  }\n\n  getOrderFieldValue() {\n    return 'height';\n  }\n\n  /**\n   * getDataKey\n   * @description - 获取数据的key\n   * @protected\n   */\n  getDataKey() {\n    return 'list';\n  }\n\n  /**\n   * getTotalKey\n   * @description - 获取total的key\n   * @protected\n   */\n  getTotalKey() {\n    return 'totalCount';\n  }\n\n  /**\n   * Table的列\n   * @override\n   * @return {*[]}\n   */\n  getColumns() {\n    return super.getColumns([\n      {\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name',\n        width: 150,\n        render: (val) => <div style={{ color: 'red' }}>{val}</div>,\n        $search: {\n          type: 'input',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [\n            {\n              required: true,\n              message: '请输入姓名',\n            },\n          ],\n          onSave: ({ value, record, dataIndex }) => {\n            return new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            });\n          },\n        },\n        $resizable: true,\n      },\n      {\n        title: '性别',\n        dataIndex: 'sex',\n        key: 'sex',\n        align: 'center',\n        width: 150,\n        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n        $search: {\n          type: 'dict',\n          visible: true,\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\n        },\n        $editable: {\n          editable: true,\n          type: 'dict',\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\n          rules: [\n            {\n              required: true,\n              message: '请选择',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) => {\n            return new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            });\n          },\n        },\n      },\n      {\n        title: '出生年月',\n        dataIndex: 'birthday',\n        key: 'birthday',\n        align: 'center',\n        width: 200,\n        sorter: true,\n        sortOrder: this.sortOrder('birthday'),\n        render: (val) => <DateDisplay.DateDisplay10 value={val} />,\n        $search: {\n          type: 'rangePicker',\n          visible: true,\n          startName: 'birthDayStart',\n          endName: 'birthDayEnd',\n        },\n        $editable: {\n          editable: true,\n          type: 'datePicker',\n          rules: [\n            {\n              required: true,\n              message: '请选择',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) => {\n            return new Promise((resolve) => {\n              this.updateEditorCellDateData({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            });\n          },\n        },\n      },\n      {\n        title: '身高',\n        dataIndex: 'height',\n        key: 'height',\n        align: 'center',\n        width: 150,\n        sorter: true,\n        sortOrder: this.sortOrder('height'),\n        $search: {\n          type: 'inputNumberDecimal2',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'inputNumberDecimal2',\n          rules: [\n            {\n              required: true,\n              message: '请输入身高',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) => {\n            return new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            });\n          },\n        },\n      },\n      {\n        title: '体重',\n        dataIndex: 'width',\n        key: 'width',\n        align: 'center',\n        width: 150,\n        sorter: true,\n        sortOrder: this.sortOrder('width'),\n        $search: {\n          type: 'inputNumberDecimal2',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'inputNumberDecimal2',\n          rules: [\n            {\n              required: true,\n              message: '请输入体重',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) => {\n            return new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            });\n          },\n        },\n      },\n      {\n        title: '籍贯',\n        dataIndex: 'homeTown',\n        key: 'homeTown',\n        ellipsis: true,\n        width: 200,\n        $search: {\n          type: 'input',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [\n            {\n              required: true,\n              message: '请输入籍贯',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) => {\n            return new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            });\n          },\n        },\n      },\n      {\n        title: '现居住地',\n        dataIndex: 'address',\n        key: 'address',\n        width: 300,\n        $search: {\n          type: 'input',\n          visible: true,\n          valueAttrs: {\n            colSpan: 5,\n          },\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [\n            {\n              required: true,\n              message: '请输入居住地',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) => {\n            return new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            });\n          },\n        },\n      },\n      {\n        title: '操作',\n        dataIndex: this.getOptionsColumnDataIndex(),\n        key: this.getOptionsColumnDataIndex(),\n        width: 260,\n        render: (v, record) => (\n          <OptionsWrap style={{ justifyContent: 'center' }}>\n            {this.renderOptionColumn(\n              [\n                {\n                  key: 'view',\n                  value: <a>查看</a>,\n                },\n                {\n                  key: 'delete',\n                  value: (\n                    <DelConfirm\n                      success={() =>\n                        Promise.resolve().then(() => {\n                          this.fetchData();\n                        })\n                      }\n                    >\n                      <a>删除</a>\n                    </DelConfirm>\n                  ),\n                },\n              ],\n              { value: v, record },\n            )}\n          </OptionsWrap>\n        ),\n      },\n    ]);\n  }\n}\n\nEditableCellStateSearchTable.propTypes = {};\n\nconst Wrap = SearchTableStateImplementFactory({\n  serviceNames: [serviceName],\n  middleWares: [],\n  reducer: null,\n  models: getModels(),\n})(EditableCellStateSearchTable);\n\nexport default Wrap;\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(Ke,null)},{id:"p16",name:"可编辑的行",cardProps:{description:{title:"可编辑的行",info:"可编辑的行"}},active:"p16.jsx",config:[{title:"p16.jsx",key:"p16.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport RowEditorStateSearchTable from '../rowEditorStateSearchTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <div className={styles.Wrapper}>\n      <RowEditorStateSearchTable\n        style={{ height: '100%' }}\n        isShowExpandSearch\n        defaultExpandSearchCollapse={false}\n        fixedHeaderAutoTable\n        fixedTableSpaceBetween\n        pagination={pagination}\n      />\n    </div>\n  );\n};\n"},{title:"RowEditorStateSearchTable.jsx",key:"RowEditorStateSearchTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\n\nimport { DateDisplay, FieldGeneratorToDict, Resource, SearchTable } from '@baifendian/adhere';\n\nimport './serviceRegister';\n\nconst { SearchTableStateImplementFactory, ProEditableRowSearchStateTable, EditableRowControl } =\n  SearchTable;\n\nconst serviceName = 'user';\n\nfunction getModels() {\n  const models = [];\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\n  requireComponent.keys().forEach((fileName) => {\n    const model = requireComponent(fileName);\n    models.push(model.default());\n  });\n\n  return models;\n}\n\n/**\n * RowEditableStateSearchTable\n * @class RowEditableStateSearchTable\n * @classdesc RowEditableStateSearchTable\n */\nclass RowEditableStateSearchTable extends ProEditableRowSearchStateTable {\n  getComponentId() {\n    return 'RowEditableStateSearchTable';\n  }\n\n  getServiceName() {\n    return serviceName;\n  }\n\n  getFetchListPropName() {\n    return 'fetchList';\n  }\n\n  getOrderFieldValue() {\n    return 'height';\n  }\n\n  /**\n   * getDataKey\n   * @description - 获取数据的key\n   * @protected\n   */\n  getDataKey() {\n    return 'list';\n  }\n\n  /**\n   * getTotalKey\n   * @description - 获取total的key\n   * @protected\n   */\n  getTotalKey() {\n    return 'totalCount';\n  }\n\n  /**\n   * Table的列\n   * @override\n   * @return {*[]}\n   */\n  getColumns() {\n    return super.getColumns([\n      {\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name',\n        width: 150,\n        render: (val) => <div style={{ color: 'red' }}>{val}</div>,\n        $search: {\n          type: 'input',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [\n            {\n              required: true,\n              message: '请输入姓名',\n            },\n          ],\n          onSave: ({ value, record, dataIndex }) =>\n            new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            }),\n        },\n        // $resizable: true,\n      },\n      {\n        title: '性别',\n        dataIndex: 'sex',\n        key: 'sex',\n        align: 'center',\n        width: 150,\n        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n        $search: {\n          type: 'dict',\n          visible: true,\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\n        },\n        $editable: {\n          editable: true,\n          type: 'dict',\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\n          rules: [\n            {\n              required: true,\n              message: '请选择',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) =>\n            new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            }),\n        },\n      },\n      {\n        title: '出生年月',\n        dataIndex: 'birthday',\n        key: 'birthday',\n        align: 'center',\n        width: 200,\n        sorter: true,\n        sortOrder: this.sortOrder('birthday'),\n        render: (val) => <DateDisplay.DateDisplay10 value={val} />,\n        $search: {\n          type: 'rangePicker',\n          visible: true,\n          startName: 'birthDayStart',\n          endName: 'birthDayEnd',\n        },\n        $editable: {\n          editable: true,\n          type: 'datePicker',\n          rules: [\n            {\n              required: true,\n              message: '请选择',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) =>\n            new Promise((resolve) => {\n              this.updateEditorCellDateData({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            }),\n        },\n      },\n      {\n        title: '身高',\n        dataIndex: 'height',\n        key: 'height',\n        align: 'center',\n        width: 150,\n        sorter: true,\n        sortOrder: this.sortOrder('height'),\n        $search: {\n          type: 'inputNumberDecimal2',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'inputNumberDecimal2',\n          rules: [\n            {\n              required: true,\n              message: '请选择',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) =>\n            new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            }),\n        },\n      },\n      {\n        title: '体重',\n        dataIndex: 'width',\n        key: 'width',\n        align: 'center',\n        width: 150,\n        sorter: true,\n        sortOrder: this.sortOrder('width'),\n        $search: {\n          type: 'inputNumberDecimal2',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'inputNumberDecimal2',\n          rules: [\n            {\n              required: true,\n              message: '请选择',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) =>\n            new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            }),\n        },\n      },\n      {\n        title: '籍贯',\n        dataIndex: 'homeTown',\n        key: 'homeTown',\n        ellipsis: true,\n        width: 200,\n        $search: {\n          type: 'input',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [\n            {\n              required: true,\n              message: '请选择',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) =>\n            new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            }),\n        },\n      },\n      {\n        title: '现居住地',\n        dataIndex: 'address',\n        key: 'address',\n        width: 300,\n        $search: {\n          type: 'input',\n          visible: true,\n          valueAttrs: {\n            colSpan: 5,\n          },\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [\n            {\n              required: true,\n              message: '请选择',\n            },\n          ],\n          onSave: ({ record, dataIndex, value }) =>\n            new Promise((resolve) => {\n              this.updateEditorCellDate({\n                record,\n                dataIndex,\n                value,\n              }).then(() => resolve());\n            }),\n        },\n      },\n      {\n        title: '操作',\n        dataIndex: this.getOptionsColumnDataIndex(),\n        key: this.getOptionsColumnDataIndex(),\n        width: 100,\n        render: (v, record) => (\n          <EditableRowControl\n            record={record}\n            rowKey={this.getRowKey()}\n            editorRowId={this.state.editorRowId}\n          />\n        ),\n      },\n    ]);\n  }\n}\n\nRowEditableStateSearchTable.propTypes = {};\n\nconst Wrap = SearchTableStateImplementFactory({\n  serviceNames: [serviceName],\n  middleWares: [],\n  reducer: null,\n  models: getModels(),\n})(RowEditableStateSearchTable);\n\nexport default Wrap;\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(Ue,null)},{id:"p17",name:"可编辑的表格",cardProps:{description:{title:"可编辑的表格",info:"可编辑的表格"}},active:"p17.jsx",config:[{title:"p17.jsx",key:"p17.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport TableEditorStateSearchTable from '../tableEditorStateSearchTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <div className={styles.Wrapper}>\n      <TableEditorStateSearchTable\n        style={{ height: '100%' }}\n        isShowExpandSearch\n        defaultExpandSearchCollapse={false}\n        fixedHeaderAutoTable\n        fixedTableSpaceBetween\n        pagination={pagination}\n      />\n    </div>\n  );\n};\n"},{title:"TableEditorStateSearchTable.jsx",key:"TableEditorStateSearchTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\r\n\r\nimport { DateDisplay, FieldGeneratorToDict, Resource, SearchTable } from '@baifendian/adhere';\r\n\r\nimport './serviceRegister';\r\n\r\nconst { SearchTableStateImplementFactory, ProEditableSearchStateTable, EditableTableControl } =\r\n  SearchTable;\r\n\r\nconst serviceName = 'user';\r\n\r\nfunction getModels() {\r\n  const models = [];\r\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\r\n  requireComponent.keys().forEach((fileName) => {\r\n    const model = requireComponent(fileName);\r\n    models.push(model.default());\r\n  });\r\n\r\n  return models;\r\n}\r\n\r\n/**\r\n * TableEditableStateSearchTable\r\n * @class TableEditableStateSearchTable\r\n * @classdesc TableEditableStateSearchTable\r\n */\r\nclass TableEditableStateSearchTable extends ProEditableSearchStateTable {\r\n  getComponentId() {\r\n    return 'TableEditableStateSearchTable';\r\n  }\r\n\r\n  getServiceName() {\r\n    return serviceName;\r\n  }\r\n\r\n  getFetchListPropName() {\r\n    return 'fetchList';\r\n  }\r\n\r\n  getOrderFieldValue() {\r\n    return 'height';\r\n  }\r\n\r\n  /**\r\n   * getDataKey\r\n   * @description - 获取数据的key\r\n   * @protected\r\n   */\r\n  getDataKey() {\r\n    return 'list';\r\n  }\r\n\r\n  /**\r\n   * getTotalKey\r\n   * @description - 获取total的key\r\n   * @protected\r\n   */\r\n  getTotalKey() {\r\n    return 'totalCount';\r\n  }\r\n\r\n  /**\r\n   * Table的列\r\n   * @override\r\n   * @return {*[]}\r\n   */\r\n  getColumns() {\r\n    return super.getColumns([\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: 150,\r\n        render: (val) => <div style={{ color: 'red' }}>{val}</div>,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'input',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请输入姓名',\r\n            },\r\n          ],\r\n          onSave: ({ value, record, dataIndex }) =>\r\n            new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            }),\r\n        },\r\n        $resizable: true,\r\n      },\r\n      {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        key: 'sex',\r\n        align: 'center',\r\n        width: 150,\r\n        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'dict',\r\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请选择',\r\n            },\r\n          ],\r\n          onSave: ({ record, dataIndex, value }) =>\r\n            new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            }),\r\n        },\r\n      },\r\n      {\r\n        title: '出生年月',\r\n        dataIndex: 'birthday',\r\n        key: 'birthday',\r\n        align: 'center',\r\n        width: 200,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('birthday'),\r\n        render: (val) => <DateDisplay.DateDisplay10 value={val} />,\r\n        $search: {\r\n          type: 'rangePicker',\r\n          visible: true,\r\n          startName: 'birthDayStart',\r\n          endName: 'birthDayEnd',\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'datePicker',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请选择',\r\n            },\r\n          ],\r\n          onSave: ({ record, dataIndex, value }) =>\r\n            new Promise((resolve) => {\r\n              this.updateEditorCellDateData({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            }),\r\n        },\r\n      },\r\n      {\r\n        title: '身高',\r\n        dataIndex: 'height',\r\n        key: 'height',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('height'),\r\n        $search: {\r\n          type: 'inputNumberDecimal2',\r\n          visible: true,\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'inputNumberDecimal2',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请选择',\r\n            },\r\n          ],\r\n          onSave: ({ record, dataIndex, value }) =>\r\n            new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            }),\r\n        },\r\n      },\r\n      {\r\n        title: '体重',\r\n        dataIndex: 'width',\r\n        key: 'width',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('width'),\r\n        $search: {\r\n          type: 'inputNumberDecimal2',\r\n          visible: true,\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'inputNumberDecimal2',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请选择',\r\n            },\r\n          ],\r\n          onSave: ({ record, dataIndex, value }) =>\r\n            new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            }),\r\n        },\r\n      },\r\n      {\r\n        title: '籍贯',\r\n        dataIndex: 'homeTown',\r\n        key: 'homeTown',\r\n        ellipsis: true,\r\n        width: 200,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'input',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请选择',\r\n            },\r\n          ],\r\n          onSave: ({ record, dataIndex, value }) =>\r\n            new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            }),\r\n        },\r\n      },\r\n      {\r\n        title: '现居住地',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        width: 300,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n          valueAttrs: {\r\n            colSpan: 5,\r\n          },\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'input',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请选择',\r\n            },\r\n          ],\r\n          onSave: ({ record, dataIndex, value }) =>\r\n            new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            }),\r\n        },\r\n      },\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * renderSearchFooterItems\r\n   * 渲染表格的工具栏\r\n   * @override\r\n   */\r\n  renderSearchFooterItems(defaultItems) {\r\n    return super.renderSearchFooterItems([\r\n      {\r\n        key: 'editorTable',\r\n        value: <EditableTableControl />,\r\n      },\r\n      ...defaultItems,\r\n    ]);\r\n  }\r\n}\r\n\r\nTableEditableStateSearchTable.propTypes = {};\r\n\r\nconst Wrap = SearchTableStateImplementFactory({\r\n  serviceNames: [serviceName],\r\n  middleWares: [],\r\n  reducer: null,\r\n  models: getModels(),\r\n})(TableEditableStateSearchTable);\r\n\r\nexport default Wrap;\r\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(Ze,null)},{id:"p18",name:"始终处于编辑状态的可编辑单元格",cardProps:{description:{title:"始终处于编辑状态的可编辑单元格",info:"始终处于编辑状态的可编辑单元格"}},active:"p18.jsx",config:[{title:"p18.jsx",key:"p18.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport EditorCellUseKeepEditStateSearchTable from '../editorCellUseKeepEditStateSearchTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <div className={styles.Wrapper}>\n      <EditorCellUseKeepEditStateSearchTable\n        style={{ height: '100%' }}\n        isShowExpandSearch\n        defaultExpandSearchCollapse={false}\n        fixedHeaderAutoTable\n        fixedTableSpaceBetween\n        pagination={pagination}\n      />\n    </div>\n  );\n};\n"},{title:"EditorCellUseKeepEditStateSearchTable.jsx",key:"EditorCellUseKeepEditStateSearchTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\n\nimport { DateDisplay, FieldGeneratorToDict, Resource, SearchTable } from '@baifendian/adhere';\n\nimport './serviceRegister';\n\nconst { SearchTableStateImplementFactory, ProEditableCellSearchStateTable } = SearchTable;\n\nconst serviceName = 'user';\n\nfunction getModels() {\n  const models = [];\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\n  requireComponent.keys().forEach((fileName) => {\n    const model = requireComponent(fileName);\n    models.push(model.default());\n  });\n\n  return models;\n}\n\n/**\n * EditableCellUseKeepEditStateSearchTable\n * @class EditableCellUseKeepEditStateSearchTable\n * @classdesc EditableCellUseKeepEditStateSearchTable\n */\nclass EditableCellUseKeepEditStateSearchTable extends ProEditableCellSearchStateTable {\n  getComponentId() {\n    return 'EditableCellUseKeepEditStateSearchTable';\n  }\n\n  getServiceName() {\n    return serviceName;\n  }\n\n  getFetchListPropName() {\n    return 'fetchList';\n  }\n\n  getOrderFieldValue() {\n    return 'height';\n  }\n\n  /**\n   * getDataKey\n   * @description - 获取数据的key\n   * @protected\n   */\n  getDataKey() {\n    return 'list';\n  }\n\n  /**\n   * getTotalKey\n   * @description - 获取total的key\n   * @protected\n   */\n  getTotalKey() {\n    return 'totalCount';\n  }\n\n  /**\n   * Table的列\n   * @override\n   * @return {*[]}\n   */\n  getColumns() {\n    return super.getColumns([\n      {\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name',\n        width: 150,\n        render: (val) => <div style={{ color: 'red' }}>{val}</div>,\n        $search: {\n          type: 'input',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [\n            {\n              required: true,\n              message: '请输入姓名',\n            },\n          ],\n          useKeepEdit: true,\n          props: {\n            onBlur: (e, { updateEditorCellData, form, dataIndex, rowIndex }) => {\n              updateEditorCellData();\n            },\n          },\n        },\n        $resizable: true,\n      },\n      {\n        title: '性别',\n        dataIndex: 'sex',\n        key: 'sex',\n        align: 'center',\n        width: 150,\n        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\n        $search: {\n          type: 'dict',\n          visible: true,\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\n        },\n        $editable: {\n          editable: true,\n          type: 'dict',\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\n          rules: [\n            {\n              required: true,\n              message: '请选择',\n            },\n          ],\n          useKeepEdit: true,\n          props: {\n            onChange: (e, { updateEditorCellData }) => {\n              updateEditorCellData();\n            },\n          },\n        },\n      },\n      {\n        title: '出生年月',\n        dataIndex: 'birthday',\n        key: 'birthday',\n        align: 'center',\n        width: 200,\n        sorter: true,\n        sortOrder: this.sortOrder('birthday'),\n        render: (val) => <DateDisplay.DateDisplay10 value={val} />,\n        $search: {\n          type: 'rangePicker',\n          visible: true,\n          startName: 'birthDayStart',\n          endName: 'birthDayEnd',\n        },\n        $editable: {\n          editable: true,\n          type: 'datePicker',\n          rules: [\n            {\n              required: true,\n              message: '请选择',\n            },\n          ],\n          useKeepEdit: true,\n          props: {\n            onChange: (e, { updateEditorCellData }) => {\n              updateEditorCellData();\n            },\n          },\n        },\n      },\n      {\n        title: '身高',\n        dataIndex: 'height',\n        key: 'height',\n        align: 'center',\n        width: 150,\n        sorter: true,\n        sortOrder: this.sortOrder('height'),\n        $search: {\n          type: 'inputNumberDecimal2',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'inputNumberDecimal2',\n          rules: [\n            {\n              required: true,\n              message: '请输入身高',\n            },\n          ],\n          useKeepEdit: true,\n          props: {\n            onBlur: (e, { updateEditorCellData }) => {\n              updateEditorCellData();\n            },\n          },\n        },\n      },\n      {\n        title: '体重',\n        dataIndex: 'width',\n        key: 'width',\n        align: 'center',\n        width: 150,\n        sorter: true,\n        sortOrder: this.sortOrder('width'),\n        $search: {\n          type: 'inputNumberDecimal2',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'inputNumberDecimal2',\n          rules: [\n            {\n              required: true,\n              message: '请输入体重',\n            },\n          ],\n          useKeepEdit: true,\n          props: {\n            onBlur: (e, { updateEditorCellData }) => {\n              updateEditorCellData();\n            },\n          },\n        },\n      },\n      {\n        title: '籍贯',\n        dataIndex: 'homeTown',\n        key: 'homeTown',\n        ellipsis: true,\n        width: 200,\n        $search: {\n          type: 'input',\n          visible: true,\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [\n            {\n              required: true,\n              message: '请输入籍贯',\n            },\n          ],\n          useKeepEdit: true,\n          props: {\n            onBlur: (e, { updateEditorCellData }) => {\n              updateEditorCellData();\n            },\n          },\n        },\n      },\n      {\n        title: '现居住地',\n        dataIndex: 'address',\n        key: 'address',\n        width: 300,\n        $search: {\n          type: 'input',\n          visible: true,\n          valueAttrs: {\n            colSpan: 5,\n          },\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [\n            {\n              required: true,\n              message: '请输入居住地',\n            },\n          ],\n          useKeepEdit: true,\n          props: {\n            onBlur: (e, { updateEditorCellData }) => {\n              updateEditorCellData();\n            },\n          },\n        },\n      },\n      // {\n      //   title: '操作',\n      //   dataIndex: this.getOptionsColumnDataIndex(),\n      //   key: this.getOptionsColumnDataIndex(),\n      //   width: 260,\n      //   render: (v, record) => (\n      //     <OptionsWrap style={{ justifyContent: 'center' }}>\n      //       {this.renderOptionColumn(\n      //         [\n      //           {\n      //             key: 'view',\n      //             value: <a>查看</a>,\n      //           },\n      //           {\n      //             key: 'delete',\n      //             value: (\n      //               <DelConfirm\n      //                 success={() =>\n      //                   Promise.resolve().then(() => {\n      //                     this.fetchData();\n      //                   })\n      //                 }\n      //               >\n      //                 <a>删除</a>\n      //               </DelConfirm>\n      //             ),\n      //           },\n      //         ],\n      //         { value: v, record },\n      //       )}\n      //     </OptionsWrap>\n      //   ),\n      // },\n    ]);\n  }\n}\n\nEditableCellUseKeepEditStateSearchTable.propTypes = {};\n\nconst Wrap = SearchTableStateImplementFactory({\n  serviceNames: [serviceName],\n  middleWares: [],\n  reducer: null,\n  models: getModels(),\n})(EditableCellUseKeepEditStateSearchTable);\n\nexport default Wrap;\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(lr,null)},{id:"p19",name:"可编辑的表格自定义trigger",mode:"code",scope:{React:o},cardProps:{description:{title:"可编辑的表格自定义trigger",info:"可编辑的表格自定义trigger"}},active:"p19.jsx",config:[{title:"p19.jsx",key:"p19.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport EditableCellRenderTriggerStateSearchTable from '../editorCellRenderTriggerStateSearchTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <div className={styles.Wrapper}>\n      <EditableCellRenderTriggerStateSearchTable\n        style={{ height: '100%' }}\n        isShowExpandSearch\n        defaultExpandSearchCollapse={false}\n        fixedHeaderAutoTable\n        fixedTableSpaceBetween\n        pagination={pagination}\n      />\n    </div>\n  );\n};\n"},{title:"EditableCellRenderTriggerStateSearchTable.jsx",key:"EditableCellRenderTriggerStateSearchTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\r\n\r\nimport { CheckCircleOutlined, CloseCircleOutlined, CopyOutlined } from '@ant-design/icons';\r\nimport { DateDisplay, FieldGeneratorToDict, Resource, SearchTable } from '@baifendian/adhere';\r\n\r\nimport './serviceRegister';\r\n\r\nconst { SearchTableStateImplementFactory, ProEditableCellSearchStateTable, OptionsWrap } =\r\n  SearchTable;\r\n\r\nconst serviceName = 'user';\r\n\r\nfunction getModels() {\r\n  const models = [];\r\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\r\n  requireComponent.keys().forEach((fileName) => {\r\n    const model = requireComponent(fileName);\r\n    models.push(model.default());\r\n  });\r\n\r\n  return models;\r\n}\r\n\r\n/**\r\n * EditableCellRenderTriggerStateSearchTable\r\n * @class EditableCellRenderTriggerStateSearchTable\r\n * @classdesc EditableCellRenderTriggerStateSearchTable\r\n */\r\nclass EditableCellRenderTriggerStateSearchTable extends ProEditableCellSearchStateTable {\r\n  getComponentId() {\r\n    return 'EditableCellRenderTriggerStateSearchTable';\r\n  }\r\n\r\n  getServiceName() {\r\n    return serviceName;\r\n  }\r\n\r\n  getFetchListPropName() {\r\n    return 'fetchList';\r\n  }\r\n\r\n  getOrderFieldValue() {\r\n    return 'height';\r\n  }\r\n\r\n  /**\r\n   * getDataKey\r\n   * @description - 获取数据的key\r\n   * @protected\r\n   */\r\n  getDataKey() {\r\n    return 'list';\r\n  }\r\n\r\n  /**\r\n   * getTotalKey\r\n   * @description - 获取total的key\r\n   * @protected\r\n   */\r\n  getTotalKey() {\r\n    return 'totalCount';\r\n  }\r\n\r\n  /**\r\n   * Table的列\r\n   * @override\r\n   * @return {*[]}\r\n   */\r\n  getColumns() {\r\n    return super.getColumns([\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: 150,\r\n        render: (val) => <div style={{ color: 'red' }}>{val}</div>,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'input',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请输入姓名',\r\n            },\r\n          ],\r\n          renderToEditTrigger: () => <CopyOutlined />,\r\n          renderSaveTrigger: () => <CheckCircleOutlined />,\r\n          renderCancelTrigger: () => <CloseCircleOutlined />,\r\n          onSave: ({ value, record, dataIndex }) => {\r\n            return new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            });\r\n          },\r\n        },\r\n        $resizable: true,\r\n      },\r\n      {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        key: 'sex',\r\n        align: 'center',\r\n        width: 150,\r\n        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'dict',\r\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请选择',\r\n            },\r\n          ],\r\n          renderToEditTrigger: () => <CopyOutlined />,\r\n          renderSaveTrigger: () => <CheckCircleOutlined />,\r\n          renderCancelTrigger: () => <CloseCircleOutlined />,\r\n          onSave: ({ record, dataIndex, value }) => {\r\n            return new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            });\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '出生年月',\r\n        dataIndex: 'birthday',\r\n        key: 'birthday',\r\n        align: 'center',\r\n        width: 200,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('birthday'),\r\n        render: (val) => <DateDisplay.DateDisplay10 value={val} />,\r\n        $search: {\r\n          type: 'rangePicker',\r\n          visible: true,\r\n          startName: 'birthDayStart',\r\n          endName: 'birthDayEnd',\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'datePicker',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请选择',\r\n            },\r\n          ],\r\n          renderToEditTrigger: () => <CopyOutlined />,\r\n          renderSaveTrigger: () => <CheckCircleOutlined />,\r\n          renderCancelTrigger: () => <CloseCircleOutlined />,\r\n          onSave: ({ record, dataIndex, value }) => {\r\n            return new Promise((resolve) => {\r\n              this.updateEditorCellDateData({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            });\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '身高',\r\n        dataIndex: 'height',\r\n        key: 'height',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('height'),\r\n        $search: {\r\n          type: 'inputNumberDecimal2',\r\n          visible: true,\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'inputNumberDecimal2',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请输入身高',\r\n            },\r\n          ],\r\n          renderToEditTrigger: () => <CopyOutlined />,\r\n          renderSaveTrigger: () => <CheckCircleOutlined />,\r\n          renderCancelTrigger: () => <CloseCircleOutlined />,\r\n          onSave: ({ record, dataIndex, value }) => {\r\n            return new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            });\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '体重',\r\n        dataIndex: 'width',\r\n        key: 'width',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('width'),\r\n        $search: {\r\n          type: 'inputNumberDecimal2',\r\n          visible: true,\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'inputNumberDecimal2',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请输入体重',\r\n            },\r\n          ],\r\n          renderToEditTrigger: () => <CopyOutlined />,\r\n          renderSaveTrigger: () => <CheckCircleOutlined />,\r\n          renderCancelTrigger: () => <CloseCircleOutlined />,\r\n          onSave: ({ record, dataIndex, value }) => {\r\n            return new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            });\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '籍贯',\r\n        dataIndex: 'homeTown',\r\n        key: 'homeTown',\r\n        ellipsis: true,\r\n        width: 200,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'input',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请输入籍贯',\r\n            },\r\n          ],\r\n          renderToEditTrigger: () => <CopyOutlined />,\r\n          renderSaveTrigger: () => <CheckCircleOutlined />,\r\n          renderCancelTrigger: () => <CloseCircleOutlined />,\r\n          onSave: ({ record, dataIndex, value }) => {\r\n            return new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            });\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '现居住地',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        width: 300,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n          valueAttrs: {\r\n            colSpan: 5,\r\n          },\r\n        },\r\n        $editable: {\r\n          editable: true,\r\n          type: 'input',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: '请输入居住地',\r\n            },\r\n          ],\r\n          renderToEditTrigger: () => <CopyOutlined />,\r\n          renderSaveTrigger: () => <CheckCircleOutlined />,\r\n          renderCancelTrigger: () => <CloseCircleOutlined />,\r\n          onSave: ({ record, dataIndex, value }) => {\r\n            return new Promise((resolve) => {\r\n              this.updateEditorCellDate({\r\n                record,\r\n                dataIndex,\r\n                value,\r\n              }).then(() => resolve());\r\n            });\r\n          },\r\n        },\r\n      },\r\n    ]);\r\n  }\r\n}\r\n\r\nEditableCellRenderTriggerStateSearchTable.propTypes = {};\r\n\r\nconst Wrap = SearchTableStateImplementFactory({\r\n  serviceNames: [serviceName],\r\n  middleWares: [],\r\n  reducer: null,\r\n  models: getModels(),\r\n})(EditableCellRenderTriggerStateSearchTable);\r\n\r\nexport default Wrap;\r\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(yr,null)},{id:"p20",name:"拖拽排序",cardProps:{description:{title:"拖拽排序",info:"拖拽排序"}},active:"p20.jsx",config:[{title:"p20.jsx",key:"p20.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport ProRowDragSortSearchTable from '../proRowDragSortSearchTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <div className={styles.Wrapper}>\n      <ProRowDragSortSearchTable\n        style={{ height: '100%' }}\n        isShowExpandSearch\n        defaultExpandSearchCollapse={false}\n        fixedHeaderAutoTable\n        fixedTableSpaceBetween\n        pagination={pagination}\n      />\n    </div>\n  );\n};\n"},{title:"ProRowDragSortSearchTable.jsx",key:"ProRowDragSortSearchTable.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React from 'react';\r\n\r\nimport { DateDisplay, FieldGeneratorToDict, Resource, SearchTable } from '@baifendian/adhere';\r\n\r\nimport './serviceRegister';\r\n\r\nconst { ProSearchRowDragSortStateTable, SearchTableStateImplementFactory } = SearchTable;\r\n\r\nconst serviceName = 'user';\r\n\r\n/**\r\n * RowDragSort\r\n * @class RowDragSort\r\n * @classdesc RowDragSort\r\n */\r\nclass RowDragSort extends ProSearchRowDragSortStateTable {\r\n  getComponentId() {\r\n    return 'RowDragSort';\r\n  }\r\n\r\n  getServiceName() {\r\n    return serviceName;\r\n  }\r\n\r\n  getFetchListPropName() {\r\n    return 'fetchList';\r\n  }\r\n\r\n  getOrderFieldValue() {\r\n    return 'height';\r\n  }\r\n\r\n  /**\r\n   * getDataKey\r\n   * @description - 获取数据的key\r\n   * @protected\r\n   */\r\n  getDataKey() {\r\n    return 'list';\r\n  }\r\n\r\n  /**\r\n   * getTotalKey\r\n   * @description - 获取total的key\r\n   * @protected\r\n   */\r\n  getTotalKey() {\r\n    return 'totalCount';\r\n  }\r\n\r\n  /**\r\n   * Table的列\r\n   * @override\r\n   * @return {*[]}\r\n   */\r\n  getColumns() {\r\n    return super.getColumns([\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: 150,\r\n        render: (val) => <div style={{ color: 'red' }}>{val}</div>,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        key: 'sex',\r\n        align: 'center',\r\n        width: 150,\r\n        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\r\n        },\r\n      },\r\n      {\r\n        title: '出生年月',\r\n        dataIndex: 'birthday',\r\n        key: 'birthday',\r\n        align: 'center',\r\n        width: 200,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('birthday'),\r\n        render: (val) => <DateDisplay.DateDisplay10 value={val} />,\r\n        $search: {\r\n          type: 'rangePicker',\r\n          visible: true,\r\n          startName: 'birthDayStart',\r\n          endName: 'birthDayEnd',\r\n        },\r\n      },\r\n      {\r\n        title: '身高',\r\n        dataIndex: 'height',\r\n        key: 'height',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('height'),\r\n        $search: {\r\n          type: 'inputNumberDecimal2',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '体重',\r\n        dataIndex: 'width',\r\n        key: 'width',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('width'),\r\n        $search: {\r\n          type: 'inputNumberDecimal2',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '籍贯',\r\n        dataIndex: 'homeTown',\r\n        key: 'homeTown',\r\n        ellipsis: true,\r\n        width: 200,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '现居住地',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        width: 300,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n          valueAttrs: {\r\n            colSpan: 5,\r\n          },\r\n        },\r\n      },\r\n    ]);\r\n  }\r\n}\r\n\r\nRowDragSort.propTypes = {};\r\n\r\nfunction getModels() {\r\n  const models = [];\r\n\r\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\r\n\r\n  requireComponent.keys().forEach((fileName) => {\r\n    const model = requireComponent(fileName);\r\n    models.push(model.default());\r\n  });\r\n\r\n  return models;\r\n}\r\nconst Wrap = SearchTableStateImplementFactory({\r\n  serviceNames: [serviceName],\r\n  middleWares: [],\r\n  reducer: null,\r\n  models: getModels(),\r\n})(RowDragSort);\r\n\r\nexport default Wrap;\r\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(xr,null)},{id:"p21",name:"自定义高级搜索面板",cardProps:{description:{title:"自定义高级搜索面板",info:"自定义高级搜索面板"}},active:"p21.jsx",config:[{title:"p21.jsx",key:"p21.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport ProSearchStateTableImpl from '../customAdvancedSearchPanel.jsx';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <div className={styles.Wrapper}>\n      <ProSearchStateTableImpl\n        style={{ height: '100%' }}\n        isShowExpandSearch\n        defaultExpandSearchCollapse={false}\n        fixedHeaderAutoTable\n        fixedTableSpaceBetween\n        pagination={pagination}\n      />\n    </div>\n  );\n};\n"},{title:"CustomAdvancedSearchPanelCodeText.jsx",key:"CustomAdvancedSearchPanelCodeText.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { Button, Card } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { DeleteOutlined, UserAddOutlined } from '@ant-design/icons';\r\nimport {\r\n  ConditionalRender,\r\n  DateDisplay,\r\n  DelConfirm,\r\n  FieldGeneratorToDict,\r\n  Resource,\r\n  SearchTable,\r\n  TableGridLayout,\r\n  WarnPrompt,\r\n} from '@baifendian/adhere';\r\n\r\nimport './serviceRegister';\r\n\r\nconst { ProSearchStateTable, OptionsWrap, SearchTableStateImplementFactory, DisabledOption } =\r\n  SearchTable;\r\n\r\nconst serviceName = 'user';\r\n\r\n/**\r\n * ProSearchStateTableImpl\r\n * @class ProSearchStateTableImpl\r\n * @classdesc ProSearchStateTableImpl\r\n */\r\nclass ProSearchStateTableImpl extends ProSearchStateTable {\r\n  getComponentId() {\r\n    return 'ProSearchStateTableImpl';\r\n  }\r\n\r\n  getServiceName() {\r\n    return serviceName;\r\n  }\r\n\r\n  getFetchListPropName() {\r\n    return 'fetchList';\r\n  }\r\n\r\n  getOrderFieldValue() {\r\n    return 'height';\r\n  }\r\n\r\n  /**\r\n   * getDataKey\r\n   * @description - 获取数据的key\r\n   * @protected\r\n   */\r\n  getDataKey() {\r\n    return 'list';\r\n  }\r\n\r\n  /**\r\n   * getTotalKey\r\n   * @description - 获取total的key\r\n   * @protected\r\n   */\r\n  getTotalKey() {\r\n    return 'totalCount';\r\n  }\r\n\r\n  /**\r\n   * hasAdvancedSearchPanel\r\n   * @description 是否有高级搜索按钮\r\n   * @returns {boolean}\r\n   */\r\n  // hasAdvancedSearch() {\r\n  //   return false;\r\n  // }\r\n\r\n  /**\r\n   * getGridSearchFormGroupParams\r\n   * @description 获取GridSearchFormGroup的参数\r\n   * @return {Array}\r\n   */\r\n  // getGridSearchFormGroupParams() {\r\n  //   return [\r\n  //     [\r\n  //       {\r\n  //         name: 'g1',\r\n  //         // 一行显示的列数\r\n  //         columnCount: 3,\r\n  //         // 各个列的宽度\r\n  //         colgroup: [, 'auto', , 'auto', , 'auto'],\r\n  //         data: this.getGridSearchFormGroupDataByColumnConfig(),\r\n  //       },\r\n  //     ],\r\n  //     {},\r\n  //     {\r\n  //       // 一共多少行\r\n  //       rowCount: Number.MAX_VALUE,\r\n  //       // renderTitleLabel: () => <div>搜索</div>,\r\n  //       // // 渲染高级查询面板的Collapse\r\n  //       // renderCollapse: (collapse) => <div>收起</div>,\r\n  //       // // 渲染高级查询面板显示的按钮\r\n  //       // renderSearchButton: (callback) => <div onClick={() => callback()}>高级搜索</div>,\r\n  //       // // 高级查询面板查询按钮的插入位置 (defaultItems) => {}\r\n  //       // insertSearchButton: null,\r\n  //     },\r\n  //   ];\r\n  // }\r\n\r\n  renderAdvancedSearchPanel({\r\n    advancedSearchConfig,\r\n    tableGridLayoutConfig,\r\n    groupData,\r\n    remainingGroupData,\r\n  }) {\r\n    const data = groupData[0].data;\r\n\r\n    return (\r\n      <div>\r\n        <Card title=\"法人及实际经营者信息\">\r\n          <TableGridLayout\r\n            layout=\"horizontal\"\r\n            data={[\r\n              {\r\n                name: 'g1',\r\n                width: '100%',\r\n                columnCount: 1,\r\n                colgroup: [120, 'auto'],\r\n                data: data.slice(0, 3),\r\n              },\r\n            ]}\r\n          />\r\n        </Card>\r\n\r\n        <Card title=\"从业人员信息\">\r\n          <TableGridLayout\r\n            layout=\"horizontal\"\r\n            data={[\r\n              {\r\n                name: 'g1',\r\n                width: '100%',\r\n                columnCount: 1,\r\n                colgroup: [120, 'auto'],\r\n                data: data.slice(3, 5),\r\n              },\r\n            ]}\r\n          />\r\n        </Card>\r\n\r\n        <Card title=\"九小场所\">\r\n          <TableGridLayout\r\n            data={[\r\n              {\r\n                name: 'g1',\r\n                width: '100%',\r\n                columnCount: 1,\r\n                colgroup: [120, 'auto'],\r\n                data: data.slice(5),\r\n              },\r\n            ]}\r\n            layout=\"horizontal\"\r\n          />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Table的列\r\n   * @override\r\n   * @return {*[]}\r\n   */\r\n  getColumns() {\r\n    return super.getColumns([\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: 150,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        key: 'sex',\r\n        align: 'center',\r\n        width: 150,\r\n        render: (v) => Resource.Dict.value.ResourceNormalSexMap.value.get(v).label,\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemTestSex${FieldGeneratorToDict.ComponentNames.Select.Standard}`,\r\n        },\r\n      },\r\n      {\r\n        title: '出生年月',\r\n        dataIndex: 'birthday',\r\n        key: 'birthday',\r\n        align: 'center',\r\n        width: 200,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('birthday'),\r\n        render: (val) => <DateDisplay.DateDisplay10 value={val} />,\r\n        $search: {\r\n          type: 'rangePicker',\r\n          visible: true,\r\n          startName: 'birthDayStart',\r\n          endName: 'birthDayEnd',\r\n        },\r\n      },\r\n      {\r\n        title: '身高',\r\n        dataIndex: 'height',\r\n        key: 'height',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('height'),\r\n        $search: {\r\n          type: 'inputNumberDecimal2',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '体重',\r\n        dataIndex: 'width',\r\n        key: 'width',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('width'),\r\n        $search: {\r\n          type: 'inputNumberDecimal2',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '籍贯',\r\n        dataIndex: 'homeTown',\r\n        key: 'homeTown',\r\n        width: 200,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '现居住地',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        width: 300,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n          valueAttrs: {\r\n            colSpan: 5,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: this.getOptionsColumnDataIndex(),\r\n        key: this.getOptionsColumnDataIndex(),\r\n        width: 200,\r\n        render: (v, record) => (\r\n          <OptionsWrap style={{ justifyContent: 'center' }}>\r\n            {this.renderOptionColumn(\r\n              [\r\n                {\r\n                  key: 'edit',\r\n                  value: (\r\n                    <ConditionalRender\r\n                      conditional={false}\r\n                      noMatch={() => <DisabledOption>编辑</DisabledOption>}\r\n                    >\r\n                      {() => <a>编辑</a>}\r\n                    </ConditionalRender>\r\n                  ),\r\n                },\r\n                {\r\n                  key: 'view',\r\n                  value: <a>查看</a>,\r\n                },\r\n                {\r\n                  key: 'delete',\r\n                  value: (\r\n                    <DelConfirm\r\n                      success={() =>\r\n                        Promise.resolve().then(() => {\r\n                          this.fetchData();\r\n                        })\r\n                      }\r\n                    >\r\n                      <a>删除</a>\r\n                    </DelConfirm>\r\n                  ),\r\n                },\r\n              ],\r\n              { value: v, record },\r\n            )}\r\n          </OptionsWrap>\r\n        ),\r\n      },\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * renderSearchFooterItems\r\n   * 渲染表格的工具栏\r\n   * @override\r\n   */\r\n  renderSearchFooterItems(defaultItems) {\r\n    return super.renderSearchFooterItems([\r\n      {\r\n        key: 'add',\r\n        value: (\r\n          <Button key=\"add\" icon={<UserAddOutlined />} type=\"primary\" onClick={() => {}}>\r\n            新增\r\n          </Button>\r\n        ),\r\n      },\r\n      {\r\n        key: 'delete',\r\n        value: (\r\n          <Button\r\n            key=\"delete\"\r\n            icon={<DeleteOutlined />}\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              const { selectedRowKeys } = this.state;\r\n\r\n              if (!selectedRowKeys.length) {\r\n                WarnPrompt('请选择要删除的数据');\r\n                return;\r\n              }\r\n\r\n              DelConfirm.open(() => {\r\n                return Promise.resolve().then(() => {\r\n                  this.setState({\r\n                    selectedRowKeys: [],\r\n                  });\r\n\r\n                  this.fetchData();\r\n                });\r\n              });\r\n            }}\r\n          >\r\n            删除\r\n          </Button>\r\n        ),\r\n      },\r\n      ...defaultItems,\r\n    ]);\r\n  }\r\n}\r\n\r\nProSearchStateTableImpl.propTypes = {};\r\n\r\nfunction getModels() {\r\n  const models = [];\r\n\r\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\r\n\r\n  requireComponent.keys().forEach((fileName) => {\r\n    const model = requireComponent(fileName);\r\n    models.push(model.default());\r\n  });\r\n\r\n  return models;\r\n}\r\n\r\nconst Wrap = SearchTableStateImplementFactory({\r\n  serviceNames: [serviceName],\r\n  middleWares: [],\r\n  reducer: null,\r\n  models: getModels(),\r\n})(ProSearchStateTableImpl);\r\n\r\nexport default Wrap;\r\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(Pr,null)},{id:"p22",name:"级联的查询条件",cardProps:{description:{title:"级联的查询条件",info:"级联的查询条件"}},active:"p22.jsx",config:[{title:"p22.jsx",key:"p22.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport ProSearchStateTableImpl from '../cascaderSaerchProTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <div className={styles.Wrapper}>\n      <ProSearchStateTableImpl\n        style={{ height: '100%' }}\n        isShowExpandSearch\n        defaultExpandSearchCollapse={false}\n        fixedHeaderAutoTable\n        fixedTableSpaceBetween\n        pagination={pagination}\n      />\n    </div>\n  );\n};\n"},{title:"CascaderSaerchProTableCodeText.jsx",key:"CascaderSaerchProTableCodeText.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { DeleteOutlined, UserAddOutlined } from '@ant-design/icons';\r\nimport {\r\n  ConditionalRender,\r\n  DateDisplay,\r\n  DelConfirm,\r\n  FieldGeneratorToDict,\r\n  Resource,\r\n  SearchTable,\r\n  WarnPrompt,\r\n} from '@baifendian/adhere';\r\n\r\nimport './serviceRegister';\r\n\r\nconst { ProSearchStateTable, OptionsWrap, SearchTableStateImplementFactory, DisabledOption } =\r\n  SearchTable;\r\n\r\nconst serviceName = 'user';\r\n\r\n/**\r\n * ProSearchStateTableImpl\r\n * @class ProSearchStateTableImpl\r\n * @classdesc ProSearchStateTableImpl\r\n */\r\nclass ProSearchStateTableImpl extends ProSearchStateTable {\r\n  getComponentId() {\r\n    return 'ProSearchStateTableImpl';\r\n  }\r\n\r\n  getServiceName() {\r\n    return serviceName;\r\n  }\r\n\r\n  getFetchListPropName() {\r\n    return 'fetchList';\r\n  }\r\n\r\n  getOrderFieldValue() {\r\n    return 'height';\r\n  }\r\n\r\n  /**\r\n   * getDataKey\r\n   * @description - 获取数据的key\r\n   * @protected\r\n   */\r\n  getDataKey() {\r\n    return 'list';\r\n  }\r\n\r\n  /**\r\n   * getTotalKey\r\n   * @description - 获取total的key\r\n   * @protected\r\n   */\r\n  getTotalKey() {\r\n    return 'totalCount';\r\n  }\r\n\r\n  /**\r\n   * hasAdvancedSearchPanel\r\n   * @description 是否有高级搜索按钮\r\n   * @returns {boolean}\r\n   */\r\n  hasAdvancedSearch() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * getGridSearchFormGroupParams\r\n   * @description 获取GridSearchFormGroup的参数\r\n   * @return {Array}\r\n   */\r\n  getGridSearchFormGroupParams() {\r\n    return [\r\n      [\r\n        {\r\n          name: 'g1',\r\n          // 一行显示的列数\r\n          columnCount: 3,\r\n          // 各个列的宽度\r\n          colgroup: [, 'auto', , 'auto', , 'auto'],\r\n          data: this.getGridSearchFormGroupDataByColumnConfig(),\r\n        },\r\n      ],\r\n      {},\r\n      {\r\n        // 一共多少行\r\n        rowCount: Number.MAX_VALUE,\r\n        // renderTitleLabel: () => <div>搜索</div>,\r\n        // // 渲染高级查询面板的Collapse\r\n        // renderCollapse: (collapse) => <div>收起</div>,\r\n        // // 渲染高级查询面板显示的按钮\r\n        // renderSearchButton: (callback) => <div onClick={() => callback()}>高级搜索</div>,\r\n        // // 高级查询面板查询按钮的插入位置 (defaultItems) => {}\r\n        // insertSearchButton: null,\r\n      },\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Table的列\r\n   * @override\r\n   * @return {*[]}\r\n   */\r\n  getColumns() {\r\n    return super.getColumns([\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: 150,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '省',\r\n        dataIndex: 'sex',\r\n        key: 'sex',\r\n        align: 'center',\r\n        width: 150,\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemProvince${FieldGeneratorToDict.ComponentNames.SelectDynamic.Standard}`,\r\n        },\r\n      },\r\n      {\r\n        title: '市',\r\n        dataIndex: 'height',\r\n        key: 'height',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('height'),\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemCity${FieldGeneratorToDict.ComponentNames.SelectDynamic.Standard}`,\r\n          props: {\r\n            cascadeParams: this.state.sex,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '区',\r\n        dataIndex: 'width',\r\n        key: 'width',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('width'),\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemCounty${FieldGeneratorToDict.ComponentNames.SelectDynamic.Standard}`,\r\n          props: {\r\n            cascadeParams: this.state.height,\r\n          },\r\n        },\r\n      },\r\n\r\n      {\r\n        title: '出生年月',\r\n        dataIndex: 'birthday',\r\n        key: 'birthday',\r\n        align: 'center',\r\n        width: 200,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('birthday'),\r\n        render: (val) => <DateDisplay.DateDisplay10 value={val} />,\r\n        $search: {\r\n          type: 'rangePicker',\r\n          visible: true,\r\n          startName: 'birthDayStart',\r\n          endName: 'birthDayEnd',\r\n        },\r\n      },\r\n      {\r\n        title: '籍贯',\r\n        dataIndex: 'homeTown',\r\n        key: 'homeTown',\r\n        width: 200,\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemDepartmentAll${FieldGeneratorToDict.ComponentNames.SelectDynamic.Multi}`,\r\n        },\r\n      },\r\n      {\r\n        title: '现居住地',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        width: 300,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n          valueAttrs: {\r\n            colSpan: 5,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: this.getOptionsColumnDataIndex(),\r\n        key: this.getOptionsColumnDataIndex(),\r\n        width: 200,\r\n        render: (v, record) => (\r\n          <OptionsWrap style={{ justifyContent: 'center' }}>\r\n            {this.renderOptionColumn(\r\n              [\r\n                {\r\n                  key: 'edit',\r\n                  value: (\r\n                    <ConditionalRender\r\n                      conditional={false}\r\n                      noMatch={() => <DisabledOption>编辑</DisabledOption>}\r\n                    >\r\n                      {() => <a>编辑</a>}\r\n                    </ConditionalRender>\r\n                  ),\r\n                },\r\n                {\r\n                  key: 'view',\r\n                  value: <a>查看</a>,\r\n                },\r\n                {\r\n                  key: 'delete',\r\n                  value: (\r\n                    <DelConfirm\r\n                      success={() =>\r\n                        Promise.resolve().then(() => {\r\n                          this.fetchData();\r\n                        })\r\n                      }\r\n                    >\r\n                      <a>删除</a>\r\n                    </DelConfirm>\r\n                  ),\r\n                },\r\n              ],\r\n              { value: v, record },\r\n            )}\r\n          </OptionsWrap>\r\n        ),\r\n      },\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * renderSearchFooterItems\r\n   * 渲染表格的工具栏\r\n   * @override\r\n   */\r\n  renderSearchFooterItems(defaultItems) {\r\n    return super.renderSearchFooterItems([\r\n      {\r\n        key: 'add',\r\n        value: (\r\n          <Button key=\"add\" icon={<UserAddOutlined />} type=\"primary\" onClick={() => {}}>\r\n            新增\r\n          </Button>\r\n        ),\r\n      },\r\n      {\r\n        key: 'delete',\r\n        value: (\r\n          <Button\r\n            key=\"delete\"\r\n            icon={<DeleteOutlined />}\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              const { selectedRowKeys } = this.state;\r\n\r\n              if (!selectedRowKeys.length) {\r\n                WarnPrompt('请选择要删除的数据');\r\n                return;\r\n              }\r\n\r\n              DelConfirm.open(() => {\r\n                return Promise.resolve().then(() => {\r\n                  this.setState({\r\n                    selectedRowKeys: [],\r\n                  });\r\n\r\n                  this.fetchData();\r\n                });\r\n              });\r\n            }}\r\n          >\r\n            删除\r\n          </Button>\r\n        ),\r\n      },\r\n      ...defaultItems,\r\n    ]);\r\n  }\r\n}\r\n\r\nProSearchStateTableImpl.propTypes = {};\r\n\r\nfunction getModels() {\r\n  const models = [];\r\n\r\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\r\n\r\n  requireComponent.keys().forEach((fileName) => {\r\n    const model = requireComponent(fileName);\r\n    models.push(model.default());\r\n  });\r\n\r\n  return models;\r\n}\r\n\r\nconst Wrap = SearchTableStateImplementFactory({\r\n  serviceNames: [serviceName],\r\n  middleWares: [],\r\n  reducer: null,\r\n  models: getModels(),\r\n})(ProSearchStateTableImpl);\r\n\r\nexport default Wrap;\r\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(qr,null)},{id:"p23",name:"列隐藏的查询条件",cardProps:{description:{title:"列隐藏的查询条件",info:"列隐藏的查询条件"}},active:"p23.jsx",config:[{title:"p23.jsx",key:"p23.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import React, { useState } from 'react';\n\nimport ProSearchStateTableImpl from '../columnHideProSearchTable';\n\nimport styles from './examples.less';\n\nexport default () => {\n  const [pagination, setPagination] = useState(false);\n\n  return (\n    <div className={styles.Wrapper}>\n      <ProSearchStateTableImpl\n        style={{ height: '100%' }}\n        isShowExpandSearch\n        defaultExpandSearchCollapse={false}\n        fixedHeaderAutoTable\n        fixedTableSpaceBetween\n        pagination={pagination}\n      />\n    </div>\n  );\n};\n"},{title:"ColumnHideProSearchTableCodeText.jsx",key:"ColumnHideProSearchTableCodeText.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { DeleteOutlined, UserAddOutlined } from '@ant-design/icons';\r\nimport {\r\n  ConditionalRender,\r\n  DateDisplay,\r\n  DelConfirm,\r\n  FieldGeneratorToDict,\r\n  Resource,\r\n  SearchTable,\r\n  WarnPrompt,\r\n} from '@baifendian/adhere';\r\n\r\nimport './serviceRegister';\r\n\r\nconst { ProSearchStateTable, OptionsWrap, SearchTableStateImplementFactory, DisabledOption } =\r\n  SearchTable;\r\n\r\nconst serviceName = 'user';\r\n\r\n/**\r\n * ProSearchStateTableImpl\r\n * @class ProSearchStateTableImpl\r\n * @classdesc ProSearchStateTableImpl\r\n */\r\nclass ProSearchStateTableImpl extends ProSearchStateTable {\r\n  getComponentId() {\r\n    return 'ProSearchStateTableImpl';\r\n  }\r\n\r\n  getServiceName() {\r\n    return serviceName;\r\n  }\r\n\r\n  getFetchListPropName() {\r\n    return 'fetchList';\r\n  }\r\n\r\n  getOrderFieldValue() {\r\n    return 'height';\r\n  }\r\n\r\n  /**\r\n   * getDataKey\r\n   * @description - 获取数据的key\r\n   * @protected\r\n   */\r\n  getDataKey() {\r\n    return 'list';\r\n  }\r\n\r\n  /**\r\n   * getTotalKey\r\n   * @description - 获取total的key\r\n   * @protected\r\n   */\r\n  getTotalKey() {\r\n    return 'totalCount';\r\n  }\r\n\r\n  /**\r\n   * hasAdvancedSearchPanel\r\n   * @description 是否有高级搜索按钮\r\n   * @returns {boolean}\r\n   */\r\n  hasAdvancedSearch() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * getGridSearchFormGroupParams\r\n   * @description 获取GridSearchFormGroup的参数\r\n   * @return {Array}\r\n   */\r\n  getGridSearchFormGroupParams() {\r\n    return [\r\n      [\r\n        {\r\n          name: 'g1',\r\n          // 一行显示的列数\r\n          columnCount: 3,\r\n          // 各个列的宽度\r\n          colgroup: [, 'auto', , 'auto', , 'auto'],\r\n          data: this.getGridSearchFormGroupDataByColumnConfig(),\r\n        },\r\n      ],\r\n      {},\r\n      {\r\n        // 一共多少行\r\n        rowCount: Number.MAX_VALUE,\r\n        // renderTitleLabel: () => <div>搜索</div>,\r\n        // // 渲染高级查询面板的Collapse\r\n        // renderCollapse: (collapse) => <div>收起</div>,\r\n        // // 渲染高级查询面板显示的按钮\r\n        // renderSearchButton: (callback) => <div onClick={() => callback()}>高级搜索</div>,\r\n        // // 高级查询面板查询按钮的插入位置 (defaultItems) => {}\r\n        // insertSearchButton: null,\r\n      },\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Table的列\r\n   * @override\r\n   * @return {*[]}\r\n   */\r\n  getColumns() {\r\n    return super.getColumns([\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: 150,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n        },\r\n      },\r\n      {\r\n        title: '省',\r\n        dataIndex: 'sex',\r\n        key: 'sex',\r\n        align: 'center',\r\n        width: 150,\r\n        $hide: true,\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemProvince${FieldGeneratorToDict.ComponentNames.SelectDynamic.Standard}`,\r\n        },\r\n      },\r\n      {\r\n        title: '市',\r\n        dataIndex: 'height',\r\n        key: 'height',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('height'),\r\n        $hide: true,\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemCity${FieldGeneratorToDict.ComponentNames.SelectDynamic.Standard}`,\r\n          props: {\r\n            cascadeParams: this.state.sex,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '区',\r\n        dataIndex: 'width',\r\n        key: 'width',\r\n        align: 'center',\r\n        width: 150,\r\n        sorter: true,\r\n        $hide: true,\r\n        sortOrder: this.sortOrder('width'),\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemCounty${FieldGeneratorToDict.ComponentNames.SelectDynamic.Standard}`,\r\n          props: {\r\n            cascadeParams: this.state.height,\r\n          },\r\n        },\r\n      },\r\n\r\n      {\r\n        title: '出生年月',\r\n        dataIndex: 'birthday',\r\n        key: 'birthday',\r\n        align: 'center',\r\n        width: 200,\r\n        sorter: true,\r\n        sortOrder: this.sortOrder('birthday'),\r\n        render: (val) => <DateDisplay.DateDisplay10 value={val} />,\r\n        $search: {\r\n          type: 'rangePicker',\r\n          visible: true,\r\n          startName: 'birthDayStart',\r\n          endName: 'birthDayEnd',\r\n        },\r\n      },\r\n      {\r\n        title: '籍贯',\r\n        dataIndex: 'homeTown',\r\n        key: 'homeTown',\r\n        width: 200,\r\n        $search: {\r\n          type: 'dict',\r\n          visible: true,\r\n          dictName: `SystemDepartmentAll${FieldGeneratorToDict.ComponentNames.SelectDynamic.Multi}`,\r\n        },\r\n      },\r\n      {\r\n        title: '现居住地',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        width: 300,\r\n        $search: {\r\n          type: 'input',\r\n          visible: true,\r\n          valueAttrs: {\r\n            colSpan: 5,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: this.getOptionsColumnDataIndex(),\r\n        key: this.getOptionsColumnDataIndex(),\r\n        width: 200,\r\n        render: (v, record) => (\r\n          <OptionsWrap style={{ justifyContent: 'center' }}>\r\n            {this.renderOptionColumn(\r\n              [\r\n                {\r\n                  key: 'edit',\r\n                  value: (\r\n                    <ConditionalRender\r\n                      conditional={false}\r\n                      noMatch={() => <DisabledOption>编辑</DisabledOption>}\r\n                    >\r\n                      {() => <a>编辑</a>}\r\n                    </ConditionalRender>\r\n                  ),\r\n                },\r\n                {\r\n                  key: 'view',\r\n                  value: <a>查看</a>,\r\n                },\r\n                {\r\n                  key: 'delete',\r\n                  value: (\r\n                    <DelConfirm\r\n                      success={() =>\r\n                        Promise.resolve().then(() => {\r\n                          this.fetchData();\r\n                        })\r\n                      }\r\n                    >\r\n                      <a>删除</a>\r\n                    </DelConfirm>\r\n                  ),\r\n                },\r\n              ],\r\n              { value: v, record },\r\n            )}\r\n          </OptionsWrap>\r\n        ),\r\n      },\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * renderSearchFooterItems\r\n   * 渲染表格的工具栏\r\n   * @override\r\n   */\r\n  renderSearchFooterItems(defaultItems) {\r\n    return super.renderSearchFooterItems([\r\n      {\r\n        key: 'add',\r\n        value: (\r\n          <Button key=\"add\" icon={<UserAddOutlined />} type=\"primary\" onClick={() => {}}>\r\n            新增\r\n          </Button>\r\n        ),\r\n      },\r\n      {\r\n        key: 'delete',\r\n        value: (\r\n          <Button\r\n            key=\"delete\"\r\n            icon={<DeleteOutlined />}\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              const { selectedRowKeys } = this.state;\r\n\r\n              if (!selectedRowKeys.length) {\r\n                WarnPrompt('请选择要删除的数据');\r\n                return;\r\n              }\r\n\r\n              DelConfirm.open(() => {\r\n                return Promise.resolve().then(() => {\r\n                  this.setState({\r\n                    selectedRowKeys: [],\r\n                  });\r\n\r\n                  this.fetchData();\r\n                });\r\n              });\r\n            }}\r\n          >\r\n            删除\r\n          </Button>\r\n        ),\r\n      },\r\n      ...defaultItems,\r\n    ]);\r\n  }\r\n}\r\n\r\nProSearchStateTableImpl.propTypes = {};\r\n\r\nfunction getModels() {\r\n  const models = [];\r\n\r\n  const requireComponent = require.context('./model', false, /.*\\.(js)$/);\r\n\r\n  requireComponent.keys().forEach((fileName) => {\r\n    const model = requireComponent(fileName);\r\n    models.push(model.default());\r\n  });\r\n\r\n  return models;\r\n}\r\n\r\nconst Wrap = SearchTableStateImplementFactory({\r\n  serviceNames: [serviceName],\r\n  middleWares: [],\r\n  reducer: null,\r\n  models: getModels(),\r\n})(ProSearchStateTableImpl);\r\n\r\nexport default Wrap;\r\n"},{title:"serviceRegister.jsx",key:"serviceRegister.jsx",mode:"code",theme:"eclipse",scope:{React:o},codeText:l},{title:"model/user.js",key:"model/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:n},{title:"service/user.js",key:"service/user.js",mode:"code",theme:"eclipse",scope:{React:o},codeText:a}],type:"PlayGroundTab",renderChildren:()=>o.createElement(Ur,null)}]}),o.createElement(s.e6,{title:"Props",config:[{border:!0,title:"Table",data:[{params:"className",desc:"附加样式",type:"string",defaultVal:""},{params:"style",desc:"附加样式",type:"object",defaultVal:"{}"},{params:"tableClassName",desc:"附加样式",type:"string",defaultVal:""},{params:"tableStyle",desc:"附加样式",type:"object",defaultVal:"{}"},{params:"searchClassName",desc:"附加样式",type:"string",defaultVal:""},{params:"searchStyle",desc:"附加样式",type:"object",defaultVal:"{}"},{params:"reset",desc:"是否重置",type:"boolean",defaultVal:"false"},{params:"firstLoading",desc:"是否是第一次加载",type:"boolean",defaultVal:"false"},{params:"antdTableProps",desc:"Table的antd配置",type:"object",defaultVal:"{}"},{params:"isShowExpandSearch",desc:"是否有展开和收缩的功能",type:"boolean",defaultVal:"true"},{params:"defaultExpandSearchCollapse",desc:"展开和收缩的默认状态",type:"boolean",defaultVal:"true"},{params:"fitSearch",desc:"撑开search",type:"boolean",defaultVal:"true"},{params:"fitTable",desc:"撑开表格",type:"boolean",defaultVal:"true"},{params:"autoFixed",desc:"是否是查询固定，表格自适应",type:"boolean",defaultVal:"true"},{params:"fixedHeaderAutoTable",desc:"锁定列头，表格滚动",type:"boolean",defaultVal:"false"},{params:"fixedTableSpaceBetween",desc:"两端固定(表格的头始终在上方，分页始终在下方)",type:"boolean",defaultVal:"false"}]},{border:!0,title:"TableImplement",data:[{params:"getTableWrapperInstance",desc:"",type:"Function",defaultVal:""}]}]}),o.createElement(s.I7,{title:"Api",config:[{border:!0,title:"重写的方法",data:[{name:"isShowNumber",desc:"表格是否显示序号",modifier:"public",params:[],returnType:"boolean",returnDesc:""},{name:"getTableNumberColumnWidth",desc:"表格序号列的宽度",modifier:"public",params:[],returnType:"number",returnDesc:"80"},{name:"getNumberGeneratorRule",desc:"获取符号列的生成规则",modifier:"public",params:[],returnType:"string",returnDesc:"NUMBER_GENERATOR_RULE_ALONE(单独模式),NUMBER_GENERATOR_RULE_CONTINUITY(连续模式)"},{name:"renderTableNumberColumn",desc:"渲染序号列",modifier:"public",params:[{name:"number",desc:"",type:"string",defaultVal:"",required:""},{name:"params",desc:"",type:"{ record: object; index: number }",defaultVal:"",required:""}],returnType:"React.ReactElement",returnDesc:""},{name:"renderTableHeader",desc:"渲染表格的头",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderTableFooter",desc:"渲染表格的脚",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"getRowKey",desc:"获取表格的主键属性",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getData",desc:"获取表格数据",modifier:"public",params:[],returnType:"Array<Object>",returnDesc:""},{name:"getColumns",desc:"获取表格列的信息",modifier:"public",params:[],returnType:"Array<object>",returnDesc:""},{name:"getRowSelection",desc:"获取表格行选择对象",modifier:"public",params:[],returnType:"TableRowSelection<object>",returnDesc:""},{name:"renderSearchForm",desc:"渲染查询的UI",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderTableHeader",desc:"渲染表格的头",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderTableFooter",desc:"渲染表格的脚",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderTableNumberColumn",desc:"渲染序号列",modifier:"public",params:[{name:"number",desc:"",type:"string",defaultVal:"",required:""}],returnType:"React.ReactElement",returnDesc:""},{name:"getTotal",desc:"获取表格数据的总数",modifier:"public",params:[],returnType:"number",returnDesc:""},{name:"getOrderFieldProp",desc:"获取表格的排序字段",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getOrderProp",desc:"获取表格的排序属性",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"onSubTableChange",desc:"获取表格change句柄",modifier:"public",params:[{name:"pagination",desc:"",type:"TablePaginationConfig",defaultVal:"",required:""},{name:"filters",desc:"",type:"Record<string, FilterValue | null>",defaultVal:"",required:""},{name:"sorter",desc:"",type:"SorterResult<object> | SorterResult<object>[]",defaultVal:"",required:""},{name:"extra",desc:"",type:"TableCurrentDataSource<object>",defaultVal:"",required:""}],returnType:"void",returnDesc:""},{name:"clear",desc:"清除操作",modifier:"public",params:[],returnType:"Promise<any>",returnDesc:""},{name:"renderSearchFooterItems",desc:"渲染SearchFooter的按钮组",modifier:"public",params:[],returnType:"Array<React.ReactElement> | null",returnDesc:""},{name:"onSearch",desc:"进行查询",modifier:"public",params:[],returnType:"void",returnDesc:""}]},{border:!0,title:"searchtableimplement重写的方法",data:[{name:"getFetchListPropName",desc:"获取调用列表接口的函数名",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getFetchListPropNameToFirstUpper",desc:"获取调用列表接口的函数名首字母大写",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"onSelectChange",desc:"",modifier:"public",params:[{name:"property",desc:"",type:"string",defaultVal:"",required:""},{name:"value",desc:"",type:"string",defaultVal:"",required:""}],returnType:"",returnDesc:""},{name:"onInputChange",desc:"",modifier:"public",params:[{name:"property",desc:"",type:"string",defaultVal:"",required:""},{name:"e",desc:"",type:"object",defaultVal:"",required:""}],returnType:"",returnDesc:""},{name:"onDateTimeRangeChange",desc:"",modifier:"public",params:[{name:"propertys",desc:"",type:"Array<string>",defaultVal:"",required:""},{name:"moments",desc:"",type:"Array<moment>",defaultVal:"",required:""}],returnType:"",returnDesc:""},{name:"getParams",desc:"获取查询参数对象",modifier:"public",params:[],returnType:"Object",returnDesc:""},{name:"getServiceName",desc:"获取接口服务的model名称",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getFetchDataParams",desc:"获取调用数据接口的参数",modifier:"public",params:[],returnType:"object",returnDesc:""},{name:"isShowNumber",desc:"是否线上序号列",modifier:"public",params:[],returnType:"boolean",returnDesc:""},{name:"getNumberGeneratorRule",desc:"表格序号列的生成规则",modifier:"public",params:[],returnType:"Symbol",returnDesc:""},{name:"getTableNumberColumnWidth",desc:"表格序号列的宽度",modifier:"public",params:[],returnType:"number",returnDesc:""},{name:"getRowKey",desc:"数据的主键",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getData",desc:"Table的数据(Table的dataSource字段)",modifier:"public",params:[],returnType:"Array<object>",returnDesc:""},{name:"getDataKey",desc:"获取数据的key",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getColumns",desc:"Table的列",modifier:"public",params:[],returnType:"Array<ColumnType<object>>",returnDesc:""},{name:"getRowSelection",desc:"获取表格行选择对象",modifier:"public",params:[],returnType:"TableRowSelection<object>",returnDesc:""},{name:"renderSearchFormBefore",desc:"渲染Table查询的表单之前的UI",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderSearchForm",desc:"渲染Table查询的表单",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderSearchFormAfter",desc:"渲染Table查询的表单之后的UI",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"renderInner",desc:"渲染主体",modifier:"public",params:[],returnType:"React.ReactElement | null",returnDesc:""},{name:"getTotal",desc:"Table数据的总条数",modifier:"public",params:[],returnType:"number",returnDesc:""},{name:"getTotalKey",desc:"获取total的key",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getLimit",desc:"获取分页条数",modifier:"public",params:[],returnType:"number",returnDesc:""},{name:"getOrderFieldProp",desc:"获取排序字段",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getOrderFieldValue",desc:"获取默认排序字段的值",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getOrderProp",desc:"获取排序方式",modifier:"public",params:[],returnType:"string",returnDesc:""},{name:"getOrderPropValue",desc:"获取默认排序方式",modifier:"public",params:[],returnType:"'descend' | 'ascend'",returnDesc:""},{name:"clear",desc:"清空查询条件",modifier:"public",params:[],returnType:"Promise<any>",returnDesc:""},{name:"onClear",desc:"点击重置按钮",modifier:"public",params:[],returnType:"Promise<void>",returnDesc:""},{name:"renderSearchFooterItems",desc:"渲染表格的工具栏",modifier:"public",params:[],returnType:"Array<any>",returnDesc:""},{name:"showLoading",desc:"是否显示遮罩",modifier:"public",params:[],returnType:"boolean",returnDesc:""},{name:"fetchData",desc:"加载数据",modifier:"public",params:[],returnType:"Promise<any>",returnDesc:""},{name:"fetchDataExecute",desc:"真正的执行获取列表数据的接口",modifier:"public",params:[{name:"searchParams",desc:"",type:"object",defaultVal:"",required:""}],returnType:"Promise<any>",returnDesc:""},{name:"onSearch",desc:"点击查询",modifier:"public",params:[],returnType:"Promise<any>",returnDesc:""}]}]}))},45020:(e,r,t)=>{"use strict";t.d(r,{A:()=>s,J:()=>o});var n=t(62076),a=t(60888),l=t.n(a);const i=[];i.length=300,i.fill(0);const o={code:200,data:{total:1,list:[{id:l().random.uuid(),name:l().internet.userName(),sex:"".concat(n.A.generatorRandom(0,1)),homeTown:l().address.city(),birthday:(new Date).getTime(),deptName:l().company.companyName(),height:l().random.number(),width:l().random.number()}]}},s={code:200,data:{total:i.length,list:i.map((()=>({id:l().random.uuid(),name:l().internet.userName(),sex:"".concat(n.A.generatorRandom(0,1)),homeTown:l().address.city(),address:l().address.city(),birthday:(new Date).getTime(),deptName:l().company.companyName(),height:l().random.number(),width:l().random.number()})))}}},31615:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>a});var n=t(3307);const a=()=>Object.assign(n.A.model("user"),{})},90181:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>i,fetchList:()=>l});const n=new(t(7847).A)(""),a=t(45020).A,l={call:e=>{let{page:r,limit:t}=e;const l=JSON.parse(JSON.stringify(a)),i={code:200,data:{list:l.data.list.slice((r-1)*t,r*t),totalCount:l.data.total}};return n.get({path:i,mock:!0,loading:{show:!1}}).promise},defaultResult:()=>({totalCount:0,list:[]})},i={codeKey:"code",codeSuccessKey:200,dataKey:"data",messageKey:"message"}},19994:(e,r,t)=>{"use strict";t.d(r,{Ay:()=>p,I7:()=>u,Wc:()=>d,e6:()=>c,wn:()=>s});var n=t(71860),a=t(24370),l=t(26322);const{PlayGroundPageContext:i,PlayGroundPage:o}=a.A,{Section:s,CodeBoxSection:d,PropsSection:c,FunctionPropsSection:u}=o;const p=function(e){let{children:r,onScrollBottom:t,distance:a=50,...s}=e;const[d,c]=(0,l.useState)(),u=(0,l.useRef)(),p=(0,l.useRef)(!1);return(0,l.useEffect)((()=>{function e(){const e=r.scrollHeight-r.offsetHeight,n=r.scrollTop;if(t&&Math.abs(n-e)<=a){if(p.current)return;p.current=!0,null==t||t().then((()=>{p.current=!1}))}}const r=u.current.parentElement.parentElement;return r.addEventListener("scroll",e),c(r),()=>{r.removeEventListener("scroll",e)}}),[]),l.createElement(i.Provider,{value:{scrollEl:d}},l.createElement(o,(0,n.A)({ref:u},s),r))}},7847:(e,r,t)=>{"use strict";t.d(r,{A:()=>k});var n=t(2897),a=t(65410);const l={show:function(e,r){return void 0===e&&(e=document.body),a.A.show({content:r=void 0===r?"":r,maskClickable:!1,icon:"loading",getContainer:null!=e?e:document.body,duration:0})},hide:function(e){e.close()},hideAll:function(){a.A.clear()}};var i,o,s=t(54763),d=t(88724),c=t(59418),u=function(){return(u=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var a in r=arguments[t])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},p=function(e,r){var t={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,a=Object.getOwnPropertySymbols(e);n<a.length;n++)r.indexOf(a[n])<0&&Object.prototype.propertyIsEnumerable.call(e,a[n])&&(t[a[n]]=e[a[n]]);return t},m=!1,h=300,y=function(){function e(e,r,t){this.baseURL=e||"",this.systemManagerBaseURL=r||"",this.config=null!=t?t:{}}return e.prototype.get=function(e){var r=this,t=(e.data,p(e,["data"])),n={};e=new Promise((function(e,a){(e=(n=C.call(r,u(u(u(u({},S.call(r)),r.config),{method:"get"}),t),{resolve:e,reject:a})).xhr)&&e.send(null)}));return u(u({},n),{promise:e})},e.prototype.post=function(e){return w.call(this,"post",e)},e.prototype.path=function(e){return w.call(this,"path",e)},e.prototype.put=function(e){return w.call(this,"put",e)},e.prototype.delete=function(e){return w.call(this,"delete",e)},e.TIMEOUT=1e6,e.STATUS_SUCCESS_CODES=[200,201,202,203,204,205,206,207,208,226],e.STATUS_REDIRECT_CODES=[300,301,302,303,304,305,306,307,308],e.READY_STATE_UNSENT=0,e.READY_STATE_OPENED=1,e.READY_STATE_HEADERS_RECEIVED=2,e.READY_STATE_LOADING=3,e.READY_STATE_DONE=4,e.CONTENT_TYPE_APPLICATION_JSON="application/json",e.CONTENT_TYPE_MULTIPART_FORM_DATA="multipart/form-data",e.CONTENT_TYPE_APPLICATION_X_WWW_FORM_URLENCODED="application/x-www-form-urlencoded",e.CONTENT_TYPE_TEXT_XML="text/xml",e.CONTENT_TYPE_APPLICATION_XML="application/xml",e.CONTENT_TYPE_TEXT_PLAIN="text/plain",e}();function b(e,r){i&&(clearTimeout(i),i=null),i=setTimeout((function(){n.Ay.error({message:e,description:r})}),h)}function g(e,r){o&&(clearTimeout(o),o=null),o=setTimeout((function(){n.Ay.warning({message:e,description:r})}),h)}function S(){var e=this;return{timeout:y.TIMEOUT,withCredentials:!0,onLoad:function(){},onLoadsStart:function(){},onLoadend:function(){},onProgress:function(){},onTimeout:function(){g(c.Ay.v("提示"),c.Ay.v("请求超时"))},onAbort:function(){g(c.Ay.v("提示"),c.Ay.v("请求终止"))},onError:function(){b(c.Ay.v("提示"),c.Ay.v("请求发生错误"))},interceptor:function(r){switch(r.status){case 401:D.call(e);break;case 402:I.call(e);break;default:b(c.Ay.v("提示"),c.Ay.v("已提出请求，但未收到任何回复"))}},mock:!1,loading:{show:!1,text:"",el:document.body,zIndex:19999,size:"default"},onBeforeResponse:function(){},dataKey:"data",messageKey:"message",codeKey:"code",codeSuccess:200,showWarn:!0,responseType:""}}function v(e){var r=e.show,t=e.terminal,n=e.data,a=e.indicator,l=(e=e.xhr,f(t));return u({xhr:e,data:n},r?{hideIndicator:function(){return l.hide(a)}}:{})}function T(e){var r,t,n=e.xhr,a=e.interceptor,l=(o=e.loading).show,i=o.indicator,o=o.terminal,s=(p=e.business).messageKey,d=p.codeKey,u=p.codeSuccess,p=p.showWarn,m=e.resolve,h=(e=e.reject,f(o));n.readyState===y.READY_STATE_DONE&&(200<=n.status&&n.status<300||304===n.status?-1!==(r=n.getResponseHeader("Content-type")).indexOf(y.CONTENT_TYPE_APPLICATION_JSON)?(t=JSON.parse(n.responseText),p&&d in t&&t[d]!==u&&g(c.Ay.v("提示"),t[s]),m(v({show:l,terminal:o,data:t,indicator:i,xhr:n}))):[y.CONTENT_TYPE_TEXT_XML,y.CONTENT_TYPE_TEXT_XML].includes(r)?m(v({show:l,terminal:o,data:n.responseXML,indicator:i,xhr:n})):m(v({show:l,terminal:o,data:n.response,indicator:i,xhr:n})):(a({status:n.status,statusText:n.statusText,response:n.response,responseText:n.responseText}),e({status:n.status,statusText:n.statusText,response:n.response,responseText:n.responseText}),l&&i&&h.hide(i)))}function x(e){return e&&"form"in e&&"data"in e&&!d.A.isEmpty(e.form)&&!d.A.isEmpty(e.data)&&e.form instanceof HTMLFormElement}function f(e){return"pc"===e?s.A:l}function C(e,r){var t,n=e.method,a=e.path,l=e.headers,i=e.data,o=e.mock,s=e.loading,u=void 0===(u=(e.onBeforeResponse,e.dataKey))?"data":u,m=void 0===(m=e.messageKey)?"message":m,h=void 0===(h=e.codeKey)?"code":h,b=void 0===(b=e.codeSuccess)?200:b,g=void 0===(g=e.showWarn)||g,v=(e=p(e,["method","path","headers","data","mock","loading","onBeforeResponse","dataKey","messageKey","codeKey","codeSuccess","showWarn"]),r.resolve),C=(r=r.reject,"".concat(c.Ay.v("加载中"),"...")),E=void 0!==(w=s.show)&&w,w=void 0===(w=s.text)?C:w,D=void 0===(D=s.el)?document.body:D,I=void 0===(I=s.zIndex)?19999:I,k=void 0===(k=s.size)?"default":k,N=f(s=void 0===(s=s.terminal)?"pc":s);if(E&&(t=N.show(D||document.body,w||C,I,k)),o)return setTimeout((function(){v(E?{data:a,hideIndicator:function(){N.hide(t)}}:a)}),200),{xhr:null,contentType:""};D=this.baseURL,w=this.config,I=(C=Object.assign(S.call(this),w,e)).timeout,k=C.withCredentials,o=C.responseType,w=C.interceptor,e=p(C,["timeout","withCredentials","responseType","interceptor"]);var P=new XMLHttpRequest;P.open(n,"".concat(D,"/").concat(a),!0),P.timeout=I,P.withCredentials=k,P.responseType=o||"",C="";if(!d.A.isEmpty(l)&&d.A.isObject(l))for(var R in"Content-Type"in l||x(i)||(l["Content-Type"]="".concat(y.CONTENT_TYPE_APPLICATION_JSON,";charset=utf-8")),C=null!=(D=l["Content-Type"])?D:"",l)P.setRequestHeader(R,l[R]);else!d.A.isEmpty(i)&&d.A.isRef(i)&&"get"!==n&&(x(i)?C=y.CONTENT_TYPE_MULTIPART_FORM_DATA:(C="".concat(y.CONTENT_TYPE_APPLICATION_JSON,";charset=utf-8"),P.setRequestHeader("Content-Type","".concat(y.CONTENT_TYPE_APPLICATION_JSON,";charset=utf-8"))));return function(e){var r=e.xhr,t=e.events,n=e.reject,a=t.onTimeout,l=(e=t.onLoadsStart,t.onProgress),i=t.onAbort,o=t.onError,s=t.onLoad;t=t.onLoadend,a&&r.addEventListener("timeout",(function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];a.apply(void 0,null!=e?e:{}),n.apply(void 0,null!=e?e:{})})),i&&r.addEventListener("abort",(function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];i.apply(void 0,null!=e?e:{}),n.apply(void 0,null!=e?e:{})})),o&&r.addEventListener("error",(function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];o.apply(void 0,null!=e?e:{}),n.apply(void 0,null!=e?e:{})})),e&&r.addEventListener("loadstart",e),l&&r.addEventListener("progress",l),s&&r.addEventListener("load",s),t&&r.addEventListener("loadend",t)}({xhr:P,events:e,reject:r}),P.onreadystatechange=T.bind(this,{xhr:P,interceptor:w,loading:{show:E,terminal:s,indicator:t},business:{dataKey:u,messageKey:m,codeKey:h,codeSuccess:b,showWarn:g},resolve:v,reject:r}),{xhr:P,contentType:C}}function E(e){var r,t=e.data,n=void 0===(n=e.contentType)?"":n;e=e.customSendJSONStringify;if(n.startsWith(y.CONTENT_TYPE_APPLICATION_JSON)&&d.A.isRef(t))return e?JSON.stringify(t,e):JSON.stringify(t);if(n.startsWith(y.CONTENT_TYPE_APPLICATION_X_WWW_FORM_URLENCODED)&&d.A.isObject(t))return Array.from(Object.keys(t)).map((function(e){return"".concat(e,"=").concat(encodeURIComponent(t[e]))})).join("&");if(d.A.isObject(t)&&x(t))return r=new FormData(t.form),Array.from(Object.keys(t.data)).forEach((function(e){var n=t.data[e];n instanceof Function?r.append(e,n()):Array.isArray(n)?n.forEach((function(t){r.append(e,t)})):r.append(e,n)})),r;if(n.startsWith(y.CONTENT_TYPE_TEXT_PLAIN)){if(d.A.isString(t))return t;if(d.A.isObject(t))return e?JSON.stringify(t,e):JSON.stringify(t)}return null==(n=null==t?void 0:t.toString)?void 0:n.call(t)}function w(e,r){var t=this,n={},a=new Promise((function(a,l){a=(n=C.call(t,u(u(u(u({},S.call(t)),t.config),{method:e}),r),{resolve:a,reject:l})).xhr,l=n.contentType,a&&a.send(E.call(t,{data:r.data,contentType:l,customSendJSONStringify:r.customSendJSONStringify}))}));return u(u({},n),{promise:a})}function D(){if("undefined"!=typeof window){if(window.top&&window.top!==window&&window.top.postMessage("http_status_401","*"),m)return!1;window.location.href=d.A.casUrl({baseUrl:this.systemManagerBaseURL,enterUrl:window.location.href,defaultLocal:"zh_CN"})}}function I(){if(m=!0,"undefined"!=typeof window)return window.parent&&window.parent!==window?(window.parent.postMessage("http_status_402","*"),!1):void(window.location.href=d.A.casLogoutUrl({baseUrl:this.systemManagerBaseURL,enterUrl:window.location.href,params:"&code=402"}))}const k=y},96815:(e,r,t)=>{"use strict";t.d(r,{A:()=>n});const n=t(40892).A},58278:(e,r,t)=>{"use strict";t.d(r,{A:()=>c});var n=t(26322),a=t(81703),l=t(59418),i=t(85820),o=function(){return(o=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var a in r=arguments[t])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},s=function(e,r){var t={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,a=Object.getOwnPropertySymbols(e);n<a.length;n++)r.indexOf(a[n])<0&&Object.prototype.propertyIsEnumerable.call(e,a[n])&&(t[a[n]]=e[a[n]]);return t},d=(0,n.memo)((function(e){var r=e.className,t=e.style,a=e.children;return n.createElement("div",{className:"".concat("adhere-ui-del-confirm"," ").concat(null!=r?r:""),style:null!=t?t:{},onClick:function(r){r.stopPropagation(),e.children,r=s(e,["children"]),d.open(o({},r))}},a)}));d.displayName="DelConform",d.open=function(e){var r=e.success;e=s(e,["success"]);a.A.Confirm(o(o({},e),{title:e.title||l.Ay.v("提示"),text:e.text||"".concat(l.Ay.v("确定删除吗"),"?"),zIndex:"zIndex"in e?e.zIndex:i.A.Dict.value.ResourceNormalMaxZIndex.value,onSuccess:function(){return new Promise((function(e,t){r?r().then((function(){return e()})).catch((function(){return t()})):e()}))}}))};const c=d},6121:(e,r,t)=>{"use strict";t.d(r,{A:()=>n});const n=t(82282).A},9829:(e,r,t)=>{"use strict";t.d(r,{A:()=>n});const n=t(95239).A},32517:(e,r,t)=>{"use strict";t.d(r,{A:()=>n});const n=t(2382).A},35696:(e,r,t)=>{"use strict";t.d(r,{A:()=>n});const n=t(78353).A},44165:(e,r,t)=>{"use strict";t.d(r,{A:()=>d});var n,a=t(74713),l=t(27476),i=t(59418),o=function(){return(o=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var a in r=arguments[t])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},s=function(e,r){var t={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,a=Object.getOwnPropertySymbols(e);n<a.length;n++)r.indexOf(a[n])<0&&Object.prototype.propertyIsEnumerable.call(e,a[n])&&(t[a[n]]=e[a[n]]);return t};const d={openWarnMessage:function(e,r,t){return a.Ay.warning(e,r,t)},openWarnDialog:function(e){var r=void 0===(r=e.duration)?3e3:r,t=(e=s(e,["duration"]),l.A.warning(o({title:i.Ay.v("提示"),mask:!1,maskClosable:!0,footer:null},null!=e?e:{})));return r&&(n&&clearTimeout(n),n=setTimeout((function(){t.destroy()}),r)),t}}},99231:(e,r,t)=>{var n={"./user.js":31615};function a(e){var r=l(e);return t(r)}function l(e){if(!t.o(n,e)){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=l,e.exports=a,a.id=99231},75457:(e,r,t)=>{var n={"./user.js":90181};function a(e){var r=l(e);return t(r)}function l(e){if(!t.o(n,e)){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=l,e.exports=a,a.id=75457}}]);