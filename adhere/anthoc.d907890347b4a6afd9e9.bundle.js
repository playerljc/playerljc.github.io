"use strict";(self.webpackChunk_ctsj_build=self.webpackChunk_ctsj_build||[]).push([[4412],{50829:(e,n,t)=>{t.d(n,{A:()=>l});var a=t(42040),r=(0,t(14442).B)(a.A,{});r.displayName="Col";const l=r},89743:(e,n,t)=>{t.d(n,{A:()=>l});var a=t(10346),r=(0,t(14442).B)(a.A,{});r.displayName="Row";const l=r},92136:(e,n,t)=>{t.r(n),t.d(n,{default:()=>Nr});var a=t(32517),r=t(41104),l=t(90812),o=t(45633),i=t(84792);const s="import Mock from 'mockjs';\nimport React, { useState } from 'react';\n\nimport { Table } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst dataSource = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock('@name');\n  const value = Mock.mock('@guid');\n\n  return {\n    id: value,\n    name: label,\n    address: Mock.mock('@region'),\n    height: Mock.mock('@integer(60, 100)'),\n    width: Mock.mock('@integer(60, 100)'),\n    nativePlace: Mock.mock('@city'),\n    label,\n    value,\n  };\n});\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  function loadData(page, limit) {\n    console.log('paging', page, limit);\n\n    return new Promise((resolve) => {\n      resolve({\n        totalCount: dataSource.length,\n        data: dataSource.slice((page - 1) * limit, page * limit),\n      });\n    });\n  }\n\n  return (\n    <Table.TablePagingSelect\n      mode=\"multiple\"\n      className={styles.FieldWrapper}\n      placeholder=\"RadioPagingList\"\n      value={value}\n      onChange={setValue}\n      pagingProps={{\n        loadData,\n        defaultLimit: 5,\n      }}\n      tablePagingProps={{\n        rowKey: 'id',\n        columns: [\n          {\n            title: '名称',\n            key: 'name',\n            dataIndex: 'name',\n          },\n          {\n            title: '地址',\n            key: 'address',\n            dataIndex: 'address',\n          },\n          {\n            title: '籍贯',\n            key: 'nativePlace',\n            dataIndex: 'nativePlace',\n          },\n          {\n            title: '身高',\n            key: 'height',\n            dataIndex: 'height',\n          },\n          {\n            title: '体重',\n            key: 'width',\n            dataIndex: 'width',\n          },\n        ],\n      }}\n    />\n  );\n};\n",c="import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: dataSource.length,\r\n        data: dataSource.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table.TablePaging\r\n      value={value}\r\n      onChange={setValue}\r\n      isSuspenseAsync={false}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      tablePagingProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n";var d,m,u=t(26322),p=t(19994),h=t(62076),f=t(18097),g=t(41065),C=t(43760),y=t(89765),v=t(19090),b=t(14442),A=function(e,n,t){if(t||2===arguments.length)for(var a,r=0,l=n.length;r<l;r++)!a&&r in n||((a=a||Array.prototype.slice.call(n,0,r))[r]=n[r]);return e.concat(a||Array.prototype.slice.call(n))},k=(0,b.B)(y.A,{});m=["default","version","toDate","toFloat","toInt","toBoolean","equals","contains","matches","ltrim","rtrim","trim","escape","unescape","stripLow","whitelist","blacklist","isWhitelisted","normalizeEmail","toString"],d=Array.from(Object.keys(v.A)).filter((function(e){return!m.includes(e)})).reduce((function(e,n){return e[n]=function(e){return{validator:function(t,a){var r=this;function l(){var t;return v.A[n].apply(r,A([a],(null==e?void 0:e.params)||[],!0))?Promise.resolve():Promise.reject(null!=(t=null==e?void 0:e.invalidMessage)?t:"")}return null!=t&&t.required?a?l():Promise.reject(null==t?void 0:t.message):a?l():Promise.resolve()}}},e}),{}),k.ValidatorRules=d,k.displayName="Form";const x=k;var S=t(80711),P=t(38702),E=t(7197);const T=Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}})),I=()=>{const[e]=x.useForm(),[n,t]=(0,P.e)({options:[],value:[]}),{media:a}=(0,u.useContext)(C.A.Context);return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(g.A.VerticalCheckAllCheckbox,{options:[{label:"男",value:"2"},{label:"女",value:"1"}]}))),u.createElement(x.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(g.A.HorizontalCheckAllCheckbox,{options:[{label:"男",value:"2"},{label:"女",value:"1"}]}))),u.createElement(x.Item,{name:"letter1",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(g.A.CheckboxSelect,{placeholder:"A-Z",options:T}))),u.createElement(x.Item,{name:"letter2",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(g.A.CheckAllCheckboxSelect,{placeholder:"A-Z",options:T}))),u.createElement(x.Item,{name:"book",label:"book",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(g.A.AutoCompleteCheckboxSelect,{placeholder:"AutoCompleteCheckboxSelect",dropdownStyle:{maxHeight:h.A.pxToRem(300,a.designWidth,a),overflow:"auto"},options:n.options,loadData:e=>new Promise((n=>{if(!e)return t((e=>{e.options=[]})),void n();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));t((e=>{e.options=a})),n()}),500)}))}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var w=(0,b.B)(S.Ay,{});w.displayName="Button";const V=w;var R=t(59682),O=t(1025),L=(0,b.B)(O.A,{});L.displayName="Avatar";const D=L,F=[{title:"Ant Design Title 1"},{title:"Ant Design Title 2"},{title:"Ant Design Title 3"},{title:"Ant Design Title 4"}].map((e=>{let{title:n}=e;return{title:n,label:n,value:n}})),H=()=>{const[e]=x.useForm(),[n,t]=(0,P.e)({options:[],value:[]}),[a,r]=(0,P.e)({options:[],value:[]}),{media:l}=(0,u.useContext)(C.A.Context);return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(R.A.ListSelect,{placeholder:"List",options:F,listProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),u.createElement(x.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(R.A.ListSelect,{mode:"multiple",placeholder:"List",options:F,listProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),u.createElement(x.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(R.A.CheckAllListSelect,{placeholder:"List",options:F,listProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),u.createElement(x.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(R.A.AutoCompleteListSelect,{placeholder:"AutoCompleteListSelect",dropdownStyle:{maxHeight:h.A.pxToRem(300,l.designWidth,l),overflow:"auto"},options:n.options,loadData:e=>new Promise((n=>{if(console.log("_kw",e),!e)return t((e=>{e.options=[]})),void n();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));t((e=>{e.options=a})),n()}),500)})),listProps:{itemLayout:"horizontal",renderItem:e=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{title:e.title,description:e.label}))}}))),u.createElement(x.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(R.A.AutoCompleteCheckAllListSelect,{placeholder:"AutoCompleteCheckAllListSelect",dropdownStyle:{maxHeight:h.A.pxToRem(300,l.designWidth,l),overflow:"auto"},options:a.options,loadData:e=>new Promise((n=>{if(!e)return r((e=>{e.options=[]})),void n();setTimeout((()=>{const t=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r((e=>{e.options=t})),n()}),500)})),listProps:{itemLayout:"horizontal",renderItem:e=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{title:e.title,description:e.label}))}}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(V,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var M=t(89743),N=t(50829),W=t(71860),_=t(88831);const G=Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}})),j=()=>{const[e]=x.useForm(),[n,t]=(0,P.e)({options:[],value:[]}),[a,r]=(0,P.e)({options:[],value:[]}),[l,o]=(0,P.e)({options:[],value:[]}),{media:i}=(0,u.useContext)(C.A.Context);return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(_.A.HorizontalRadio,{options:[{label:"男",value:2},{label:"女",value:1}]}))),u.createElement(x.Item,{name:"letter",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(_.A.RadioSelect,{placeholder:"A-Z",options:G}))),u.createElement(x.Item,{name:"letter1",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(_.A.CustomRadio,{options:G},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n}=e;return u.createElement(N.A,{span:4},u.createElement(_.A,(0,W.A)({key:null==n?void 0:n.value},null!=n?n:{}),null==n?void 0:n.label))}))))))),u.createElement(x.Item,{name:"letter2",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(_.A.CustomRadioSelect,{dropdownStyle:{maxHeight:h.A.pxToRem(300,i.designWidth,i),overflow:"auto"},placeholder:"A-Z",options:G},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n}=e;return u.createElement(N.A,{span:4},u.createElement(_.A,(0,W.A)({key:null==n?void 0:n.value},null!=n?n:{}),null==n?void 0:n.label))}))))))),u.createElement(x.Item,{name:"letter3",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(_.A.ButtonRadio,{options:G}))),u.createElement(x.Item,{name:"letter4",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(_.A.ButtonRadioSelect,{placeholder:"A-Z",options:G}))),u.createElement(x.Item,{name:"letter5",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(_.A.AutoCompleteRadioSelect,{placeholder:"AutoCompleteRadioSelect",options:n.options,loadData:e=>new Promise((n=>{if(!e)return t((e=>{e.options=[]})),void n();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));t((e=>{e.options=a})),n()}),500)}))}))),u.createElement(x.Item,{name:"letter6",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(_.A.AutoCompleteCustomRadioSelect,{placeholder:"AutoCompleteCustomRadioSelect",dropdownStyle:{maxHeight:h.A.pxToRem(300,i.designWidth,i),overflow:"auto"},options:a.options,loadData:e=>new Promise((n=>{if(!e)return r((e=>{e.options=[]})),void n();setTimeout((()=>{const t=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r((e=>{e.options=t})),n()}),500)}))},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n}=e;return u.createElement(N.A,{span:4},u.createElement(_.A,(0,W.A)({key:null==n?void 0:n.value},null!=n?n:{}),null==n?void 0:n.label))}))))))),u.createElement(x.Item,{name:"letter7",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},u.createElement(f.A,null,u.createElement(_.A.AutoCompleteButtonRadioSelect,{placeholder:"AutoCompleteButtonRadioSelect",dropdownStyle:{maxHeight:h.A.pxToRem(300,i.designWidth,i),overflow:"auto"},options:l.options,loadData:e=>new Promise((n=>{if(!e)return o((e=>{e.options=[]})),void n();setTimeout((()=>{const t=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));o((e=>{e.options=t})),n()}),500)}))}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var B=t(48774),q=t(77658),z=t(28361),U=t.n(z);const K=Array.from({length:100}).map((()=>({label:U().mock("@name"),value:U().mock("@guid")}))),Z=()=>{const[e]=x.useForm(),[n,t]=(0,P.e)({options:[],value:[]}),[a,r]=(0,P.e)({options:[],value:[]}),[l,o]=(0,P.e)({options:[],value:[]});return(0,u.useEffect)((()=>{e.setFieldValue("user",[K[0],K[1].value])}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"user",label:"人员",rules:[{required:!0,message:"请选择人员"}]},u.createElement(f.A,null,u.createElement(q.A,{placeholder:"请选择人员",options:K}))),u.createElement(x.Item,{name:"users1",label:"参与者1",rules:[{required:!0,message:"请选择参与者1"}]},u.createElement(f.A,null,u.createElement(B.A,{placeholder:"请选择参与者1",options:K}))),u.createElement(x.Item,{name:"users2",label:"参与者2",rules:[{required:!0,message:"请选择参与者2"}]},u.createElement(f.A,null,u.createElement(B.A.CheckAllSelect,{placeholder:"请选择参与者2",options:K},(e=>u.createElement(g.A.Group,e))))),u.createElement(x.Item,{name:"users3",label:"参与者3",rules:[{required:!0,message:"请选择参与者3"}]},u.createElement(f.A,null,u.createElement(q.A.AutoCompleteSelect,{placeholder:"请选择参与者3",value:n.value,options:n.options,onChange:e=>{t((n=>{n.value=e}))},loadData:e=>new Promise((n=>{if(!e)return t((e=>{e.options=[]})),void n();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));t((e=>{e.options=a})),n()}),500)}))}))),u.createElement(x.Item,{name:"users4",label:"参与者4",rules:[{required:!0,message:"请选择参与者4"}]},u.createElement(f.A,null,u.createElement(B.A.AutoCompleteMultipleSelect,{placeholder:"请选择参与者4",value:a.value,options:a.options,onChange:e=>{r((n=>{n.value=e}))},loadData:e=>new Promise((n=>{if(!e)return r((e=>{e.options=[]})),void n();setTimeout((()=>{const t=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r((e=>{e.options=t})),n()}),500)}))}))),u.createElement(x.Item,{name:"users5",label:"参与者5",rules:[{required:!0,message:"请选择参与者5"}]},u.createElement(f.A,null,u.createElement(B.A.AutoCompleteCheckAllMultipleSelect,{placeholder:"请选择参与者5",value:l.value,options:l.options,onChange:e=>{o((n=>{n.value=e}))},loadData:e=>new Promise((n=>{if(!e)return o((e=>{e.options=[]})),void n();setTimeout((()=>{const t=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));o((e=>{e.options=t})),n()}),500)}))},(e=>u.createElement(g.A.Group,e))))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var J=t(22079);const $=Array.from({length:100}).map((()=>{const e=U().mock("@name"),n=U().mock("@guid");return{id:n,name:e,address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city"),label:e,value:n}})),Y=()=>{const[e]=x.useForm(),[n,t]=(0,P.e)({options:[],value:[]}),{media:a}=(0,u.useContext)(C.A.Context);return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(J.A.TableSelect,{placeholder:"TableSelect",options:$,tableProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}}))),u.createElement(x.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(J.A.TableSelect,{mode:"multiple",placeholder:"TableSelect",options:$,tableProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}}))),u.createElement(x.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(J.A.AutoCompleteTableSelect,{placeholder:"AutoCompleteTableSelect",dropdownStyle:{maxHeight:h.A.pxToRem(300,a.designWidth,a),overflow:"auto"},options:n.options,loadData:e=>new Promise((n=>{if(!e)return t((e=>{e.options=[]})),void n();setTimeout((()=>{const a=[...$].filter((n=>-1!==n.label.indexOf(e)));t((e=>{e.options=a})),n()}),500)})),tableProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}],pagination:!1}}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var Q=t(55846);const X=Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{value:t,label:t,children:t}})),ee=()=>{const[e]=x.useForm(),[n,t]=(0,P.e)({options:[],value:[]}),[a,r]=(0,P.e)({options:[],value:[]});return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(Q.A.TagSelect,{mode:"multiple",placeholder:"A-Z",options:X}))),u.createElement(x.Item,{name:"sex1",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(Q.A.VerticalCheckableTagGroup,{mode:"multiple",options:X}))),u.createElement(x.Item,{name:"sex2",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(Q.A.VerticalCheckAllCheckableTagGroup,{options:X}))),u.createElement(x.Item,{name:"sex3",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(Q.A.CheckAllTagSelect,{placeholder:"A-Z",options:X}))),u.createElement(x.Item,{name:"sex4",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(Q.A.HorizontalCheckableTagGroup,{mode:"multiple",options:X}))),u.createElement(x.Item,{name:"sex5",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(Q.A.HorizontalCheckAllCheckableTagGroup,{options:X}))),u.createElement(x.Item,{name:"sex6",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(Q.A.AutoCompleteTagSelect,{placeholder:"AutoCompleteTagSelect",mode:"multiple",options:n.options,loadData:e=>new Promise((n=>{if(!e)return t((e=>{e.options=[]})),void n();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id,children:e.t})));t((e=>{e.options=a})),n()}),500)}))}))),u.createElement(x.Item,{name:"sex7",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(Q.A.AutoCompleteCheckAllTagSelect,{placeholder:"AutoCompleteCheckAllTagSelect",options:a.options,loadData:e=>new Promise((n=>{if(!e)return r((e=>{e.options=[]})),void n();setTimeout((()=>{const t=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id,children:e.t})));r((e=>{e.options=t})),n()}),500)}))}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var ne=t(32579);const te=Array.from({length:20}).map(((e,n)=>({key:n.toString(),title:"content".concat(n+1),description:"description of content".concat(n+1)}))),ae=te.filter((e=>Number(e.key)>10)).map((e=>e.key)),re=()=>{const[e]=x.useForm(),[n,t]=(0,P.e)({options:[],value:[]}),[a,r]=(0,u.useState)([]),[l,o]=(0,u.useState)(ae),{media:i}=(0,u.useContext)(C.A.Context);return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(ne.A,{dataSource:te,titles:["Source","Target"],targetKeys:a,selectedKeys:l,onChange:(e,n,t)=>{console.log("targetKeys:",e),console.log("direction:",n),console.log("moveKeys:",t),r(e)},onSelectChange:(e,n)=>{console.log("sourceSelectedKeys:",e),console.log("targetSelectedKeys:",n),o([...e,...n])},onScroll:(e,n)=>{console.log("direction:",e),console.log("target:",n.target)},render:e=>e.title}))),u.createElement(x.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(ne.A.TransferSelect,{placeholder:"A-Z",options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))}))),u.createElement(x.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(f.A,null,u.createElement(ne.A.AutoCompleteTransferSelect,{placeholder:"AutoCompleteTransferSelect",dropdownStyle:{maxHeight:h.A.pxToRem(300,i.designWidth,i),overflow:"auto"},options:n.options,loadData:e=>new Promise((n=>{if(console.log("_kw",e),!e)return t((e=>{e.options=[]})),void n();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));t((e=>{e.options=a})),n()}),500)}))}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var le=t(24238),oe=t(78831),ie=t(8664);function se(e,n){var t,a;if(console.log("pid",e),!e)return Promise.resolve(ie.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({label:n.name,value:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}const ce=()=>{const[e]=x.useForm();return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(oe.A.AsyncCascader,{placeholder:"AsyncCascader",fetchData:se})),u.createElement(x.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(le.A,null,u.createElement(oe.A.AsyncCascaderChangeOnSelect,{placeholder:"AsyncCascaderChangeOnSelect",fetchData:se}))),u.createElement(x.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(le.A,null,u.createElement(oe.A.AsyncCascaderMulti,{placeholder:"AsyncCascaderMulti",fetchData:se}))),u.createElement(x.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(le.A,null,u.createElement(oe.A.AsyncCascader,{placeholder:"AsyncCascader",fetchData:se,treeDataSimpleMode:!0}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var de=t(75547);function me(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}const ue=()=>{const[e]=x.useForm();return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(le.A,null,u.createElement(de.A.AsyncTreeSelect,{placeholder:"AsyncTreeSelect",fetchData:me}))),u.createElement(x.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(le.A,null,u.createElement(de.A.AsyncTreeMultiSelect,{placeholder:"AsyncTreeMultiSelectEcho",fetchData:me}))),u.createElement(x.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(le.A,null,u.createElement(de.A.AsyncTreeCheckedShowParentSelect,{placeholder:"AsyncTreeCheckedShowParentSelect",fetchData:me}))),u.createElement(x.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(le.A,null,u.createElement(de.A.AsyncTreeCheckedShowAllSelect,{placeholder:"AsyncTreeCheckedShowAllSelect",fetchData:me}))),u.createElement(x.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(de.A.AsyncTreeCheckedShowChildSelect,{placeholder:"AsyncTreeCheckedShowChildSelect",fetchData:me})),u.createElement(x.Item,{name:"sex5",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(le.A,null,u.createElement(de.A.AsyncTreeSelect,{placeholder:"AsyncTreeSelect",fetchData:me,treeDataSimpleMode:!0}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var pe=t(17435);const he="vPpMoxqkdhb0DmNVOk5W",fe=()=>u.createElement(pe.A,{options:Array.from({length:26}).map(((e,n)=>({label:String.fromCharCode(97+n).toUpperCase(),value:97+n}))),className:he,onSelect:e=>{console.log("onSelect",e)},onSearch:e=>{console.log("onSearch",e)},onChange:e=>{console.log("onChange",e)},placeholder:"control mode"}),ge=()=>{const[e,n]=(0,u.useState)({inputValue:"",selectValue:""});return u.createElement(pe.A.AutoCompleteSelectInput,{placeholder:"control mode",className:he,value:e,options:Array.from({length:26}).map(((e,n)=>({label:String.fromCharCode(97+n).toUpperCase(),value:"".concat(97+n)}))),onChange:n})},Ce="LcBH0IQFfC5dopcmhbjk",ye=()=>u.createElement(o.A,{className:Ce,showTime:!0,onChange:(e,n)=>{console.log(e,n)}});var ve=t(48305),be=(0,b.B)(ve.A,{allowClear:!0,maxLength:1e3,showCount:!0});be.displayName="Input";const Ae=be,ke=()=>u.createElement("div",null,u.createElement("p",null,"对Form的Rules进行增强(",u.createElement("a",{target:"_blank",href:"/adhere/component/util/validator"},"使用adhere-util-validator"),")"),u.createElement(x,{labelCol:{span:3},wrapperCol:{span:21}},u.createElement("ul",null,u.createElement(a.A.Group,{direction:"vertical"},u.createElement("li",null,u.createElement(x.Item,{name:"email",label:"email",rules:[x.ValidatorRules.isEmail({invalidMessage:"email格式错误"})]},u.createElement(Ae,{placeholder:"email"}))),u.createElement("li",null,u.createElement(x.Item,{name:"mime",label:"mime",rules:[x.ValidatorRules.isMimeType({invalidMessage:"MimeType格式错误"})]},u.createElement(Ae,{placeholder:"mime"}))),u.createElement("li",null,u.createElement(x.Item,{name:"hex",label:"hex",rules:[x.ValidatorRules.isHexColor({invalidMessage:"hex值格式错误"})]},u.createElement(Ae,{placeholder:"hex"}))),u.createElement("li",null,u.createElement(x.Item,{name:"ip",label:"ip",rules:[x.ValidatorRules.isIP({invalidMessage:"ip地址格式错误"})]},u.createElement(Ae,{placeholder:"ip"}))),u.createElement("li",null,u.createElement(x.Item,{name:"chinaPhoneNumber",label:"手机卡 + 数据卡 + 上网卡",rules:[x.ValidatorRules.isAllChinaPhoneNumber({invalidMessage:"手机卡或数据卡或上网卡格式错误"})]},u.createElement(Ae,{placeholder:"手机卡 + 数据卡 + 上网卡"}))))))),xe=()=>u.createElement(Ae,{placeholder:"请输入",className:Ce});var Se=t(24619);const Pe=()=>u.createElement(Se.A,{placeholder:"请输入",className:Ce});var Ee=t(3136);const Te=()=>u.createElement(Ee.A,{placeholder:"请输入",className:Ce});var Ie=t(75788);const we=()=>u.createElement(Ie.A,{placeholder:"请输入",className:Ce});var Ve=t(27476),Re=(0,b.B)(Ve.A,{closable:!0,centered:!0,maskClosable:!0,destroyOnClose:!0,zIndex:999});Re.displayName="Modal";const Oe=Re,Le=()=>{const[e,n]=(0,u.useState)(!1);return u.createElement("div",null,u.createElement(V,{type:"primary",onClick:()=>{n(!0)}},"Open Modal"),u.createElement(Oe,{title:"Basic Modal",open:e,onOk:()=>{n(!1)},onCancel:()=>{n(!1)}},u.createElement("p",null,"Some contents..."),u.createElement("p",null,"Some contents..."),u.createElement("p",null,"Some contents...")))};var De=t(44734),Fe=(0,b.B)(De.A,{showQuickJumper:!0});Fe.displayName="Pagination";const He=Fe,Me=()=>u.createElement(He,{defaultCurrent:1,total:50}),Ne=()=>u.createElement(l.A,{className:Ce});var We=function(){return(We=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)};const _e=function(e){var n=(0,u.useState)(!1),t=n[0],a=n[1];return u.createElement(S.Ay,We({loading:t},e,{onClick:function(n){var r;e.onClick&&!t&&(a(!0),null!=(n=null==(r=null==(r=null==(n=e.onClick(n))?void 0:n.then)?void 0:r.call(n,(function(){return a(!1)})))?void 0:r.catch))&&n.call(r,(function(){return a(!1)}))}}),e.children)};var Ge=(0,b.B)(_e,{});Ge.displayName="SubmitButton";const je=Ge,Be=()=>u.createElement(je,{className:Ce,type:"primary",onClick:()=>new Promise((e=>setTimeout(e,3e3)))},"提交");var qe=ve.A.TextArea,ze=(0,b.B)(qe,{allowClear:!0,maxLength:1e3,showCount:!0,autoSize:!1});ze.displayName="TextArea";const Ue=ze,Ke=()=>u.createElement(Ue,{placeholder:"请输入",className:Ce}),Ze=()=>u.createElement(r.A,{className:Ce});var Je=t(36171),$e=(0,b.B)(Je.A,{name:"file",withCredentials:!0});$e.displayName="Upload";const Ye=$e;var Qe=t(72018);const Xe=()=>u.createElement(Ye,{name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange(e){"uploading"!==e.file.status&&console.log(e.file,e.fileList),"done"===e.file.status?message.success("".concat(e.file.name," file uploaded successfully")):"error"===e.file.status&&message.error("".concat(e.file.name," file upload failed."))}},u.createElement(V,{icon:u.createElement(Qe.A,null)},"Click to Upload"));var en=t(65086);const nn=()=>{const[e,n]=(0,u.useState)(void 0);return console.log("value",e),u.createElement(oe.A.AsyncCascader,{className:en.A.Wrapper,placeholder:"AsyncCascader",value:e,onChange:n,fetchData:function(e,n){var t,a;if(console.log("pid",e),!e)return Promise.resolve(ie.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({label:n.name,value:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},tn=()=>{const[e,n]=(0,u.useState)(void 0);return console.log("value",e),u.createElement(oe.A.AsyncCascaderChangeOnSelect,{className:en.A.Wrapper,placeholder:"AsyncCascaderChangeOnSelect",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({label:n.name,value:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},an=()=>{const[e,n]=(0,u.useState)(["210000000000","210100000000","210102000000"]);return console.log("value",e),u.createElement(oe.A.AsyncCascader,{className:en.A.Wrapper,placeholder:"AsyncCascader",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({label:n.name,value:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)},fetchBranch:(e,n)=>Promise.resolve([{label:"辽宁省",value:"210000000000",isLeaf:!1,children:[{label:"沈阳市",value:"210100000000",isLeaf:!1,children:[{label:"和平区",value:"210102000000",isLeaf:!0}]}]}])})},rn=()=>{const[e,n]=(0,u.useState)([]);return console.log("value",e),u.createElement(oe.A.AsyncCascaderMulti,{className:en.A.Wrapper,placeholder:"AsyncCascaderMulti",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({label:n.name,value:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},ln=()=>{const[e,n]=(0,u.useState)([["210000000000","210100000000","210102000000"],["230000000000","230100000000","230102000000"]]);return console.log("value",e),u.createElement(oe.A.AsyncCascaderShowChild,{className:en.A.Wrapper,placeholder:"AsyncCascaderMulti",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({label:n.name,value:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)},fetchBranch:(e,n)=>Promise.resolve([{label:"辽宁省",value:"210000000000",isLeaf:!1,children:[{label:"沈阳市",value:"210100000000",isLeaf:!1,children:[{label:"和平区",value:"210102000000",isLeaf:!0}]}]},{label:"黑龙江省",value:"230000000000",isLeaf:!1,children:[{label:"哈尔滨市",value:"230100000000",isLeaf:!1,children:[{label:"道里区",value:"230102000000",isLeaf:!0}]}]}])})},on=()=>{const[e,n]=(0,u.useState)([]);return console.log("value",e),u.createElement(oe.A.AsyncCascaderShowChild,{className:en.A.Wrapper,placeholder:"AsyncCascaderShowChild",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({label:n.name,value:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},sn=()=>u.createElement(oe.A,{placeholder:"Please select",options:[{value:"zhejiang",label:"Zhejiang",children:[{value:"hangzhou",label:"Hangzhou",children:[{value:"xihu",label:"West Lake"}]}]},{value:"jiangsu",label:"Jiangsu",children:[{value:"nanjing",label:"Nanjing",children:[{value:"zhonghuamen",label:"Zhong Hua Men"}]}]}],onChange:e=>{console.log(e)}}),cn=()=>u.createElement(oe.A.CascaderChangeOnSelect,{placeholder:"Please select",options:[{value:"zhejiang",label:"Zhejiang",children:[{value:"hangzhou",label:"Hangzhou",children:[{value:"xihu",label:"West Lake"}]}]},{value:"jiangsu",label:"Jiangsu",children:[{value:"nanjing",label:"Nanjing",children:[{value:"zhonghuamen",label:"Zhong Hua Men"}]}]}],onChange:e=>{console.log(e)}}),dn=()=>{const e=[{label:"Light",value:"light",children:new Array(20).fill(null).map(((e,n)=>({label:"Number ".concat(n),value:n})))},{label:"Bamboo",value:"bamboo",children:[{label:"Little",value:"little",children:[{label:"Toy Fish",value:"fish",disableCheckbox:!0},{label:"Toy Cards",value:"cards"},{label:"Toy Bird",value:"bird"}]}]}];return u.createElement(oe.A.CascaderMulti,{placeholder:"Please select",options:e,onChange:e=>{console.log(e)}})},mn=()=>{const e=[{label:"Light",value:"light",children:new Array(20).fill(null).map(((e,n)=>({label:"Number ".concat(n),value:n})))},{label:"Bamboo",value:"bamboo",children:[{label:"Little",value:"little",children:[{label:"Toy Fish",value:"fish",disableCheckbox:!0},{label:"Toy Cards",value:"cards"},{label:"Toy Bird",value:"bird"}]}]}];return u.createElement(oe.A.CascaderShowChild,{className:en.A.Wrapper1,placeholder:"Please select",options:e,onChange:e=>{console.log(e)}})},un=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(oe.A.AsyncCascader,{className:en.A.Wrapper,placeholder:"AsyncCascader",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({label:n.name,value:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)},treeDataSimpleMode:!0})},pn=[...ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,isLeaf:!1,pId:0}))),...Object.keys(ie.Wj).map((e=>ie.Wj[e].map((n=>({title:n.name,label:n.name,value:n.id,id:n.id,isLeaf:!1,pId:"".concat(e)}))))).flat(),...Object.keys(ie.Vb).map((e=>ie.Vb[e].map((n=>({title:n.name,label:n.name,value:n.id,id:n.id,isLeaf:!0,pId:e}))))).flat()],hn=()=>{const[e,n]=(0,u.useState)();return u.createElement(oe.A.CascaderMulti,{className:en.A.Wrapper,value:e,placeholder:"Please select",onChange:e=>{n(e)},options:pn,treeDataSimpleMode:!0})},fn="E6Ad7PcNwjPnDbIm0y1Z",gn=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)([]),{media:r}=(0,u.useContext)(C.A.Context);return u.createElement(g.A.AutoCompleteCheckAllCheckboxSelect,{placeholder:"AutoCompleteCheckAllCheckboxSelect111",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,r.designWidth,r),overflow:"auto"},value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))})},Cn=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)([]),{media:r}=(0,u.useContext)(C.A.Context);return u.createElement(g.A.AutoCompleteCheckAllCustomCheckboxSelect,{placeholder:"AutoCompleteCheckAllCustomCheckboxSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,r.designWidth,r),overflow:"auto"},value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n,onChange:t,checked:a,disabled:r}=e;return u.createElement(N.A,{span:4,key:null==n?void 0:n.value},u.createElement(g.A,(0,W.A)({},null!=n?n:{},{checked:a,disabled:r,onChange:e=>{t(e,n.value)}}),null==n?void 0:n.label))})))))},yn=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)([]),{media:r}=(0,u.useContext)(C.A.Context);return u.createElement(g.A.AutoCompleteCheckboxSelect,{placeholder:"AutoCompleteCheckboxSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,r.designWidth,r),overflow:"auto"},value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(console.log("_kw",e),!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))})},vn=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)([]),{media:r}=(0,u.useContext)(C.A.Context);return u.createElement(g.A.AutoCompleteCustomCheckboxSelect,{placeholder:"AutoCompleteCustomCheckboxSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,r.designWidth,r),overflow:"auto"},value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n,onChange:t,checked:a,disabled:r}=e;return u.createElement(N.A,{key:null==n?void 0:n.value,span:4},u.createElement(g.A,(0,W.A)({},null!=n?n:{},{checked:a,disabled:r,onChange:e=>{t(e,n.value)}}),null==n?void 0:n.label))})))))},bn=()=>{const[e,n]=(0,u.useState)([]),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(g.A.CheckAllCheckboxSelect,{placeholder:"A-Z",className:en.A.Wrapper,dropdownStyle:{maxHeight:h.A.pxToRem(300,t.designWidth,t),overflowY:"auto"},value:e,onChange:n,options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))})},An=()=>{const[e,n]=(0,u.useState)([]),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(g.A.CheckAllCustomCheckboxSelect,{className:en.A.Wrapper,dropdownStyle:{maxHeight:h.A.pxToRem(300,t.designWidth,t),overflowY:"auto"},placeholder:"A-Z",value:e,onChange:n,options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n,onChange:t,checked:a,disabled:r}=e;return u.createElement(N.A,{key:null==n?void 0:n.value,span:4},u.createElement(g.A,(0,W.A)({},null!=n?n:{},{checked:a,disabled:r,onChange:e=>{t(e,n.value)}}),null==n?void 0:n.label))})))))},kn=()=>u.createElement(g.A,null,"男"),xn=()=>{const[e,n]=(0,u.useState)([]),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(g.A.CheckboxSelect,{placeholder:"A-Z",className:en.A.Wrapper,dropdownStyle:{maxHeight:h.A.pxToRem(300,t.designWidth,t),overflowY:"auto"},value:e,onChange:n,options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))})},Sn=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(g.A.CustomCheckAllCheckbox,{value:e,onChange:e=>{n(e)},options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n,onChange:t,checked:a,disabled:r}=e;return u.createElement(N.A,{span:4,key:null==n?void 0:n.value},u.createElement(g.A,(0,W.A)({},null!=n?n:{},{checked:a,disabled:r,onChange:e=>{t(e,n.value)}}),null==n?void 0:n.label))})))))},Pn=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(g.A.CustomCheckbox,{value:e,options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}})),onChange:n},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n,onChange:t,checked:a,disabled:r}=e;return u.createElement(N.A,{span:4},u.createElement(g.A,(0,W.A)({key:null==n?void 0:n.value},null!=n?n:{},{checked:a,disabled:r,onChange:e=>{t(e,n.value)}}),null==n?void 0:n.label))})))))},En=()=>{const[e,n]=(0,u.useState)([]),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(g.A.CustomCheckboxSelect,{className:en.A.Wrapper,dropdownStyle:{maxHeight:h.A.pxToRem(300,t.designWidth,t),overflowY:"auto"},placeholder:"A-Z",value:e,onChange:n,options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n,onChange:t,...a}=e;return u.createElement(N.A,{key:null==n?void 0:n.value,span:4},u.createElement(g.A,(0,W.A)({},null!=n?n:{},a,{onChange:e=>{t(e,n.value)}}),null==n?void 0:n.label))})))))},Tn=()=>{const[e,n]=(0,u.useState)([]),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(g.A.CheckAllCheckboxSelect,{placeholder:"A-Z",className:en.A.Wrapper,dropdownStyle:{maxHeight:h.A.pxToRem(300,t.designWidth,t),overflowY:"auto"},value:e,onChange:n,options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}})),render:(e,n)=>u.createElement("div",null,u.createElement("div",null,n),u.createElement("div",null,e))})},In=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(g.A.HorizontalCheckAllCheckbox,{value:e,onChange:n,options:[{label:"男",value:"2"},{label:"女",value:"1"}]})},wn=()=>u.createElement(g.A.HorizontalCheckbox,{options:[{label:"男",value:"2"},{label:"女",value:"1"}]}),Vn=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(g.A.VerticalCheckAllCheckbox,{value:e,onChange:n,options:[{label:"男",value:"2"},{label:"女",value:"1"}]})},Rn=()=>u.createElement(g.A.VerticalCheckbox,{onChange:e=>{console.log("v",e)},disabled:!0,options:[{label:"男",value:"2",disabled:!1},{label:"女",value:"1"}]});var On=t(34419),Ln=t.n(On),Dn=t(55958),Fn=t.n(Dn),Hn=t(65024),Mn=t.n(Hn),Nn=function(){return(Nn=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)},Wn=function(e,n){var t={};for(r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]]);return t};Ln().extend(Mn()),Ln().extend(Fn());const _n=function(e){var n=e.defaultValue,t=e.value,a=e.onChange,r=Wn(e,["defaultValue","value","onChange"]);function l(e){return null==e?e:Ln()(e)}e=(0,u.useMemo)((function(){return l(t)}),[t]);var i=(0,u.useMemo)((function(){return l(n)}),[n]);return u.createElement(o.A,Nn({},r,{defaultValue:i,value:e,onChange:function(e,n){var t;null!=a&&a(e.format(null!=(t=r.format)?t:"L LTS"),n,e,{year:e.year(),quarter:e.quarter(),month:e.month(),week:e.week(),day:e.day(),date:e.date(),hour:e.hour(),minute:e.minute(),second:e.second()})}}))};var Gn=(0,b.B)(_n,{});Gn.displayName="DatePickerFormatValueHOC";const jn=Gn,Bn=()=>{const[e]=x.useForm();return(0,u.useEffect)((()=>{e.setFieldValue("birthDay2",Ln()().format("YYYY-MM-DD"))}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"birthday",label:"生日",rules:[{required:!0,message:"请选择生日"}]},u.createElement(jn,null)),u.createElement(x.Item,{name:"birthday1",label:"生日",rules:[{required:!0,message:"请选择生日"}]},u.createElement(jn,{type:"seconds"})),u.createElement(x.Item,{name:"birthday2",label:"生日",rules:[{required:!0,message:"请选择生日"}]},u.createElement(jn,null)),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var qn=function(){return(qn=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)},zn=function(e,n){var t={};for(r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]]);return t};Ln().extend(Mn()),Ln().extend(Fn());const Un=function(e){var n=e.defaultValue,t=e.value,a=e.onChange,r=void 0===(l=e.type)?"milliseconds":l,l=zn(e,["defaultValue","value","onChange","type"]);function i(e){return null==e?e:"seconds"===r?Ln().unix(e):Ln()(e)}e=(0,u.useMemo)((function(){return i(t)}),[t]);var s=(0,u.useMemo)((function(){return i(n)}),[n]);return u.createElement(o.A,qn({},l,{defaultValue:s,value:e,onChange:function(e,n){var t;null!=a&&a((t=e.valueOf(),"seconds"===r?Math.round(t/1e3):t),n,e,{year:e.year(),quarter:e.quarter(),month:e.month(),week:e.week(),day:e.day(),date:e.date(),hour:e.hour(),minute:e.minute(),second:e.second()})}}))};var Kn=(0,b.B)(Un,{});Kn.displayName="DatePickerTimestampValueHOC";const Zn=Kn,Jn=()=>{const[e]=x.useForm();return(0,u.useEffect)((()=>{e.setFieldValue("birthDay2",Ln()().valueOf())}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"birthday",label:"生日",rules:[{required:!0,message:"请选择生日"}]},u.createElement(Zn,null)),u.createElement(x.Item,{name:"birthday1",label:"生日",rules:[{required:!0,message:"请选择生日"}]},u.createElement(Zn,{type:"seconds"})),u.createElement(x.Item,{name:"birthday2",label:"生日",rules:[{required:!0,message:"请选择生日"}]},u.createElement(Zn,null)),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},$n=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)([]),{media:r}=(0,u.useContext)(C.A.Context);return u.createElement(R.A.AutoCompleteCheckAllListSelect,{placeholder:"AutoCompleteCheckAllListSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,r.designWidth,r),overflow:"auto"},value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)})),listProps:{itemLayout:"horizontal",renderItem:e=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{title:e.title,description:e.label}))}})},Yn=Array.from({length:100}).map((()=>{const e=U().mock("@cname"),n=U().mock("@guid");return{label:e,value:n,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}})),Qn=()=>{const[e,n]=(0,u.useState)([]),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(R.A.AutoCompleteListPagingSelect,{mode:"multiple",placeholder:"AutoCompleteListPagingSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,t.designWidth,t),overflow:"auto"},value:e,onChange:n,pagingProps:{loadData:function(e,n,t){return new Promise((a=>{const r=t?Yn.filter((e=>{let{label:n}=e;return-1!==n.indexOf(t)})):[];a({totalCount:r.length,data:r.slice((e-1)*n,e*n)})}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:e=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{title:e.title,description:e.label}))}})},Xn=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)(void 0),{media:r}=(0,u.useContext)(C.A.Context);return u.createElement(R.A.AutoCompleteListSelect,{placeholder:"AutoCompleteListSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,r.designWidth,r),overflow:"auto"},value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(console.log("_kw",e),!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)})),listProps:{itemLayout:"horizontal",renderItem:e=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{title:e.title,description:e.label}))}})},et=[{title:"Ant Design Title 1"},{title:"Ant Design Title 2"},{title:"Ant Design Title 3"},{title:"Ant Design Title 4"}].map((e=>{let{title:n}=e;return{title:n,label:n,value:n}})),nt=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(R.A.CheckAllListSelect,{className:fn,placeholder:"List",value:e,onChange:n,options:et,listProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(O.A,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},tt=Array.from({length:100}).map((()=>{const e=U().mock("@cname"),n=U().mock("@guid");return{label:e,value:n,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}})),at=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(R.A.ListPaging,{mode:"multiple",value:e,onChange:n,isSuspenseAsync:!1,pagingProps:{loadData:function(e,n){return new Promise((t=>{t({totalCount:tt.length,data:tt.slice((e-1)*n,e*n)})}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:e.avatar}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},rt=Array.from({length:100}).map((()=>{const e=U().mock("@cname"),n=U().mock("@guid");return{label:e,value:n,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}})),lt=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(R.A.ListPagingSelect,{mode:"multiple",className:fn,placeholder:"CheckboxListPagingSelect",value:e,onChange:n,pagingProps:{loadData:function(e,n){return new Promise((t=>{t({totalCount:rt.length,data:rt.slice((e-1)*n,e*n)})}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:e.avatar}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},ot=[{title:"Ant Design Title 1"},{title:"Ant Design Title 2"},{title:"Ant Design Title 3"},{title:"Ant Design Title 4"}].map((e=>{let{title:n}=e;return{title:n,label:n,value:n}})),it=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(R.A.ListSelect,{mode:"multiple",className:fn,placeholder:"List",value:e,onChange:n,options:ot,listProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},st=[{title:"Ant Design Title 1"},{title:"Ant Design Title 2"},{title:"Ant Design Title 3"},{title:"Ant Design Title 4"}],ct=()=>u.createElement(R.A,{itemLayout:"horizontal",dataSource:st,renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}),dt=Array.from({length:100}).map((()=>{const e=U().mock("@cname"),n=U().mock("@guid");return{label:e,value:n,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}})),mt=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(R.A.ListPaging,{value:e,onChange:e=>{console.log(e),n(e)},isSuspenseAsync:!1,pagingProps:{loadData:function(e,n){return console.log("paging",e,n),new Promise((t=>{t({totalCount:dt.length,data:dt.slice((e-1)*n,e*n)})}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:e.avatar}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},ut=Array.from({length:100}).map((()=>{const e=U().mock("@cname"),n=U().mock("@guid");return{label:e,value:n,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}})),pt=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(R.A.ListPagingSelect,{className:fn,placeholder:"RadioListPagingSelect",value:e,onChange:n,pagingProps:{loadData:function(e,n){return console.log("paging",e,n),new Promise((t=>{t({totalCount:ut.length,data:ut.slice((e-1)*n,e*n)})}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:e.avatar}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},ht=[{title:"Ant Design Title 1"},{title:"Ant Design Title 2"},{title:"Ant Design Title 3"},{title:"Ant Design Title 4"}].map((e=>{let{title:n}=e;return{title:n,label:n,value:n}})),ft=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(R.A.ListSelect,{className:fn,placeholder:"List",value:e,onChange:n,options:ht,listProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},gt=Array.from({length:100}).map((()=>{const e=U().mock("@cname"),n=U().mock("@guid");return{label:e,value:n,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}})),Ct=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(R.A.ListPaging,{mode:"multiple",value:e,onChange:n,pagingProps:{loadData:function(e,n){return new Promise((t=>{setTimeout((()=>{t({totalCount:gt.length,data:gt.slice((e-1)*n,e*n)})}),1e3)}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(D,{src:e.avatar}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})};var yt=t(2460),vt=function(){return(vt=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)},bt=(0,u.memo)((function(e){var n,t,a=(o=(0,u.useState)([]))[0],r=o[1],l=(0,u.useRef)(new Map),o=(0,u.useMemo)((function(){return e.pagingPropsPath||["pagingProps"]}),[e.pagingPropsPath]),i=(0,u.cloneElement)(e.children,vt(vt({},null!=(n=null==(n=null==e?void 0:e.children)?void 0:n.props)?n:{}),(n={},t=null==(i=null==e?void 0:e.children)?void 0:i.props,o.reduce((function(e,n){var a;return e[n]=vt({},null!=(a=null==t?void 0:t[n])?a:{}),t=null==t?void 0:t[n],e[n]}),n).onDataSourceChange=function(n,t){var a=null!=(a=null==(a=null==e?void 0:e.getOptionsByDataSource)?void 0:a.call(e,t))?a:t;l.current.set(n,a),r(Array.from(l.current.values()).flat())},n)));return(0,yt.A)(vt(vt({},e),{children:i,options:a}))}));const At=bt;var kt=(0,b.B)(At,{});kt.displayName="PagingEntityValueHOC";const xt=kt,St=Array.from({length:100}).map((()=>{const e=U().mock("@cname"),n=U().mock("@guid");return{label:e,value:n,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(n)}})),Pt=()=>{const[e]=x.useForm();function n(e,n){return console.log("paging",e,n),new Promise((t=>{t({totalCount:St.length,data:St.slice((e-1)*n,e*n)})}))}const{media:t}=(0,u.useContext)(C.A.Context);return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(xt,null,u.createElement(R.A.ListPaging,{isSuspenseAsync:!1,pagingProps:{loadData:n,defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(O.A,{src:e.avatar}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),u.createElement(x.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(xt,null,u.createElement(R.A.ListPagingSelect,{placeholder:"RadioListPagingSelect",pagingProps:{loadData:n,defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(O.A,{src:e.avatar}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),u.createElement(x.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(xt,null,u.createElement(R.A.ListPaging,{mode:"multiple",isSuspenseAsync:!1,pagingProps:{loadData:n,defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(O.A,{src:e.avatar}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),u.createElement(x.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(xt,null,u.createElement(R.A.ListPagingSelect,{mode:"multiple",placeholder:"CheckboxListPagingSelect",pagingProps:{loadData:n,defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,n)=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{avatar:u.createElement(O.A,{src:e.avatar}),title:u.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),u.createElement(x.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(xt,null,u.createElement(R.A.AutoCompleteListPagingSelect,{mode:"multiple",placeholder:"AutoCompleteListPagingSelect",dropdownStyle:{maxHeight:h.A.pxToRem(300,t.designWidth,t),overflow:"auto"},pagingProps:{loadData:n,defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:e=>u.createElement(R.A.Item,null,u.createElement(R.A.Item.Meta,{title:e.title,description:e.label}))}}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},Et=Array.from({length:100}).map((()=>{const e=U().mock("@name"),n=U().mock("@guid");return{id:n,name:e,address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city"),label:e,value:n}})),Tt=[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}],It=()=>{const[e]=x.useForm(),{media:n}=(0,u.useContext)(C.A.Context);function t(e,n){return console.log("paging",e,n),new Promise((t=>{t({totalCount:Et.length,data:Et.slice((e-1)*n,e*n)})}))}return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(xt,null,u.createElement(J.A.TablePaging,{isSuspenseAsync:!1,pagingProps:{loadData:t,defaultLimit:5},tablePagingProps:{rowKey:"id",columns:Tt}}))),u.createElement(x.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(xt,null,u.createElement(J.A.TablePagingSelect,{placeholder:"RadioPagingList",pagingProps:{loadData:t,defaultLimit:5},tablePagingProps:{rowKey:"id",columns:Tt}}))),u.createElement(x.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(xt,null,u.createElement(J.A.TablePaging,{mode:"multiple",isSuspenseAsync:!1,pagingProps:{loadData:t,defaultLimit:5},tablePagingProps:{rowKey:"id",columns:Tt}}))),u.createElement(x.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(xt,null,u.createElement(J.A.TablePagingSelect,{mode:"multiple",placeholder:"RadioPagingList",pagingProps:{loadData:t,defaultLimit:5},tablePagingProps:{rowKey:"id",columns:Tt}}))),u.createElement(x.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(xt,null,u.createElement(J.A.AutoCompleteTablePagingSelect,{mode:"multiple",placeholder:"AutoCompleteTablePagingSelect",dropdownStyle:{maxHeight:h.A.pxToRem(300,n.designWidth,n),overflow:"auto"},pagingProps:{loadData:t,defaultLimit:5},tablePagingProps:{rowKey:"id",columns:Tt}}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},wt=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)(void 0),{media:r}=(0,u.useContext)(C.A.Context);return u.createElement(_.A.AutoCompleteButtonRadioSelect,{placeholder:"AutoCompleteButtonRadioSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,r.designWidth,r),overflow:"auto"},value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))})},Vt=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)(void 0),{media:r}=(0,u.useContext)(C.A.Context);return u.createElement(_.A.AutoCompleteCustomRadioSelect,{placeholder:"AutoCompleteCustomRadioSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,r.designWidth,r),overflow:"auto"},value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n}=e;return u.createElement(N.A,{span:4},u.createElement(_.A,(0,W.A)({key:null==n?void 0:n.value},null!=n?n:{}),null==n?void 0:n.label))})))))},Rt=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)(void 0);return u.createElement(_.A.AutoCompleteRadioSelect,{placeholder:"AutoCompleteRadioSelect",className:fn,value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))})},Ot=()=>u.createElement(_.A.ButtonRadio,{options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))}),Lt=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(_.A.ButtonRadioSelect,{className:en.A.Wrapper1,placeholder:"A-Z",value:e,onChange:n,options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))})},Dt=()=>u.createElement(_.A.CustomRadio,{options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n}=e;return u.createElement(N.A,{span:4},u.createElement(_.A,(0,W.A)({key:null==n?void 0:n.value},null!=n?n:{}),null==n?void 0:n.label))}))))),Ft=()=>{const[e,n]=(0,u.useState)(void 0),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(_.A.CustomRadioSelect,{className:en.A.Wrapper1,dropdownStyle:{maxHeight:h.A.pxToRem(300,t.designWidth,t),overflowY:"auto"},placeholder:"A-Z",value:e,onChange:n,options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))},(e=>u.createElement(M.A,{gutter:[16,24]},e.map((e=>{let{data:n}=e;return u.createElement(N.A,{span:4},u.createElement(_.A,(0,W.A)({key:null==n?void 0:n.value},null!=n?n:{}),null==n?void 0:n.label))})))))},Ht=()=>u.createElement(_.A.HorizontalRadio,{options:[{label:"男",value:2},{label:"女",value:1}]}),Mt=()=>u.createElement(_.A.Group,{options:[{label:"男",value:2},{label:"女",value:1}]}),Nt=()=>{const[e,n]=(0,u.useState)(void 0),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(_.A.RadioSelect,{placeholder:"A-Z",className:en.A.Wrapper,dropdownStyle:{maxHeight:h.A.pxToRem(300,t.designWidth,t),overflowY:"auto"},value:e,onChange:n,options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))})},Wt=()=>u.createElement(_.A.VerticalRadio,{options:[{label:"男",value:2},{label:"女",value:1}]});var _t=function(){return(_t=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)},Gt=function(e,n){var t={};for(r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]]);return t};Ln().extend(Mn()),Ln().extend(Fn());const jt=function(e){var n=e.defaultValue,t=e.value,a=e.onChange,r=Gt(e,["defaultValue","value","onChange"]);function o(e){return null==e?e:Array.isArray(e)?e.length?[Ln()(e[0]),Ln()(e[1])]:[]:null}function i(e){return{year:e.year(),quarter:e.quarter(),month:e.month(),week:e.week(),day:e.day(),date:e.date(),hour:e.hour(),minute:e.minute(),second:e.second()}}e=(0,u.useMemo)((function(){return o(t)}),[t]);var s=(0,u.useMemo)((function(){return o(n)}),[n]);return u.createElement(l.A,_t({},r,{defaultValue:s,value:e,onChange:function(e,n){var t;null!=a&&a(e&&e.length?[e[0].format(null!=(t=r.format)?t:"L LTS"),e[1].format(null!=(t=r.format)?t:"L LTS")]:e,n,e,e&&e.length?[i(e[0]),i(e[1])]:null)}}))};var Bt=(0,b.B)(jt,{});Bt.displayName="RangePickerFormatValueHOC";const qt=Bt,zt=()=>{const[e]=x.useForm();return(0,u.useEffect)((()=>{e.setFieldValue("createTime",["2023-12-12: 23:45:23","2026-12-12: 23:45:23"])}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"createTime",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},u.createElement(qt,null)),u.createElement(x.Item,{name:"createTime1",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},u.createElement(qt,{type:["seconds","seconds"]})),u.createElement(x.Item,{name:"createTime2",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},u.createElement(qt,{type:["seconds","milliseconds"]})),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var Ut=function(){return(Ut=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)},Kt=function(e,n){var t={};for(r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]]);return t};Ln().extend(Mn()),Ln().extend(Fn());var Zt=["milliseconds","milliseconds"];const Jt=function(e){var n=e.defaultValue,t=e.value,a=e.onChange,r=void 0===(o=e.type)?Zt:o,o=Kt(e,["defaultValue","value","onChange","type"]);function i(e){if(null==e)return e;if(!Array.isArray(e))return null;if(!e.length)return[];for(var n=Array.isArray(null!=r?r:Zt)?(null!=r?r:Zt).slice(0,2):Zt,t=0;t<2;t++)["seconds","milliseconds"].includes(n[t])||(n[t]="milliseconds");return n.join()===["seconds","seconds"].join()||n.join()===["seconds","seconds"].join()?[Ln().unix(e[0]),Ln().unix(e[1])]:n.join()===["seconds","milliseconds"].join()?[Ln().unix(e[0]),Ln()(e[1])]:n.join()===["milliseconds","seconds"].join()?[Ln()(e[0]),Ln().unix(e[1])]:[Ln()(e[0]),Ln()(e[1])]}function s(e){return Math.round(e/1e3)}function c(e){return{year:e.year(),quarter:e.quarter(),month:e.month(),week:e.week(),day:e.day(),date:e.date(),hour:e.hour(),minute:e.minute(),second:e.second()}}e=(0,u.useMemo)((function(){return i(t)}),[t]);var d=(0,u.useMemo)((function(){return i(n)}),[n]);return u.createElement(l.A,Ut({},o,{defaultValue:d,value:e,onChange:function(e,n){var t;null!=a&&a(e&&e.length?(t=[e[0].valueOf(),e[1].valueOf()],!r||!Array.isArray(r)||r.length<2?t:"milliseconds"===r[0]&&"seconds"===r[1]?[t[0],s(t[1])]:"seconds"===r[0]&&"milliseconds"===r[1]?[s(t[0]),t[1]]:"seconds"===r[0]&&"seconds"===r[1]?[s(t[0]),s(t[1])]:t):e,n,e,e&&e.length?[c(e[0]),c(e[1])]:null)}}))};var $t=(0,b.B)(Jt,{});$t.displayName="RangePickerTimestampValueHOC";const Yt=$t,Qt=()=>{const[e]=x.useForm();return(0,u.useEffect)((()=>{e.setFieldValue("createTime",[Ln()().valueOf(),Ln()().valueOf()])}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"createTime",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},u.createElement(Yt,null)),u.createElement(x.Item,{name:"createTime1",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},u.createElement(Yt,{type:["seconds","seconds"]})),u.createElement(x.Item,{name:"createTime2",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},u.createElement(Yt,{type:["seconds","milliseconds"]})),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},Xt=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)([]);return u.createElement(B.A.AutoCompleteCheckAllMultipleSelect,{className:fn,placeholder:"AutoCompleteCheckAllMultipleSelect",value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))},(e=>{let{originNode:n,value:t,onChange:a,options:r}=e;return u.createElement(g.A.Group,{value:t,onChange:a,options:r})}))},ea=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)([]);return u.createElement(B.A.AutoCompleteMultipleSelect,{className:fn,placeholder:"AutoCompleteMultipleSelect",value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))})},na=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)(void 0);return u.createElement(q.A.AutoCompleteSelect,{className:fn,placeholder:"AutoCompleteSelect",value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))})},ta=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(B.A.CheckAllSelect,{placeholder:"Select",value:e,onChange:n,className:en.A.Wrapper,options:[{label:"男",value:"2"},{label:"女",value:"1"}]},(e=>{let{originNode:n,value:t,onChange:a,options:r}=e;return u.createElement(g.A.Group,{value:t,onChange:a,options:r})}))},aa=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(q.A.DropdownRenderSelect,{placeholder:"Select",mode:"multiple",value:e,onChange:n,className:en.A.Wrapper,options:[{label:"男",value:"2"},{label:"女",value:"1"}]},(e=>{let{originNode:n,value:t,onChange:a,options:r}=e;return u.createElement(g.A.Group,{value:t,onChange:a,options:r})}))},ra=()=>u.createElement(B.A,{placeholder:"Select",className:en.A.Wrapper,options:[{label:"男",value:"2"},{label:"女",value:"1"}]}),la=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(B.A.CheckAllSelect,{placeholder:"Select",value:e,onChange:n,className:en.A.Wrapper,options:[{label:"男",value:"2"},{label:"女",value:"1"}],render:(e,n)=>u.createElement("div",{style:{display:"flex"}},u.createElement("div",{style:{flexShrink:0,marginRight:10,alignSelf:"flex-start"}},e),u.createElement("div",{style:{flex:"1",minWidth:0}},n))},(e=>{let{originNode:n,value:t,onChange:a,options:r}=e;return u.createElement(g.A.Group,{value:t,onChange:a,options:r})}))},oa=()=>u.createElement(q.A,{placeholder:"Select",className:en.A.Wrapper,options:[{label:"男",value:"2"},{label:"女",value:"1"}]}),ia=Array.from({length:100}).map((()=>{const e=U().mock("@name"),n=U().mock("@guid");return{id:n,name:e,address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city"),label:e,value:n}})),sa=()=>{const[e,n]=(0,u.useState)([]),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(J.A.AutoCompleteTablePagingSelect,{mode:"multiple",placeholder:"AutoCompleteTablePagingSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,t.designWidth,t),overflow:"auto"},value:e,onChange:n,pagingProps:{loadData:function(e,n,t){return console.log(e,n,t),new Promise((a=>{const r=t?ia.filter((e=>{let{label:n}=e;return-1!==n.indexOf(t)})):[];a({totalCount:r.length,data:r.slice((e-1)*n,e*n)})}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},ca=Array.from({length:100}).map((()=>{const e=U().mock("@name"),n=U().mock("@guid");return{id:n,name:e,address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city"),label:e,value:n}})),da=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)(void 0),{media:r}=(0,u.useContext)(C.A.Context);return u.createElement(J.A.AutoCompleteTableSelect,{placeholder:"AutoCompleteTableSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,r.designWidth,r),overflow:"auto"},value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...ca].filter((n=>-1!==n.label.indexOf(e)));n(a),t()}),500)})),tableProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}],pagination:!1}})},ma=Array.from({length:100}).map((()=>{const e=U().mock("@name"),n=U().mock("@guid");return{id:n,name:e,address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city"),label:e,value:n}})),ua=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(J.A.TablePaging,{mode:"multiple",value:e,onChange:n,isSuspenseAsync:!1,pagingProps:{loadData:function(e,n){return console.log("paging",e,n),new Promise((t=>{t({totalCount:ma.length,data:ma.slice((e-1)*n,e*n)})}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},pa=Array.from({length:100}).map((()=>{const e=U().mock("@name"),n=U().mock("@guid");return{id:n,name:e,address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city"),label:e,value:n}})),ha=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(J.A.TablePagingSelect,{mode:"multiple",className:fn,placeholder:"RadioPagingList",value:e,onChange:n,pagingProps:{loadData:function(e,n){return console.log("paging",e,n),new Promise((t=>{t({totalCount:pa.length,data:pa.slice((e-1)*n,e*n)})}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},fa=Array.from({length:100}).map((()=>{const e=U().mock("@name"),n=U().mock("@guid");return{id:n,name:e,address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city"),label:e,value:n}})),ga=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(J.A.TablePaging,{value:e,onChange:n,isSuspenseAsync:!1,pagingProps:{loadData:function(e,n){return console.log("paging",e,n),new Promise((t=>{t({totalCount:fa.length,data:fa.slice((e-1)*n,e*n)})}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},Ca=Array.from({length:100}).map((()=>{const e=U().mock("@name"),n=U().mock("@guid");return{id:n,name:e,address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city"),label:e,value:n}})),ya=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(J.A.TablePagingSelect,{className:fn,placeholder:"RadioPagingList",value:e,onChange:n,pagingProps:{loadData:function(e,n){return console.log("paging",e,n),new Promise((t=>{t({totalCount:Ca.length,data:Ca.slice((e-1)*n,e*n)})}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},va=Array.from({length:100}).map((()=>{const e=U().mock("@name"),n=U().mock("@guid");return{id:n,name:e,address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city"),label:e,value:n}})),ba=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(J.A.TableSelect,{className:fn,placeholder:"TableSelect",value:e,onChange:n,options:va,tableProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},Aa=Array.from({length:100}).map((()=>{const e=U().mock("@name"),n=U().mock("@guid");return{id:n,name:e,address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city"),label:e,value:n}})),ka=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(J.A.TablePaging,{mode:"multiple",value:e,onChange:n,pagingProps:{loadData:function(e,n){return console.log("paging",e,n),new Promise((t=>{setTimeout((()=>{t({totalCount:Aa.length,data:Aa.slice((e-1)*n,e*n)})}),2e3)}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},xa=Array.from({length:100}).map((()=>({id:U().mock("@guid"),name:U().mock("@name"),address:U().mock("@region"),height:U().mock("@integer(60, 100)"),width:U().mock("@integer(60, 100)"),nativePlace:U().mock("@city")}))),Sa=()=>u.createElement(J.A,{columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}],dataSource:xa}),Pa=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)([]);return u.createElement(Q.A.AutoCompleteCheckAllTagSelect,{placeholder:"AutoCompleteCheckAllTagSelect",className:fn,value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id,children:e.t})));n(a),t()}),500)}))})},Ea=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)([]);return u.createElement(Q.A.AutoCompleteTagSelect,{placeholder:"AutoCompleteTagSelect",mode:"multiple",className:fn,value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id,children:e.t})));n(a),t()}),500)}))})},Ta=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(Q.A.CheckAllTagSelect,{className:en.A.Wrapper,placeholder:"A-Z",value:e,onChange:e=>{n(e)},options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{value:t,label:t,children:t}}))})},Ia=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(Q.A.CheckAllTagSelect,{className:en.A.Wrapper,placeholder:"A-Z",value:e,onChange:e=>{n(e)},options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{value:t,label:t,children:t}})),render:(e,n)=>u.createElement("div",null,u.createElement("div",null,n),u.createElement("div",null,e))})},wa=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(Q.A.HorizontalCheckAllCheckableTagGroup,{value:e,onChange:e=>{n(e)},options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{value:t,children:t}}))})},Va=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(Q.A.HorizontalCheckableTagGroup,{mode:"multiple",value:e,onChange:e=>{n(e)},options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{value:t,children:t}}))})},Ra=()=>u.createElement(Q.A.HorizontalTagGroup,{options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{value:t,children:t}}))}),Oa=()=>u.createElement(Q.A,null,"Tag 1"),La=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(Q.A.TagSelect,{mode:"multiple",className:en.A.Wrapper,placeholder:"A-Z",value:e,onChange:e=>{n(e)},options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{value:t,label:t,children:t}}))})},Da=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(Q.A.VerticalCheckAllCheckableTagGroup,{value:e,onChange:e=>{n(e)},options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{value:t,children:t}}))})},Fa=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(Q.A.VerticalCheckableTagGroup,{mode:"multiple",value:e,onChange:e=>{n(e)},options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{value:t,children:t}}))})},Ha=()=>u.createElement(Q.A.VerticalTagGroup,{options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{value:t,children:t}}))});var Ma=function(){return(Ma=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)},Na=function(e,n){var t={};for(r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]]);return t};Ln().extend(Mn()),Ln().extend(Fn());const Wa=function(e){var n=e.defaultValue,t=e.value,a=e.onChange,l=Na(e,["defaultValue","value","onChange"]);function o(e){var n;return null==e?e:(n=Ln()().format("L"),Ln()("".concat(n," ").concat(e)))}e=(0,u.useMemo)((function(){return o(t)}),[t]);var i=(0,u.useMemo)((function(){return o(n)}),[n]);return u.createElement(r.A,Ma({},l,{defaultValue:i,value:e,onChange:function(e,n){var t;null!=a&&a(e.format(null!=(t=l.format)?t:"LTS"),n,e,{hour:e.hour(),minute:e.minute(),second:e.second()})}}))};var _a=(0,b.B)(Wa,{});_a.displayName="TimePickerFormatValueHOC";const Ga=_a,ja=()=>{const[e]=x.useForm();return(0,u.useEffect)((()=>{e.setFieldValue("createTime","23:59:59")}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"createTime",label:"开店时间",rules:[{required:!0,message:"请选择开店时间"}]},u.createElement(Ga,null)),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var Ba=function(){return(Ba=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)},qa=function(e,n){var t={};for(r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]]);return t};const za=function(e){var n=e.defaultValue,t=e.value,a=e.onChange,l=void 0===(o=e.type)?"milliseconds":o,o=qa(e,["defaultValue","value","onChange","type"]);function i(e){return null==e?e:"seconds"===l?Ln().unix(e):Ln()(e)}e=(0,u.useMemo)((function(){return i(t)}),[t]);var s=(0,u.useMemo)((function(){return i(n)}),[n]);return u.createElement(r.A,Ba({},o,{defaultValue:s,value:e,onChange:function(e,n){var t;null!=a&&a((t=e.valueOf(),"seconds"===l?Math.round(t/1e3):t),n,e,{hour:e.hour(),minute:e.minute(),second:e.second()})}}))};var Ua=(0,b.B)(za,{});Ua.displayName="TimePickerTimestampValueHOC";const Ka=Ua,Za=()=>{const[e]=x.useForm();return(0,u.useEffect)((()=>{e.setFieldValue("birthDay2",Ln()().valueOf())}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"birthday",label:"生日",rules:[{required:!0,message:"请选择生日"}]},u.createElement(Ka,null)),u.createElement(x.Item,{name:"birthday1",label:"生日",rules:[{required:!0,message:"请选择生日"}]},u.createElement(Ka,{type:"seconds"})),u.createElement(x.Item,{name:"birthday2",label:"生日",rules:[{required:!0,message:"请选择生日"}]},u.createElement(Ka,null)),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},Ja=()=>{const[e,n]=(0,u.useState)([]),[t,a]=(0,u.useState)([]),{media:r}=(0,u.useContext)(C.A.Context);return u.createElement(ne.A.AutoCompleteTransferSelect,{placeholder:"AutoCompleteTransferSelect",className:fn,dropdownStyle:{maxHeight:h.A.pxToRem(300,r.designWidth,r),overflow:"auto"},value:t,options:e,onChange:a,loadData:e=>new Promise((t=>{if(console.log("_kw",e),!e)return n([]),void t();setTimeout((()=>{const a=[...E.A].filter((n=>-1!==n.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n(a),t()}),500)}))})},$a=Array.from({length:20}).map(((e,n)=>({key:n.toString(),title:"content".concat(n+1),description:"description of content".concat(n+1)}))),Ya=$a.filter((e=>Number(e.key)>10)).map((e=>e.key)),Qa=()=>{const[e,n]=(0,u.useState)(Ya),[t,a]=(0,u.useState)([]);return u.createElement(ne.A,{dataSource:$a,titles:["Source","Target"],targetKeys:e,selectedKeys:t,onChange:(e,t,a)=>{console.log("targetKeys:",e),console.log("direction:",t),console.log("moveKeys:",a),n(e)},onSelectChange:(e,n)=>{console.log("sourceSelectedKeys:",e),console.log("targetSelectedKeys:",n),a([...e,...n])},onScroll:(e,n)=>{console.log("direction:",e),console.log("target:",n.target)},render:e=>e.title})},Xa=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(ne.A.TransferSelect,{placeholder:"A-Z",className:en.A.Wrapper2,value:e,onChange:n,options:Array.from({length:26}).map(((e,n)=>{const t=String.fromCharCode(97+n).toUpperCase();return{label:t,value:t}}))})};var er=t(93919);const nr=[{value:"zhejiang",label:"Zhejiang",children:[{value:"hangzhou",label:"Hangzhou",children:[{value:"xihu",label:"West Lake"}]}]},{value:"jiangsu",label:"Jiangsu",children:[{value:"nanjing",label:"Nanjing",children:[{value:"zhonghuamen",label:"Zhong Hua Men"}]}]}],tr=[...ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,isLeaf:!1,pId:0}))),...Object.keys(ie.Wj).map((e=>ie.Wj[e].map((n=>({title:n.name,label:n.name,value:n.id,id:n.id,isLeaf:!1,pId:"".concat(e)}))))).flat(),...Object.keys(ie.Vb).map((e=>ie.Vb[e].map((n=>({title:n.name,label:n.name,value:n.id,id:n.id,isLeaf:!0,pId:e}))))).flat()],ar=()=>{const[e]=x.useForm();return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,{treeDataProp:"options"},u.createElement(oe.A,{placeholder:"Please select",options:nr}))),u.createElement(x.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,{treeDataProp:"options"},u.createElement(oe.A.CascaderMulti,{placeholder:"Please select",options:nr}))),u.createElement(x.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,{treeDataProp:"options"},u.createElement(oe.A.CascaderChangeOnSelect,{placeholder:"Please select",options:nr}))),u.createElement(x.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,{treeDataProp:"options"},u.createElement(oe.A.CascaderShowChild,{placeholder:"Please select",options:nr}))),u.createElement(x.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,{treeDataProp:"options"},u.createElement(oe.A.CascaderMulti,{placeholder:"Please select",options:tr,treeDataSimpleMode:!0}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},rr=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:u.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],lr=[...ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,isLeaf:!1,pId:0}))),...Object.keys(ie.Wj).map((e=>ie.Wj[e].map((n=>({title:n.name,label:n.name,value:n.id,id:n.id,isLeaf:!1,pId:"".concat(e)}))))).flat(),...Object.keys(ie.Vb).map((e=>ie.Vb[e].map((n=>({title:n.name,label:n.name,value:n.id,id:n.id,isLeaf:!0,pId:e}))))).flat()],or=()=>{const[e]=x.useForm(),{media:n}=(0,u.useContext)(C.A.Context);return(0,u.useEffect)((()=>{}),[]),u.createElement(x,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},u.createElement(x.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,null,u.createElement(de.A,{dropdownStyle:{maxHeight:h.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:rr}))),u.createElement(x.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,null,u.createElement(de.A.TreeMultiSelect,{dropdownStyle:{maxHeight:h.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:rr}))),u.createElement(x.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,null,u.createElement(de.A.TreeCheckedShowParentSelect,{dropdownStyle:{maxHeight:h.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:rr}))),u.createElement(x.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,null,u.createElement(de.A.TreeCheckedShowChildSelect,{dropdownStyle:{maxHeight:h.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:rr}))),u.createElement(x.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,null,u.createElement(de.A.TreeCheckedShowAllSelect,{dropdownStyle:{maxHeight:h.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:rr}))),u.createElement(x.Item,{name:"sex5",label:"性别",rules:[{required:!0,message:"请选择性别"}]},u.createElement(er.A,null,u.createElement(de.A,{dropdownStyle:{maxHeight:h.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:lr,treeDataSimpleMode:!0}))),u.createElement(x.Item,{wrapperCol:{span:24}},u.createElement(S.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},ir=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(de.A.AsyncTreeCheckedShowAllSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeCheckedShowAllSelect",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},sr=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(de.A.AsyncTreeCheckedShowChildSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeCheckedShowChildSelect",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},cr=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(de.A.AsyncTreeCheckedShowParentSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeCheckedShowParentSelect",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},dr=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(de.A.AsyncTreeLeafSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeLeafSelect",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},mr=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(de.A.AsyncTreeMultiLeafSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeMultiLeafSelect",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},ur=()=>{const[e,n]=(0,u.useState)(["230102000000","210102000000"]);return u.createElement(de.A.AsyncTreeMultiLeafSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeMultiLeafSelectEcho",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)},fetchBranch:function(e,n){return Promise.resolve([{title:"辽宁省",value:"210000000000",isLeaf:!1,children:[{title:"沈阳市",value:"210100000000",isLeaf:!1,children:[{title:"和平区",value:"210102000000",isLeaf:!0}]}]},{title:"黑龙江省",value:"230000000000",isLeaf:!1,children:[{title:"哈尔滨市",value:"230100000000",isLeaf:!1,children:[{title:"道里区",value:"230102000000",isLeaf:!0}]}]}])}})},pr=()=>{const[e,n]=(0,u.useState)([]);return u.createElement(de.A.AsyncTreeMultiSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeMultiSelect",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},hr=()=>{const[e,n]=(0,u.useState)(["230102000000","210102000000"]);return u.createElement(de.A.AsyncTreeMultiSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeMultiSelectEcho",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)},fetchBranch:function(e,n){return Promise.resolve([{title:"辽宁省",value:"210000000000",isLeaf:!1,children:[{title:"沈阳市",value:"210100000000",isLeaf:!1,children:[{title:"和平区",value:"210102000000",isLeaf:!0}]}]},{title:"黑龙江省",value:"230000000000",isLeaf:!1,children:[{title:"哈尔滨市",value:"230100000000",isLeaf:!1,children:[{title:"道里区",value:"230102000000",isLeaf:!0}]}]}])}})},fr=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(de.A.AsyncTreeSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeSelect",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)}})},gr=()=>{const[e,n]=(0,u.useState)("210102000000");return u.createElement(de.A.AsyncTreeSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeSelectEcho",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)},fetchBranch:function(e,n){return Promise.resolve([{title:"辽宁省",value:"210000000000",isLeaf:!1,children:[{title:"沈阳市",value:"210100000000",isLeaf:!1,children:[{title:"和平区",value:"210102000000",isLeaf:!0}]}]}])}})},Cr=()=>{const[e,n]=(0,u.useState)(["210102000000"]);return u.createElement(de.A.AsyncTreeMultiSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeMultiSelect",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)},fetchBranch:function(e,n){return Promise.resolve([{title:"辽宁省",value:"210000000000",id:"210000000000",pId:0,isLeaf:!1},{title:"沈阳市",value:"210100000000",id:"210100000000",pId:"210000000000",isLeaf:!1},{title:"和平区",value:"210102000000",id:"210102000000",pId:"210100000000",isLeaf:!0}])},treeDataSimpleMode:!0})},yr=()=>{const[e,n]=(0,u.useState)(void 0);return u.createElement(de.A.AsyncTreeSelect,{className:en.A.Wrapper,placeholder:"AsyncTreeSelect",value:e,onChange:n,fetchData:function(e,n){var t,a;if(!e)return Promise.resolve(ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const r=Object.keys(ie.Vb).map((e=>ie.Vb[e])).flat().map((e=>e.id)),l=null===(t={...ie.Wj,...ie.Vb}[e])||void 0===t||null===(a=t.map)||void 0===a?void 0:a.call(t,(n=>({title:n.name,label:n.name,value:n.id,id:n.id,pId:e,isLeaf:r.includes(n.id)})));return Promise.resolve(l)},treeDataSimpleMode:!0})},vr=[...ie.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,isLeaf:!1,pId:0}))),...Object.keys(ie.Wj).map((e=>ie.Wj[e].map((n=>({title:n.name,label:n.name,value:n.id,id:n.id,isLeaf:!1,pId:"".concat(e)}))))).flat(),...Object.keys(ie.Vb).map((e=>ie.Vb[e].map((n=>({title:n.name,label:n.name,value:n.id,id:n.id,isLeaf:!0,pId:e}))))).flat()],br=()=>{const[e,n]=(0,u.useState)(),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(de.A,{className:en.A.Wrapper,dropdownStyle:{maxHeight:h.A.pxToRem(400,t.designWidth,t),overflow:"auto"},value:e,placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{n(e)},treeData:vr,treeDataSimpleMode:!0})},Ar=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:u.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],kr=()=>{const[e,n]=(0,u.useState)(),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(de.A.TreeCheckedShowAllSelect,{value:e,className:en.A.Wrapper1,dropdownStyle:{maxHeight:h.A.pxToRem(400,t.designWidth,t),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{n(e)},treeData:Ar})},xr=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:u.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],Sr=()=>{const[e,n]=(0,u.useState)(),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(de.A.TreeCheckedShowChildSelect,{value:e,className:en.A.Wrapper1,dropdownStyle:{maxHeight:h.A.pxToRem(400,t.designWidth,t),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{n(e)},treeData:xr})},Pr=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:u.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],Er=()=>{const[e,n]=(0,u.useState)(),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(de.A.TreeCheckedShowParentSelect,{value:e,className:en.A.Wrapper1,dropdownStyle:{maxHeight:h.A.pxToRem(400,t.designWidth,t),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{n(e)},treeData:Pr})},Tr=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:u.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],Ir=()=>{const[e,n]=(0,u.useState)(),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(de.A.TreeLeafSelect,{value:e,className:en.A.Wrapper1,dropdownStyle:{maxHeight:h.A.pxToRem(400,t.designWidth,t),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{n(e)},treeData:Tr})},wr=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:u.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],Vr=()=>{const[e,n]=(0,u.useState)(),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(de.A.TreeMultiLeafSelect,{value:e,className:en.A.Wrapper1,dropdownStyle:{maxHeight:h.A.pxToRem(400,t.designWidth,t),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{n(e)},treeData:wr})},Rr=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:u.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],Or=()=>{const[e,n]=(0,u.useState)(),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(de.A.TreeMultiSelect,{value:e,className:en.A.Wrapper1,dropdownStyle:{maxHeight:h.A.pxToRem(400,t.designWidth,t),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{n(e)},treeData:Rr})},Lr=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:u.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],Dr=()=>{const[e,n]=(0,u.useState)(),{media:t}=(0,u.useContext)(C.A.Context);return u.createElement(de.A,{value:e,className:en.A.Wrapper1,dropdownStyle:{maxHeight:h.A.pxToRem(400,t.designWidth,t),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{n(e)},treeData:Lr})},Fr="ClrPgP4TwKNSOwDjYrdj",Hr="G1o43OKmaP8SCW8K7_27",{ScrollLayout:Mr}=i.A,Nr=()=>u.createElement(p.Ay,null,u.createElement(p.wn,{title:"AntHOC"},u.createElement("p",null,"Antd组件HOC和增强"),u.createElement("ul",null,u.createElement("li",null,"对antd一些组件进行HOC处理同时对有些组件在HOC的同时进行增强处理"))),u.createElement(p.Wc,{title:"BasicHOC",config:[{id:"Input",name:"Input",mode:"code",scope:{React:u},cardProps:{description:{title:"Input",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { Input } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => <Input placeholder=\"请输入\" className={styles.Wrapper} />;\n",renderChildren:()=>u.createElement(xe,null)},{id:"TextArea",name:"TextArea",mode:"code",scope:{React:u},cardProps:{description:{title:"TextArea",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { TextArea } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => <TextArea placeholder=\"请输入\" className={styles.Wrapper} />;\n",renderChildren:()=>u.createElement(Ke,null)},{id:"InputNumberDecimal1",name:"InputNumberDecimal1",mode:"code",scope:{React:u},cardProps:{description:{title:"InputNumberDecimal1",info:"只能输入一位小数"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { InputNumberDecimal1 } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => <InputNumberDecimal1 placeholder=\"请输入\" className={styles.Wrapper} />;\n",renderChildren:()=>u.createElement(Pe,null)},{id:"InputNumberDecimal2",name:"InputNumberDecimal2",mode:"code",scope:{React:u},cardProps:{description:{title:"InputNumberDecimal2",info:"只能输入两位小数"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { InputNumberDecimal2 } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => <InputNumberDecimal2 placeholder=\"请输入\" className={styles.Wrapper} />;\n",renderChildren:()=>u.createElement(Te,null)},{id:"InputNumberInteger",name:"InputNumberInteger",mode:"code",scope:{React:u},cardProps:{description:{title:"InputNumberInteger",info:"只能输入整数"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { InputNumberInteger } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => <InputNumberInteger placeholder=\"请输入\" className={styles.Wrapper} />;\n",renderChildren:()=>u.createElement(we,null)},{id:"Modal",name:"Modal",mode:"code",scope:{React:u},cardProps:{description:{title:"Modal",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Button, Modal } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}\r\n      >\r\n        Open Modal\r\n      </Button>\r\n      <Modal\r\n        title=\"Basic Modal\"\r\n        open={isModalOpen}\r\n        onOk={() => {\r\n          setIsModalOpen(false);\r\n        }}\r\n        onCancel={() => {\r\n          setIsModalOpen(false);\r\n        }}\r\n      >\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Le,null)},{id:"DatePicker",name:"DatePicker",mode:"code",scope:{React:u},cardProps:{description:{title:"DatePicker",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { DatePicker } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => (\n  <DatePicker\n    // style={{\n    //   width: 200,\n    // }}\n    className={styles.Wrapper}\n    showTime\n    onChange={(value, dateString) => {\n      console.log(value, dateString);\n    }}\n  />\n);\n",renderChildren:()=>u.createElement(ye,null)},{id:"RangePicker",name:"RangePicker",mode:"code",scope:{React:u},cardProps:{description:{title:"RangePicker",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { RangePicker } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => <RangePicker className={styles.Wrapper} />;\n",renderChildren:()=>u.createElement(Ne,null)},{id:"TimePicker",name:"TimePicker",mode:"code",scope:{React:u},cardProps:{description:{title:"TimePicker",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { TimePicker } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => <TimePicker className={styles.Wrapper} />;\n",renderChildren:()=>u.createElement(Ze,null)},{id:"Upload",name:"Upload",mode:"code",scope:{React:u},cardProps:{description:{title:"Upload",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, Upload } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Upload\r\n    {...{\r\n      name: 'file',\r\n      action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n      headers: {\r\n        authorization: 'authorization-text',\r\n      },\r\n      onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n          console.log(info.file, info.fileList);\r\n        }\r\n        if (info.file.status === 'done') {\r\n          message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    }}\r\n  >\r\n    <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n  </Upload>\r\n);\r\n",renderChildren:()=>u.createElement(Xe,null)},{id:"Pagination",name:"Pagination",mode:"code",scope:{React:u},cardProps:{description:{title:"Pagination",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Pagination } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => <Pagination defaultCurrent={1} total={50} />;\r\n",renderChildren:()=>u.createElement(Me,null)},{id:"SubmitButton",name:"SubmitButton",mode:"code",scope:{React:u},cardProps:{description:{title:"SubmitButton",info:"提交按钮"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { SubmitButton } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => (\n  <SubmitButton\n    className={styles.Wrapper}\n    type=\"primary\"\n    onClick={() => new Promise((resolve) => setTimeout(resolve, 3000))}\n  >\n    提交\n  </SubmitButton>\n);\n",renderChildren:()=>u.createElement(Be,null)},{id:"Form",name:"Form",mode:"code",scope:{React:u},cardProps:{description:{title:"Form",info:"使用了默认配置"}},type:"PlayGround",codeText:'import React from \'react\';\r\n\r\nimport { Space } from \'@baifendian/adhere\';\r\nimport { Form, Input } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nexport default () => (\r\n  <div>\r\n    <p>\r\n      对Form的Rules进行增强(\r\n      <a target="_blank" href="/adhere/component/util/validator">\r\n        使用adhere-util-validator\r\n      </a>\r\n      )\r\n    </p>\r\n\r\n    <Form labelCol={{ span: 3 }} wrapperCol={{ span: 21 }}>\r\n      <ul>\r\n        <Space.Group direction="vertical">\r\n          <li>\r\n            <Form.Item\r\n              name="email"\r\n              label="email"\r\n              rules={[Form.ValidatorRules.isEmail({ invalidMessage: \'email格式错误\' })]}\r\n            >\r\n              <Input placeholder="email" />\r\n            </Form.Item>\r\n          </li>\r\n          <li>\r\n            <Form.Item\r\n              name="mime"\r\n              label="mime"\r\n              rules={[\r\n                Form.ValidatorRules.isMimeType({\r\n                  invalidMessage: \'MimeType格式错误\',\r\n                }),\r\n              ]}\r\n            >\r\n              <Input placeholder="mime" />\r\n            </Form.Item>\r\n          </li>\r\n          <li>\r\n            <Form.Item\r\n              name="hex"\r\n              label="hex"\r\n              rules={[\r\n                Form.ValidatorRules.isHexColor({\r\n                  invalidMessage: \'hex值格式错误\',\r\n                }),\r\n              ]}\r\n            >\r\n              <Input placeholder="hex" />\r\n            </Form.Item>\r\n          </li>\r\n          <li>\r\n            <Form.Item\r\n              name="ip"\r\n              label="ip"\r\n              rules={[\r\n                Form.ValidatorRules.isIP({\r\n                  invalidMessage: \'ip地址格式错误\',\r\n                }),\r\n              ]}\r\n            >\r\n              <Input placeholder="ip" />\r\n            </Form.Item>\r\n          </li>\r\n          <li>\r\n            <Form.Item\r\n              name="chinaPhoneNumber"\r\n              label="手机卡 + 数据卡 + 上网卡"\r\n              rules={[\r\n                Form.ValidatorRules.isAllChinaPhoneNumber({\r\n                  invalidMessage: \'手机卡或数据卡或上网卡格式错误\',\r\n                }),\r\n              ]}\r\n            >\r\n              <Input placeholder="手机卡 + 数据卡 + 上网卡" />\r\n            </Form.Item>\r\n          </li>\r\n        </Space.Group>\r\n      </ul>\r\n    </Form>\r\n  </div>\r\n);\r\n',renderChildren:()=>u.createElement(ke,null)}]}),u.createElement(p.Wc,{title:"TransferHOC",config:[{id:"Transfer",name:"Transfer",mode:"code",scope:{React:u},cardProps:{description:{title:"Transfer",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Transfer } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst mockData = Array.from({\r\n  length: 20,\r\n}).map((_, i) => ({\r\n  key: i.toString(),\r\n  title: `content${i + 1}`,\r\n  description: `description of content${i + 1}`,\r\n}));\r\nconst initialTargetKeys = mockData.filter((item) => Number(item.key) > 10).map((item) => item.key);\r\n\r\nexport default () => {\r\n  const [targetKeys, setTargetKeys] = useState(initialTargetKeys);\r\n  const [selectedKeys, setSelectedKeys] = useState([]);\r\n  const onChange = (nextTargetKeys, direction, moveKeys) => {\r\n    console.log('targetKeys:', nextTargetKeys);\r\n    console.log('direction:', direction);\r\n    console.log('moveKeys:', moveKeys);\r\n    setTargetKeys(nextTargetKeys);\r\n  };\r\n  const onSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n    console.log('sourceSelectedKeys:', sourceSelectedKeys);\r\n    console.log('targetSelectedKeys:', targetSelectedKeys);\r\n    setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\r\n  };\r\n  const onScroll = (direction, e) => {\r\n    console.log('direction:', direction);\r\n    console.log('target:', e.target);\r\n  };\r\n\r\n  return (\r\n    <Transfer\r\n      dataSource={mockData}\r\n      titles={['Source', 'Target']}\r\n      targetKeys={targetKeys}\r\n      selectedKeys={selectedKeys}\r\n      onChange={onChange}\r\n      onSelectChange={onSelectChange}\r\n      onScroll={onScroll}\r\n      render={(item) => item.title}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Qa,null)},{id:"TransferSelect",name:"TransferSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"TransferSelect",info:"穿梭框的Select形式"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Transfer } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  return (\n    <Transfer.TransferSelect\n      placeholder=\"A-Z\"\n      className={styles.Wrapper2}\n      value={value}\n      onChange={setValue}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          label: letter,\n          value: letter,\n        };\n      })}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Xa,null)},{id:"AutoCompleteTransferSelect",name:"AutoCompleteTransferSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteTransferSelect",info:"穿梭框的自动补全形式"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Transfer } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Transfer.AutoCompleteTransferSelect\n      placeholder=\"AutoCompleteTransferSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          console.log('_kw', _kw);\n\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Ja,null)}]}),u.createElement(p.Wc,{title:"SelectHOC",config:[{id:"Select",name:"Select",mode:"code",scope:{React:u},cardProps:{description:{title:"Select",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { Select } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  return (\n    <Select\n      placeholder=\"Select\"\n      className={styles.Wrapper}\n      options={[\n        {\n          label: '男',\n          value: '2',\n        },\n        {\n          label: '女',\n          value: '1',\n        },\n      ]}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(oa,null)},{id:"MultipleSelect",name:"MultipleSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"MultipleSelect",info:"多选"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { MultipleSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  return (\n    <MultipleSelect\n      placeholder=\"Select\"\n      className={styles.Wrapper}\n      options={[\n        {\n          label: '男',\n          value: '2',\n        },\n        {\n          label: '女',\n          value: '1',\n        },\n      ]}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(ra,null)},{id:"CheckAllMultipleSelect",name:"CheckAllMultipleSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckAllMultipleSelect",info:"带有全选的多选"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Checkbox, MultipleSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  return (\n    <MultipleSelect.CheckAllSelect\n      placeholder=\"Select\"\n      value={value}\n      onChange={setValue}\n      className={styles.Wrapper}\n      options={[\n        {\n          label: '男',\n          value: '2',\n        },\n        {\n          label: '女',\n          value: '1',\n        },\n      ]}\n    >\n      {({ originNode, value, onChange, options }) => {\n        // return originNode;\n        return <Checkbox.Group value={value} onChange={onChange} options={options} />;\n      }}\n    </MultipleSelect.CheckAllSelect>\n  );\n};\n",renderChildren:()=>u.createElement(ta,null)},{id:"RenderCheckAllMultipleSelect",name:"RenderCheckAllMultipleSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"RenderCheckAllMultipleSelect",info:"可以自定义全选按钮的位置"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Checkbox, MultipleSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  return (\n    <MultipleSelect.CheckAllSelect\n      placeholder=\"Select\"\n      value={value}\n      onChange={setValue}\n      className={styles.Wrapper}\n      options={[\n        {\n          label: '男',\n          value: '2',\n        },\n        {\n          label: '女',\n          value: '1',\n        },\n      ]}\n      render={(checkAllOrigin, children) => (\n        <div style={{ display: 'flex' }}>\n          <div style={{ flexShrink: 0, marginRight: 10, alignSelf: 'flex-start' }}>\n            {checkAllOrigin}\n          </div>\n          <div style={{ flex: '1', minWidth: 0 }}>{children}</div>\n        </div>\n      )}\n    >\n      {({ originNode, value, onChange, options }) => {\n        return <Checkbox.Group value={value} onChange={onChange} options={options} />;\n      }}\n    </MultipleSelect.CheckAllSelect>\n  );\n};\n",renderChildren:()=>u.createElement(la,null)},{id:"DropdownRenderSelect",name:"DropdownRenderSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"DropdownRenderSelect",info:"可以自定义渲染的Select"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Checkbox, Select } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  return (\n    <Select.DropdownRenderSelect\n      placeholder=\"Select\"\n      mode=\"multiple\"\n      value={value}\n      onChange={setValue}\n      className={styles.Wrapper}\n      options={[\n        {\n          label: '男',\n          value: '2',\n        },\n        {\n          label: '女',\n          value: '1',\n        },\n      ]}\n    >\n      {({ originNode, value, onChange, options }) => {\n        return <Checkbox.Group value={value} onChange={onChange} options={options} />;\n      }}\n    </Select.DropdownRenderSelect>\n  );\n};\n",renderChildren:()=>u.createElement(aa,null)},{id:"AutoCompleteSelect",name:"AutoCompleteSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteSelect",info:"自动补全的Select"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Select } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState(undefined);\n\n  return (\n    <Select.AutoCompleteSelect\n      className={styles.FieldWrapper}\n      placeholder=\"AutoCompleteSelect\"\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    />\n  );\n};\n",renderChildren:()=>u.createElement(na,null)},{id:"AutoCompleteMultipleSelect",name:"AutoCompleteMultipleSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteMultipleSelect",info:"自动补全的多选Select"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { MultipleSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState([]);\n\n  return (\n    <MultipleSelect.AutoCompleteMultipleSelect\n      className={styles.FieldWrapper}\n      placeholder=\"AutoCompleteMultipleSelect\"\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    />\n  );\n};\n",renderChildren:()=>u.createElement(ea,null)},{id:"AutoCompleteCheckAllMultipleSelect",name:"AutoCompleteCheckAllMultipleSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteCheckAllMultipleSelect",info:"自动补全的多选且带全选的Select"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Checkbox, MultipleSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState([]);\n\n  return (\n    <MultipleSelect.AutoCompleteCheckAllMultipleSelect\n      className={styles.FieldWrapper}\n      placeholder=\"AutoCompleteCheckAllMultipleSelect\"\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    >\n      {({ originNode, value, onChange, options }) => {\n        // return originNode;\n        return <Checkbox.Group value={value} onChange={onChange} options={options} />;\n      }}\n    </MultipleSelect.AutoCompleteCheckAllMultipleSelect>\n  );\n};\n",renderChildren:()=>u.createElement(Xt,null)}]}),u.createElement(p.Wc,{title:"RadioHOC",config:[{id:"Radio",name:"Radio",mode:"code",scope:{React:u},cardProps:{description:{title:"Radio",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\n// export default () => <Radio>男</Radio>;\r\n\r\nexport default () => (\r\n  <Radio.Group\r\n    options={[\r\n      {\r\n        label: '男',\r\n        value: 2,\r\n      },\r\n      {\r\n        label: '女',\r\n        value: 1,\r\n      },\r\n    ]}\r\n  />\r\n);\r\n",renderChildren:()=>u.createElement(Mt,null)},{id:"VerticalRadio",name:"VerticalRadio",mode:"code",scope:{React:u},cardProps:{description:{title:"VerticalRadio",info:"竖向的RadioGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Radio.VerticalRadio\r\n    options={[\r\n      {\r\n        label: '男',\r\n        value: 2,\r\n      },\r\n      {\r\n        label: '女',\r\n        value: 1,\r\n      },\r\n    ]}\r\n  />\r\n);\r\n",renderChildren:()=>u.createElement(Wt,null)},{id:"HorizontalRadio",name:"HorizontalRadio",mode:"code",scope:{React:u},cardProps:{description:{title:"HorizontalRadio",info:"横向的RadioGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Radio.HorizontalRadio\r\n    options={[\r\n      {\r\n        label: '男',\r\n        value: 2,\r\n      },\r\n      {\r\n        label: '女',\r\n        value: 1,\r\n      },\r\n    ]}\r\n  />\r\n);\r\n",renderChildren:()=>u.createElement(Ht,null)},{id:"CustomRadio",name:"CustomRadio",mode:"code",scope:{React:u},cardProps:{description:{title:"CustomRadio",info:"自定义的RadioGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Col, Radio, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Radio.CustomRadio\r\n    options={Array.from({ length: 26 }).map((t, _index) => {\r\n      const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n      return {\r\n        label: letter,\r\n        value: letter,\r\n      };\r\n    })}\r\n  >\r\n    {(options) => (\r\n      <Row gutter={[16, 24]}>\r\n        {options.map(({ data }) => (\r\n          <Col span={4}>\r\n            <Radio key={data?.value} {...(data ?? {})}>\r\n              {data?.label}\r\n            </Radio>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    )}\r\n  </Radio.CustomRadio>\r\n);\r\n",renderChildren:()=>u.createElement(Dt,null)},{id:"ButtonRadio",name:"ButtonRadio",mode:"code",scope:{React:u},cardProps:{description:{title:"ButtonRadio",info:"Button的RadioGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Radio.ButtonRadio\r\n    options={Array.from({ length: 26 }).map((t, _index) => {\r\n      const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n      return {\r\n        label: letter,\r\n        value: letter,\r\n      };\r\n    })}\r\n  />\r\n);\r\n",renderChildren:()=>u.createElement(Ot,null)},{id:"RadioSelect",name:"RadioSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"RadioSelect",info:"Radio的Select"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Radio.RadioSelect\n      placeholder=\"A-Z\"\n      className={styles.Wrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\n      value={value}\n      onChange={setValue}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          label: letter,\n          value: letter,\n        };\n      })}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Nt,null)},{id:"CustomRadioSelect",name:"CustomRadioSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CustomRadioSelect",info:"自定义Radio的Select"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Col, Radio, Row } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Radio.CustomRadioSelect\n      className={styles.Wrapper1}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\n      placeholder=\"A-Z\"\n      value={value}\n      onChange={setValue}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          label: letter,\n          value: letter,\n        };\n      })}\n    >\n      {(options) => (\n        <Row gutter={[16, 24]}>\n          {options.map(({ data }) => (\n            <Col span={4}>\n              <Radio key={data?.value} {...(data ?? {})}>\n                {data?.label}\n              </Radio>\n            </Col>\n          ))}\n        </Row>\n      )}\n    </Radio.CustomRadioSelect>\n  );\n};\n",renderChildren:()=>u.createElement(Ft,null)},{id:"ButtonRadioSelect",name:"ButtonRadioSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"ButtonRadioSelect",info:"ButtonRadioSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  return (\n    <Radio.ButtonRadioSelect\n      className={styles.Wrapper1}\n      placeholder=\"A-Z\"\n      value={value}\n      onChange={setValue}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          label: letter,\n          value: letter,\n        };\n      })}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Lt,null)},{id:"AutoCompleteRadioSelect",name:"AutoCompleteRadioSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteRadioSelect",info:"AutoCompleteRadioSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState(undefined);\n\n  return (\n    <Radio.AutoCompleteRadioSelect\n      placeholder=\"AutoCompleteRadioSelect\"\n      className={styles.FieldWrapper}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Rt,null)},{id:"AutoCompleteCustomRadioSelect",name:"AutoCompleteCustomRadioSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteCustomRadioSelect",info:"AutoCompleteCustomRadioSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Col, Radio, Row } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState(undefined);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Radio.AutoCompleteCustomRadioSelect\n      placeholder=\"AutoCompleteCustomRadioSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    >\n      {(options) => (\n        <Row gutter={[16, 24]}>\n          {options.map(({ data }) => (\n            <Col span={4}>\n              <Radio key={data?.value} {...(data ?? {})}>\n                {data?.label}\n              </Radio>\n            </Col>\n          ))}\n        </Row>\n      )}\n    </Radio.AutoCompleteCustomRadioSelect>\n  );\n};\n",renderChildren:()=>u.createElement(Vt,null)},{id:"AutoCompleteButtonRadioSelect",name:"AutoCompleteButtonRadioSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteButtonRadioSelect",info:"AutoCompleteButtonRadioSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState(undefined);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Radio.AutoCompleteButtonRadioSelect\n      placeholder=\"AutoCompleteButtonRadioSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    />\n  );\n};\n",renderChildren:()=>u.createElement(wt,null)}]}),u.createElement(p.Wc,{title:"CheckboxHOC",config:[{id:"Checkbox",name:"Checkbox",mode:"code",scope:{React:u},cardProps:{description:{title:"Checkbox",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => <Checkbox>男</Checkbox>;\r\n",renderChildren:()=>u.createElement(kn,null)},{id:"CheckboxSelect",name:"CheckboxSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckboxSelect",info:"CheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Checkbox.CheckboxSelect\n      placeholder=\"A-Z\"\n      className={styles.Wrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\n      value={value}\n      onChange={setValue}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          label: letter,\n          value: letter,\n        };\n      })}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(xn,null)},{id:"CustomCheckbox",name:"CustomCheckbox",mode:"code",scope:{React:u},cardProps:{description:{title:"CustomCheckbox",info:"自定义的Checkbox"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Checkbox.CustomCheckbox\r\n      value={value}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n      onChange={setValue}\r\n    >\r\n      {(options) => (\r\n        <Row gutter={[16, 24]}>\r\n          {options.map(({ data, onChange, checked, disabled }) => (\r\n            <Col span={4}>\r\n              <Checkbox\r\n                key={data?.value}\r\n                {...(data ?? {})}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={(e) => {\r\n                  onChange(e, data.value);\r\n                }}\r\n              >\r\n                {data?.label}\r\n              </Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Checkbox.CustomCheckbox>\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Pn,null)},{id:"CustomCheckAllCheckbox",name:"CustomCheckAllCheckbox",mode:"code",scope:{React:u},cardProps:{description:{title:"CustomCheckAllCheckbox",info:"CustomCheckAllCheckbox"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Checkbox.CustomCheckAllCheckbox\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n    >\r\n      {(options) => (\r\n        <Row gutter={[16, 24]}>\r\n          {options.map(({ data, onChange, checked, disabled }) => (\r\n            <Col span={4} key={data?.value}>\r\n              <Checkbox\r\n                {...(data ?? {})}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={(v) => {\r\n                  onChange(v, data.value);\r\n                }}\r\n              >\r\n                {data?.label}\r\n              </Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Checkbox.CustomCheckAllCheckbox>\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Sn,null)},{id:"CustomCheckboxSelect",name:"CustomCheckboxSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CustomCheckboxSelect",info:"CustomCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Checkbox.CustomCheckboxSelect\n      className={styles.Wrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\n      placeholder=\"A-Z\"\n      value={value}\n      onChange={setValue}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          label: letter,\n          value: letter,\n        };\n      })}\n    >\n      {(options) => (\n        <Row gutter={[16, 24]}>\n          {options.map(({ data, onChange, ...rest }) => (\n            <Col key={data?.value} span={4}>\n              <Checkbox\n                {...(data ?? {})}\n                {...rest}\n                onChange={(e) => {\n                  onChange(e, data.value);\n                }}\n              >\n                {data?.label}\n              </Checkbox>\n            </Col>\n          ))}\n        </Row>\n      )}\n    </Checkbox.CustomCheckboxSelect>\n  );\n};\n",renderChildren:()=>u.createElement(En,null)},{id:"HorizontalCheckbox",name:"HorizontalCheckbox",mode:"code",scope:{React:u},cardProps:{description:{title:"HorizontalCheckbox",info:"横向的Checkbox"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Checkbox.HorizontalCheckbox\r\n    options={[\r\n      {\r\n        label: '男',\r\n        value: '2',\r\n      },\r\n      {\r\n        label: '女',\r\n        value: '1',\r\n      },\r\n    ]}\r\n  />\r\n);\r\n",renderChildren:()=>u.createElement(wn,null)},{id:"HorizontalCheckAllCheckbox",name:"HorizontalCheckAllCheckbox",mode:"code",scope:{React:u},cardProps:{description:{title:"HorizontalCheckAllCheckbox",info:"HorizontalCheckAllCheckbox"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Checkbox.HorizontalCheckAllCheckbox\r\n      value={value}\r\n      onChange={setValue}\r\n      options={[\r\n        {\r\n          label: '男',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '女',\r\n          value: '1',\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(In,null)},{id:"VerticalCheckbox",name:"VerticalCheckbox",mode:"code",scope:{React:u},cardProps:{description:{title:"VerticalCheckbox",info:"竖向的Checkbox"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Checkbox.VerticalCheckbox\r\n    onChange={(v) => {\r\n      console.log('v', v);\r\n    }}\r\n    disabled\r\n    options={[\r\n      {\r\n        label: '男',\r\n        value: '2',\r\n        disabled: false,\r\n      },\r\n      {\r\n        label: '女',\r\n        value: '1',\r\n      },\r\n    ]}\r\n  />\r\n);\r\n",renderChildren:()=>u.createElement(Rn,null)},{id:"VerticalCheckAllCheckbox",name:"VerticalCheckAllCheckbox",mode:"code",scope:{React:u},cardProps:{description:{title:"VerticalCheckAllCheckbox",info:"VerticalCheckAllCheckbox"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Checkbox.VerticalCheckAllCheckbox\r\n      value={value}\r\n      onChange={setValue}\r\n      options={[\r\n        {\r\n          label: '男',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '女',\r\n          value: '1',\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Vn,null)},{id:"AutoCompleteCheckAllCheckboxSelect",name:"AutoCompleteCheckAllCheckboxSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteCheckAllCheckboxSelect",info:"AutoCompleteCheckAllCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Checkbox.AutoCompleteCheckAllCheckboxSelect\n      placeholder=\"AutoCompleteCheckAllCheckboxSelect111\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    />\n  );\n};\n",renderChildren:()=>u.createElement(gn,null)},{id:"AutoCompleteCheckAllCustomCheckboxSelect",name:"AutoCompleteCheckAllCustomCheckboxSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteCheckAllCustomCheckboxSelect",info:"AutoCompleteCheckAllCustomCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Checkbox.AutoCompleteCheckAllCustomCheckboxSelect\n      placeholder=\"AutoCompleteCheckAllCustomCheckboxSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    >\n      {(options) => (\n        <Row gutter={[16, 24]}>\n          {options.map(({ data, onChange, checked, disabled }) => (\n            <Col span={4} key={data?.value}>\n              <Checkbox\n                {...(data ?? {})}\n                checked={checked}\n                disabled={disabled}\n                onChange={(e) => {\n                  onChange(e, data.value);\n                }}\n              >\n                {data?.label}\n              </Checkbox>\n            </Col>\n          ))}\n        </Row>\n      )}\n    </Checkbox.AutoCompleteCheckAllCustomCheckboxSelect>\n  );\n};\n",renderChildren:()=>u.createElement(Cn,null)},{id:"AutoCompleteCheckboxSelect",name:"AutoCompleteCheckboxSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteCheckboxSelect",info:"AutoCompleteCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Checkbox.AutoCompleteCheckboxSelect\n      placeholder=\"AutoCompleteCheckboxSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          console.log('_kw', _kw);\n\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    />\n  );\n};\n",renderChildren:()=>u.createElement(yn,null)},{id:"AutoCompleteCustomCheckboxSelect",name:"AutoCompleteCustomCheckboxSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteCustomCheckboxSelect",info:"AutoCompleteCustomCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Checkbox.AutoCompleteCustomCheckboxSelect\n      placeholder=\"AutoCompleteCustomCheckboxSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    >\n      {(options) => (\n        <Row gutter={[16, 24]}>\n          {options.map(({ data, onChange, checked, disabled }) => (\n            <Col key={data?.value} span={4}>\n              <Checkbox\n                {...(data ?? {})}\n                checked={checked}\n                disabled={disabled}\n                onChange={(e) => {\n                  onChange(e, data.value);\n                }}\n              >\n                {data?.label}\n              </Checkbox>\n            </Col>\n          ))}\n        </Row>\n      )}\n    </Checkbox.AutoCompleteCustomCheckboxSelect>\n  );\n};\n",renderChildren:()=>u.createElement(vn,null)},{id:"CheckAllCheckboxSelect",name:"CheckAllCheckboxSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckAllCheckboxSelect",info:"CheckAllCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Checkbox.CheckAllCheckboxSelect\n      placeholder=\"A-Z\"\n      className={styles.Wrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\n      value={value}\n      onChange={setValue}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          label: letter,\n          value: letter,\n        };\n      })}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(bn,null)},{id:"CheckAllCustomCheckboxSelect",name:"CheckAllCustomCheckboxSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckAllCustomCheckboxSelect",info:"CheckAllCustomCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Checkbox.CheckAllCustomCheckboxSelect\n      className={styles.Wrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\n      placeholder=\"A-Z\"\n      value={value}\n      onChange={setValue}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          label: letter,\n          value: letter,\n        };\n      })}\n    >\n      {(options) => (\n        <Row gutter={[16, 24]}>\n          {options.map(({ data, onChange, checked, disabled }) => (\n            <Col key={data?.value} span={4}>\n              <Checkbox\n                {...(data ?? {})}\n                checked={checked}\n                disabled={disabled}\n                onChange={(v) => {\n                  onChange(v, data.value);\n                }}\n              >\n                {data?.label}\n              </Checkbox>\n            </Col>\n          ))}\n        </Row>\n      )}\n    </Checkbox.CheckAllCustomCheckboxSelect>\n  );\n};\n",renderChildren:()=>u.createElement(An,null)},{id:"CustomRenderCheckboxCheckAllPosition",name:"CustomRenderCheckboxCheckAllPosition",mode:"code",scope:{React:u},cardProps:{description:{title:"CustomRenderCheckboxCheckAllPosition",info:"自定义全选的位置，所有CheckAll都有render属性"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Checkbox.CheckAllCheckboxSelect\n      placeholder=\"A-Z\"\n      className={styles.Wrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\n      value={value}\n      onChange={setValue}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          label: letter,\n          value: letter,\n        };\n      })}\n      render={(checkAllOrigin, children) => (\n        <div>\n          <div>{children}</div>\n          <div>{checkAllOrigin}</div>\n        </div>\n      )}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Tn,null)}]}),u.createElement(p.Wc,{title:"TagHOC",config:[{id:"Tag",name:"Tag",mode:"code",scope:{React:u},cardProps:{description:{title:"Tag",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => <Tag>Tag 1</Tag>;\r\n",renderChildren:()=>u.createElement(Oa,null)},{id:"VerticalTagGroup",name:"VerticalTagGroup",mode:"code",scope:{React:u},cardProps:{description:{title:"VerticalTagGroup",info:"VerticalTagGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  return (\r\n    <Tag.VerticalTagGroup\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Ha,null)},{id:"VerticalCheckableTagGroup",name:"VerticalCheckableTagGroup",mode:"code",scope:{React:u},cardProps:{description:{title:"VerticalCheckableTagGroup",info:"VerticalCheckableTagGroup"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.VerticalCheckableTagGroup\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Fa,null)},{id:"VerticalCheckAllCheckableTagGroup",name:"VerticalCheckAllCheckableTagGroup",mode:"code",scope:{React:u},cardProps:{description:{title:"VerticalCheckAllCheckableTagGroup",info:"VerticalCheckAllCheckableTagGroup"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  return (\r\n    <Tag.VerticalCheckAllCheckableTagGroup\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Da,null)},{id:"HorizontalTagGroup",name:"HorizontalTagGroup",mode:"code",scope:{React:u},cardProps:{description:{title:"HorizontalTagGroup",info:"HorizontalTagGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  return (\r\n    <Tag.HorizontalTagGroup\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Ra,null)},{id:"HorizontalCheckableTagGroup",name:"HorizontalCheckableTagGroup",mode:"code",scope:{React:u},cardProps:{description:{title:"HorizontalCheckableTagGroup",info:"HorizontalCheckableTagGroup"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.HorizontalCheckableTagGroup\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Va,null)},{id:"HorizontalCheckAllCheckableTagGroup",name:"HorizontalCheckAllCheckableTagGroup",mode:"code",scope:{React:u},cardProps:{description:{title:"HorizontalCheckAllCheckableTagGroup",info:"HorizontalCheckAllCheckableTagGroup"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.HorizontalCheckAllCheckableTagGroup\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(wa,null)},{id:"TagSelect",name:"TagSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"TagSelect",info:"TagSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  return (\n    <Tag.TagSelect\n      mode=\"multiple\"\n      className={styles.Wrapper}\n      placeholder=\"A-Z\"\n      value={value}\n      onChange={(v) => {\n        setValue(v);\n      }}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          value: letter,\n          label: letter,\n          children: letter,\n        };\n      })}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(La,null)},{id:"CheckAllTagSelect",name:"CheckAllTagSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckAllTagSelect",info:"CheckAllTagSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  return (\n    <Tag.CheckAllTagSelect\n      className={styles.Wrapper}\n      placeholder=\"A-Z\"\n      value={value}\n      onChange={(v) => {\n        setValue(v);\n      }}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          value: letter,\n          label: letter,\n          children: letter,\n        };\n      })}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Ta,null)},{id:"AutoCompleteTagSelect",name:"AutoCompleteTagSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteTagSelect",info:"AutoCompleteTagSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState([]);\n\n  return (\n    <Tag.AutoCompleteTagSelect\n      placeholder=\"AutoCompleteTagSelect\"\n      mode=\"multiple\"\n      className={styles.FieldWrapper}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n                children: t.t,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n      // tagProps={{\n      //   mode: 'multiple',\n      // }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Ea,null)},{id:"AutoCompleteCheckAllTagSelect",name:"AutoCompleteCheckAllTagSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteCheckAllTagSelect",info:"AutoCompleteCheckAllTagSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState([]);\n\n  return (\n    <Tag.AutoCompleteCheckAllTagSelect\n      placeholder=\"AutoCompleteCheckAllTagSelect\"\n      className={styles.FieldWrapper}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n                children: t.t,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Pa,null)},{id:"CustomRenderTagCheckAllPosition",name:"CustomRenderTagCheckAllPosition",mode:"code",scope:{React:u},cardProps:{description:{title:"CustomRenderTagCheckAllPosition",info:"自定义全选的位置，所有CheckAll都有render属性"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  return (\n    <Tag.CheckAllTagSelect\n      className={styles.Wrapper}\n      placeholder=\"A-Z\"\n      value={value}\n      onChange={(v) => {\n        setValue(v);\n      }}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          value: letter,\n          label: letter,\n          children: letter,\n        };\n      })}\n      render={(checkAllOrigin, children) => (\n        <div>\n          <div>{children}</div>\n          <div>{checkAllOrigin}</div>\n        </div>\n      )}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Ia,null)}]}),u.createElement(p.Wc,{title:"ListHOC",config:[{id:"List",name:"List",mode:"code",scope:{React:u},cardProps:{description:{title:"List",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst data = [\r\n  {\r\n    title: 'Ant Design Title 1',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 2',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 3',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 4',\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  return (\r\n    <List\r\n      itemLayout=\"horizontal\"\r\n      dataSource={data}\r\n      renderItem={(item, index) => (\r\n        <List.Item>\r\n          <List.Item.Meta\r\n            avatar={\r\n              <Avatar src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`} />\r\n            }\r\n            title={<a href=\"https://ant.design\">{item.title}</a>}\r\n            description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n          />\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(ct,null)},{id:"RadioListSelect",name:"RadioListSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"RadioListSelect",info:"RadioListSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst data = [\n  {\n    title: 'Ant Design Title 1',\n  },\n  {\n    title: 'Ant Design Title 2',\n  },\n  {\n    title: 'Ant Design Title 3',\n  },\n  {\n    title: 'Ant Design Title 4',\n  },\n].map(({ title }) => ({\n  title,\n  label: title,\n  value: title,\n}));\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  return (\n    <List.ListSelect\n      className={styles.FieldWrapper}\n      placeholder=\"List\"\n      value={value}\n      onChange={setValue}\n      options={data}\n      listProps={{\n        itemLayout: 'horizontal',\n        renderItem: (item, index) => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={\n                <Avatar src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`} />\n              }\n              title={<a href=\"https://ant.design\">{item.title}</a>}\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n            />\n          </List.Item>\n        ),\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(ft,null)},{id:"RadioListPaging",name:"RadioListPaging",mode:"code",scope:{React:u},cardProps:{description:{title:"RadioListPaging",info:"RadioListPaging"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst data = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@cname');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n    title: label,\r\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: data.length,\r\n        data: data.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <List.ListPaging\r\n      value={value}\r\n      onChange={(_value) => {\r\n        console.log(_value);\r\n        setValue(_value);\r\n      }}\r\n      isSuspenseAsync={false}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      listPagingProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={<Avatar src={item.avatar} />}\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(mt,null)},{id:"RadioListPagingSelect",name:"RadioListPagingSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"RadioListPagingSelect",info:"RadioListPagingSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\nimport React, { useState } from 'react';\n\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst data = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock('@cname');\n  const value = Mock.mock('@guid');\n\n  return {\n    label,\n    value,\n    title: label,\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\n  };\n});\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  function loadData(page, limit) {\n    console.log('paging', page, limit);\n\n    return new Promise((resolve) => {\n      resolve({\n        totalCount: data.length,\n        data: data.slice((page - 1) * limit, page * limit),\n      });\n    });\n  }\n\n  return (\n    <List.ListPagingSelect\n      className={styles.FieldWrapper}\n      placeholder=\"RadioListPagingSelect\"\n      value={value}\n      onChange={setValue}\n      pagingProps={{\n        loadData,\n        defaultLimit: 5,\n      }}\n      listPagingProps={{\n        itemLayout: 'horizontal',\n        renderItem: (item, index) => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={<Avatar src={item.avatar} />}\n              title={<a href=\"https://ant.design\">{item.title}</a>}\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n            />\n          </List.Item>\n        ),\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(pt,null)},{id:"SuspenseListPaging",name:"SuspenseListPaging",mode:"code",scope:{React:u},cardProps:{description:{title:"SuspenseListPaging",info:"SuspenseListPaging"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst data = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@cname');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n    title: label,\r\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  function loadData(page, limit) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          totalCount: data.length,\r\n          data: data.slice((page - 1) * limit, page * limit),\r\n        });\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <List.ListPaging\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={setValue}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      listPagingProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={<Avatar src={item.avatar} />}\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Ct,null)},{id:"CheckboxListSelect",name:"CheckboxListSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckboxListSelect",info:"CheckboxListSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst data = [\n  {\n    title: 'Ant Design Title 1',\n  },\n  {\n    title: 'Ant Design Title 2',\n  },\n  {\n    title: 'Ant Design Title 3',\n  },\n  {\n    title: 'Ant Design Title 4',\n  },\n].map(({ title }) => ({\n  title,\n  label: title,\n  value: title,\n}));\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  return (\n    <List.ListSelect\n      mode=\"multiple\"\n      className={styles.FieldWrapper}\n      placeholder=\"List\"\n      value={value}\n      onChange={setValue}\n      options={data}\n      listProps={{\n        itemLayout: 'horizontal',\n        renderItem: (item, index) => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={\n                <Avatar src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`} />\n              }\n              title={<a href=\"https://ant.design\">{item.title}</a>}\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n            />\n          </List.Item>\n        ),\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(it,null)},{id:"CheckAllListSelect",name:"CheckAllListSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckAllListSelect",info:"CheckAllListSelect"}},type:"PlayGround",codeText:"import { Avatar } from 'antd';\nimport React, { useState } from 'react';\n\nimport { List } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst data = [\n  {\n    title: 'Ant Design Title 1',\n  },\n  {\n    title: 'Ant Design Title 2',\n  },\n  {\n    title: 'Ant Design Title 3',\n  },\n  {\n    title: 'Ant Design Title 4',\n  },\n].map(({ title }) => ({\n  title,\n  label: title,\n  value: title,\n}));\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  return (\n    <List.CheckAllListSelect\n      className={styles.FieldWrapper}\n      placeholder=\"List\"\n      value={value}\n      onChange={setValue}\n      options={data}\n      listProps={{\n        itemLayout: 'horizontal',\n        renderItem: (item, index) => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={\n                <Avatar src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`} />\n              }\n              title={<a href=\"https://ant.design\">{item.title}</a>}\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n            />\n          </List.Item>\n        ),\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(nt,null)},{id:"CheckboxListPaging",name:"CheckboxListPaging",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckboxListPaging",info:"CheckboxListPaging"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst data = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@cname');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n    title: label,\r\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  function loadData(page, limit) {\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: data.length,\r\n        data: data.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <List.ListPaging\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={setValue}\r\n      isSuspenseAsync={false}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      listPagingProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={<Avatar src={item.avatar} />}\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(at,null)},{id:"CheckboxListPagingSelect",name:"CheckboxListPagingSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckboxListPagingSelect",info:"CheckboxListPagingSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\nimport React, { useState } from 'react';\n\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst data = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock('@cname');\n  const value = Mock.mock('@guid');\n\n  return {\n    label,\n    value,\n    title: label,\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\n  };\n});\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  function loadData(page, limit) {\n    return new Promise((resolve) => {\n      resolve({\n        totalCount: data.length,\n        data: data.slice((page - 1) * limit, page * limit),\n      });\n    });\n  }\n\n  return (\n    <List.ListPagingSelect\n      mode=\"multiple\"\n      className={styles.FieldWrapper}\n      placeholder=\"CheckboxListPagingSelect\"\n      value={value}\n      onChange={setValue}\n      pagingProps={{\n        loadData,\n        defaultLimit: 5,\n      }}\n      listPagingProps={{\n        itemLayout: 'horizontal',\n        renderItem: (item, index) => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={<Avatar src={item.avatar} />}\n              title={<a href=\"https://ant.design\">{item.title}</a>}\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n            />\n          </List.Item>\n        ),\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(lt,null)},{id:"AutoCompleteCheckAllListSelect",name:"AutoCompleteCheckAllListSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteCheckAllListSelect",info:"AutoCompleteCheckAllListSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { List } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <List.AutoCompleteCheckAllListSelect\n      placeholder=\"AutoCompleteCheckAllListSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n      listProps={{\n        itemLayout: 'horizontal',\n        renderItem: (item) => (\n          <List.Item>\n            <List.Item.Meta title={item.title} description={item.label} />\n          </List.Item>\n        ),\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement($n,null)},{id:"AutoCompleteListPagingSelect",name:"AutoCompleteListPagingSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteListPagingSelect",info:"AutoCompleteListPagingSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\nimport React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { List } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst data = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock('@cname');\n  const value = Mock.mock('@guid');\n\n  return {\n    label,\n    value,\n    title: label,\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\n  };\n});\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  function loadData(page, limit, _kw) {\n    return new Promise((resolve) => {\n      const result = !_kw ? [] : data.filter(({ label }) => label.indexOf(_kw) !== -1);\n\n      resolve({\n        totalCount: result.length,\n        data: result.slice((page - 1) * limit, page * limit),\n      });\n    });\n  }\n\n  return (\n    <List.AutoCompleteListPagingSelect\n      mode=\"multiple\"\n      placeholder=\"AutoCompleteListPagingSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      onChange={setValue}\n      pagingProps={{\n        loadData,\n        defaultLimit: 5,\n      }}\n      listPagingProps={{\n        itemLayout: 'horizontal',\n        renderItem: (item) => (\n          <List.Item>\n            <List.Item.Meta title={item.title} description={item.label} />\n          </List.Item>\n        ),\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Qn,null)},{id:"AutoCompleteListSelect",name:"AutoCompleteListSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteListSelect",info:"AutoCompleteListSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { List } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nimport styles from '../examples.less';\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState(undefined);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <List.AutoCompleteListSelect\n      placeholder=\"AutoCompleteListSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          console.log('_kw', _kw);\n\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...Book]\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\n              .map((t) => ({\n                label: t.t,\n                value: t.id,\n              }));\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n      listProps={{\n        itemLayout: 'horizontal',\n        renderItem: (item) => (\n          <List.Item>\n            <List.Item.Meta title={item.title} description={item.label} />\n          </List.Item>\n        ),\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Xn,null)}]}),u.createElement(p.Wc,{title:"TableHOC",config:[{id:"Table",name:"Table",mode:"code",scope:{React:u},cardProps:{description:{title:"Table",info:"使用了默认配置"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => ({\r\n  id: Mock.mock('@guid'),\r\n  name: Mock.mock('@name'),\r\n  address: Mock.mock('@region'),\r\n  height: Mock.mock('@integer(60, 100)'),\r\n  width: Mock.mock('@integer(60, 100)'),\r\n  nativePlace: Mock.mock('@city'),\r\n}));\r\n\r\nexport default () => {\r\n  return (\r\n    <Table\r\n      columns={[\r\n        {\r\n          title: '名称',\r\n          key: 'name',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: '地址',\r\n          key: 'address',\r\n          dataIndex: 'address',\r\n        },\r\n        {\r\n          title: '籍贯',\r\n          key: 'nativePlace',\r\n          dataIndex: 'nativePlace',\r\n        },\r\n        {\r\n          title: '身高',\r\n          key: 'height',\r\n          dataIndex: 'height',\r\n        },\r\n        {\r\n          title: '体重',\r\n          key: 'width',\r\n          dataIndex: 'width',\r\n        },\r\n      ]}\r\n      dataSource={dataSource}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Sa,null)},{id:"SuspenseTablePaging",name:"SuspenseTablePaging",mode:"code",scope:{React:u},cardProps:{description:{title:"SuspenseTablePaging",info:"SuspenseTablePaging"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          totalCount: dataSource.length,\r\n          data: dataSource.slice((page - 1) * limit, page * limit),\r\n        });\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table.TablePaging\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={setValue}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      tablePagingProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(ka,null)},{id:"RadioTableSelect",name:"RadioTableSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"RadioTableSelect",info:"RadioTableSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\nimport React, { useState } from 'react';\n\nimport { Table } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst dataSource = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock('@name');\n  const value = Mock.mock('@guid');\n\n  return {\n    id: value,\n    name: label,\n    address: Mock.mock('@region'),\n    height: Mock.mock('@integer(60, 100)'),\n    width: Mock.mock('@integer(60, 100)'),\n    nativePlace: Mock.mock('@city'),\n    label,\n    value,\n  };\n});\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  return (\n    <Table.TableSelect\n      className={styles.FieldWrapper}\n      placeholder=\"TableSelect\"\n      value={value}\n      onChange={setValue}\n      options={dataSource}\n      tableProps={{\n        rowKey: 'id',\n        columns: [\n          {\n            title: '名称',\n            key: 'name',\n            dataIndex: 'name',\n          },\n          {\n            title: '地址',\n            key: 'address',\n            dataIndex: 'address',\n          },\n          {\n            title: '籍贯',\n            key: 'nativePlace',\n            dataIndex: 'nativePlace',\n          },\n          {\n            title: '身高',\n            key: 'height',\n            dataIndex: 'height',\n          },\n          {\n            title: '体重',\n            key: 'width',\n            dataIndex: 'width',\n          },\n        ],\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(ba,null)},{id:"RadioTablePagingSelect",name:"RadioTablePagingSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"RadioTablePagingSelect",info:"RadioTablePagingSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\nimport React, { useState } from 'react';\n\nimport { Table } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst dataSource = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock('@name');\n  const value = Mock.mock('@guid');\n\n  return {\n    id: value,\n    name: label,\n    address: Mock.mock('@region'),\n    height: Mock.mock('@integer(60, 100)'),\n    width: Mock.mock('@integer(60, 100)'),\n    nativePlace: Mock.mock('@city'),\n    label,\n    value,\n  };\n});\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  function loadData(page, limit) {\n    console.log('paging', page, limit);\n\n    return new Promise((resolve) => {\n      resolve({\n        totalCount: dataSource.length,\n        data: dataSource.slice((page - 1) * limit, page * limit),\n      });\n    });\n  }\n\n  return (\n    <Table.TablePagingSelect\n      className={styles.FieldWrapper}\n      placeholder=\"RadioPagingList\"\n      value={value}\n      onChange={setValue}\n      pagingProps={{\n        loadData,\n        defaultLimit: 5,\n      }}\n      tablePagingProps={{\n        rowKey: 'id',\n        columns: [\n          {\n            title: '名称',\n            key: 'name',\n            dataIndex: 'name',\n          },\n          {\n            title: '地址',\n            key: 'address',\n            dataIndex: 'address',\n          },\n          {\n            title: '籍贯',\n            key: 'nativePlace',\n            dataIndex: 'nativePlace',\n          },\n          {\n            title: '身高',\n            key: 'height',\n            dataIndex: 'height',\n          },\n          {\n            title: '体重',\n            key: 'width',\n            dataIndex: 'width',\n          },\n        ],\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(ya,null)},{id:"RadioTablePaging",name:"RadioTablePaging",mode:"code",scope:{React:u},cardProps:{description:{title:"RadioTablePaging",info:"RadioTablePaging"}},type:"PlayGround",codeText:c,renderChildren:()=>u.createElement(ga,null)},{id:"RadioTablePaging",name:"RadioTablePaging",mode:"code",scope:{React:u},cardProps:{description:{title:"RadioTablePaging",info:"RadioTablePaging"}},type:"PlayGround",codeText:c,renderChildren:()=>u.createElement(ga,null)},{id:"CheckboxTableSelect",name:"CheckboxTableSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckboxTableSelect",info:"CheckboxTableSelect"}},type:"PlayGround",codeText:s,renderChildren:()=>u.createElement(ha,null)},{id:"CheckboxTablePagingSelect",name:"CheckboxTablePagingSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckboxTablePagingSelect",info:"CheckboxTablePagingSelect"}},type:"PlayGround",codeText:s,renderChildren:()=>u.createElement(ha,null)},{id:"CheckboxTablePaging",name:"CheckboxTablePaging",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckboxTablePaging",info:"CheckboxTablePaging"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: dataSource.length,\r\n        data: dataSource.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table.TablePaging\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={setValue}\r\n      isSuspenseAsync={false}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      tablePagingProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(ua,null)},{id:"AutoCompleteTableSelect",name:"AutoCompleteTableSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteTableSelect",info:"AutoCompleteTableSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\nimport React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Table } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst dataSource = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock('@name');\n  const value = Mock.mock('@guid');\n\n  return {\n    id: value,\n    name: label,\n    address: Mock.mock('@region'),\n    height: Mock.mock('@integer(60, 100)'),\n    width: Mock.mock('@integer(60, 100)'),\n    nativePlace: Mock.mock('@city'),\n    label,\n    value,\n  };\n});\n\nexport default () => {\n  const [options, setOptions] = useState([]);\n\n  const [value, setValue] = useState(undefined);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  return (\n    <Table.AutoCompleteTableSelect\n      // mode=\"multiple\"\n      placeholder=\"AutoCompleteTableSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      options={options}\n      onChange={setValue}\n      loadData={(_kw) =>\n        new Promise((resolve) => {\n          if (!_kw) {\n            setOptions([]);\n            resolve();\n            return;\n          }\n\n          setTimeout(() => {\n            const result = [...dataSource].filter((_record) => _record.label.indexOf(_kw) !== -1);\n\n            setOptions(result);\n\n            resolve();\n          }, 500);\n        })\n      }\n      tableProps={{\n        rowKey: 'id',\n        columns: [\n          {\n            title: '名称',\n            key: 'name',\n            dataIndex: 'name',\n          },\n          {\n            title: '地址',\n            key: 'address',\n            dataIndex: 'address',\n          },\n          {\n            title: '籍贯',\n            key: 'nativePlace',\n            dataIndex: 'nativePlace',\n          },\n          {\n            title: '身高',\n            key: 'height',\n            dataIndex: 'height',\n          },\n          {\n            title: '体重',\n            key: 'width',\n            dataIndex: 'width',\n          },\n        ],\n        pagination: false,\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(da,null)},{id:"AutoCompleteTablePagingSelect",name:"AutoCompleteTablePagingSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteTablePagingSelect",info:"AutoCompleteTablePagingSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\nimport React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Table } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../examples.less';\n\nconst dataSource = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock('@name');\n  const value = Mock.mock('@guid');\n\n  return {\n    id: value,\n    name: label,\n    address: Mock.mock('@region'),\n    height: Mock.mock('@integer(60, 100)'),\n    width: Mock.mock('@integer(60, 100)'),\n    nativePlace: Mock.mock('@city'),\n    label,\n    value,\n  };\n});\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  function loadData(page, limit, _kw) {\n    console.log(page, limit, _kw);\n    return new Promise((resolve) => {\n      const result = !_kw ? [] : dataSource.filter(({ label }) => label.indexOf(_kw) !== -1);\n\n      resolve({\n        totalCount: result.length,\n        data: result.slice((page - 1) * limit, page * limit),\n      });\n    });\n  }\n\n  return (\n    <Table.AutoCompleteTablePagingSelect\n      mode=\"multiple\"\n      placeholder=\"AutoCompleteTablePagingSelect\"\n      className={styles.FieldWrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      onChange={setValue}\n      pagingProps={{\n        loadData,\n        defaultLimit: 5,\n      }}\n      tablePagingProps={{\n        rowKey: 'id',\n        columns: [\n          {\n            title: '名称',\n            key: 'name',\n            dataIndex: 'name',\n          },\n          {\n            title: '地址',\n            key: 'address',\n            dataIndex: 'address',\n          },\n          {\n            title: '籍贯',\n            key: 'nativePlace',\n            dataIndex: 'nativePlace',\n          },\n          {\n            title: '身高',\n            key: 'height',\n            dataIndex: 'height',\n          },\n          {\n            title: '体重',\n            key: 'width',\n            dataIndex: 'width',\n          },\n        ],\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(sa,null)}]}),u.createElement(p.Wc,{title:"TreeSelectHOC",config:[{id:"TreeSelect",name:"TreeSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"TreeSelect",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nconst treeData = [\n  {\n    value: 'parent 1',\n    title: 'parent 1',\n    children: [\n      {\n        value: 'parent 1-0',\n        title: 'parent 1-0',\n        children: [\n          {\n            value: 'leaf1',\n            title: 'leaf1',\n          },\n          {\n            value: 'leaf2',\n            title: 'leaf2',\n          },\n        ],\n      },\n      {\n        value: 'parent 1-1',\n        title: 'parent 1-1',\n        children: [\n          {\n            value: 'leaf3',\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nexport default () => {\n  const [value, setValue] = useState();\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  const onChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TreeSelect\n      value={value}\n      className={styles.Wrapper1}\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\n      placeholder=\"Please select\"\n      treeDefaultExpandAll\n      onChange={onChange}\n      treeData={treeData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Dr,null)},{id:"TreeMultiSelect",name:"TreeMultiSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"TreeMultiSelect",info:"TreeMultiSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nconst treeData = [\n  {\n    value: 'parent 1',\n    title: 'parent 1',\n    children: [\n      {\n        value: 'parent 1-0',\n        title: 'parent 1-0',\n        children: [\n          {\n            value: 'leaf1',\n            title: 'leaf1',\n          },\n          {\n            value: 'leaf2',\n            title: 'leaf2',\n          },\n        ],\n      },\n      {\n        value: 'parent 1-1',\n        title: 'parent 1-1',\n        children: [\n          {\n            value: 'leaf3',\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nexport default () => {\n  const [value, setValue] = useState();\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  const onChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TreeSelect.TreeMultiSelect\n      value={value}\n      className={styles.Wrapper1}\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\n      placeholder=\"Please select\"\n      treeDefaultExpandAll\n      onChange={onChange}\n      treeData={treeData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Or,null)},{id:"TreeMultiLeafSelect",name:"TreeMultiLeafSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"TreeMultiLeafSelect",info:"TreeMultiLeafSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nconst treeData = [\n  {\n    value: 'parent 1',\n    title: 'parent 1',\n    children: [\n      {\n        value: 'parent 1-0',\n        title: 'parent 1-0',\n        children: [\n          {\n            value: 'leaf1',\n            title: 'leaf1',\n          },\n          {\n            value: 'leaf2',\n            title: 'leaf2',\n          },\n        ],\n      },\n      {\n        value: 'parent 1-1',\n        title: 'parent 1-1',\n        children: [\n          {\n            value: 'leaf3',\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nexport default () => {\n  const [value, setValue] = useState();\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  const onChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TreeSelect.TreeMultiLeafSelect\n      value={value}\n      className={styles.Wrapper1}\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\n      placeholder=\"Please select\"\n      treeDefaultExpandAll\n      onChange={onChange}\n      treeData={treeData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Vr,null)},{id:"TreeLeafSelect",name:"TreeLeafSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"TreeLeafSelect",info:"TreeLeafSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nconst treeData = [\n  {\n    value: 'parent 1',\n    title: 'parent 1',\n    children: [\n      {\n        value: 'parent 1-0',\n        title: 'parent 1-0',\n        children: [\n          {\n            value: 'leaf1',\n            title: 'leaf1',\n          },\n          {\n            value: 'leaf2',\n            title: 'leaf2',\n          },\n        ],\n      },\n      {\n        value: 'parent 1-1',\n        title: 'parent 1-1',\n        children: [\n          {\n            value: 'leaf3',\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nexport default () => {\n  const [value, setValue] = useState();\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  const onChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TreeSelect.TreeLeafSelect\n      value={value}\n      className={styles.Wrapper1}\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\n      placeholder=\"Please select\"\n      treeDefaultExpandAll\n      onChange={onChange}\n      treeData={treeData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Ir,null)},{id:"TreeCheckedShowParentSelect",name:"TreeCheckedShowParentSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"TreeCheckedShowParentSelect",info:"TreeCheckedShowParentSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nconst treeData = [\n  {\n    value: 'parent 1',\n    title: 'parent 1',\n    children: [\n      {\n        value: 'parent 1-0',\n        title: 'parent 1-0',\n        children: [\n          {\n            value: 'leaf1',\n            title: 'leaf1',\n          },\n          {\n            value: 'leaf2',\n            title: 'leaf2',\n          },\n        ],\n      },\n      {\n        value: 'parent 1-1',\n        title: 'parent 1-1',\n        children: [\n          {\n            value: 'leaf3',\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nexport default () => {\n  const [value, setValue] = useState();\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  const onChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TreeSelect.TreeCheckedShowParentSelect\n      value={value}\n      className={styles.Wrapper1}\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\n      placeholder=\"Please select\"\n      treeDefaultExpandAll\n      onChange={onChange}\n      treeData={treeData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Er,null)},{id:"TreeCheckedShowChildSelect",name:"TreeCheckedShowChildSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"TreeCheckedShowChildSelect",info:"TreeCheckedShowChildSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nconst treeData = [\n  {\n    value: 'parent 1',\n    title: 'parent 1',\n    children: [\n      {\n        value: 'parent 1-0',\n        title: 'parent 1-0',\n        children: [\n          {\n            value: 'leaf1',\n            title: 'leaf1',\n          },\n          {\n            value: 'leaf2',\n            title: 'leaf2',\n          },\n        ],\n      },\n      {\n        value: 'parent 1-1',\n        title: 'parent 1-1',\n        children: [\n          {\n            value: 'leaf3',\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nexport default () => {\n  const [value, setValue] = useState();\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  const onChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TreeSelect.TreeCheckedShowChildSelect\n      value={value}\n      className={styles.Wrapper1}\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\n      placeholder=\"Please select\"\n      treeDefaultExpandAll\n      onChange={onChange}\n      treeData={treeData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Sr,null)},{id:"TreeCheckedShowAllSelect",name:"TreeCheckedShowAllSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"TreeCheckedShowAllSelect",info:"TreeCheckedShowAllSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from '../Cascader/index.less';\n\nconst treeData = [\n  {\n    value: 'parent 1',\n    title: 'parent 1',\n    children: [\n      {\n        value: 'parent 1-0',\n        title: 'parent 1-0',\n        children: [\n          {\n            value: 'leaf1',\n            title: 'leaf1',\n          },\n          {\n            value: 'leaf2',\n            title: 'leaf2',\n          },\n        ],\n      },\n      {\n        value: 'parent 1-1',\n        title: 'parent 1-1',\n        children: [\n          {\n            value: 'leaf3',\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nexport default () => {\n  const [value, setValue] = useState();\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  const onChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TreeSelect.TreeCheckedShowAllSelect\n      value={value}\n      className={styles.Wrapper1}\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\n      placeholder=\"Please select\"\n      treeDefaultExpandAll\n      onChange={onChange}\n      treeData={treeData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(kr,null)},{id:"FlatTreeSelect",name:"FlatTreeSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"FlatTreeSelect",info:"FlatTreeSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nconst treeData = [\n  ...Province.map((t) => ({\n    title: t.name,\n    label: t.name,\n    value: t.id,\n    id: t.id,\n    isLeaf: false,\n    pId: 0,\n  })),\n  ...Object.keys(City)\n    .map((key) =>\n      City[key].map((t) => ({\n        title: t.name,\n        label: t.name,\n        value: t.id,\n        id: t.id,\n        isLeaf: false,\n        pId: `${key}`,\n      })),\n    )\n    .flat(),\n  ...Object.keys(County)\n    .map((key) =>\n      County[key].map((t) => ({\n        title: t.name,\n        label: t.name,\n        value: t.id,\n        id: t.id,\n        isLeaf: true,\n        pId: key,\n      })),\n    )\n    .flat(),\n];\n\nexport default () => {\n  const [value, setValue] = useState();\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  const onChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TreeSelect\n      className={styles.Wrapper}\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\n      value={value}\n      placeholder=\"Please select\"\n      treeDefaultExpandAll\n      onChange={onChange}\n      treeData={treeData}\n      treeDataSimpleMode\n    />\n  );\n};\n",renderChildren:()=>u.createElement(br,null)},{id:"FlatAsyncTreeSelect",name:"FlatAsyncTreeSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"FlatAsyncTreeSelect",info:"FlatAsyncTreeSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeSelect\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n      treeDataSimpleMode\n    />\n  );\n};\n",renderChildren:()=>u.createElement(yr,null)},{id:"FlatAsyncTreeMultiSelectEcho",name:"FlatAsyncTreeMultiSelectEcho",mode:"code",scope:{React:u},cardProps:{description:{title:"FlatAsyncTreeMultiSelectEcho",info:"FlatAsyncTreeMultiSelectEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState(['210102000000']);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  function fetchBranch(value, cascadeParams) {\n    return Promise.resolve([\n      {\n        title: '辽宁省',\n        value: '210000000000',\n        id: '210000000000',\n        pId: 0,\n        isLeaf: false,\n      },\n      {\n        title: '沈阳市',\n        value: '210100000000',\n        id: '210100000000',\n        pId: '210000000000',\n        isLeaf: false,\n      },\n      {\n        title: '和平区',\n        value: '210102000000',\n        id: '210102000000',\n        pId: '210100000000',\n        isLeaf: true,\n      },\n    ]);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeMultiSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeMultiSelect\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n      fetchBranch={fetchBranch}\n      treeDataSimpleMode\n    />\n  );\n};\n",renderChildren:()=>u.createElement(Cr,null)},{id:"AsyncTreeSelectEcho",name:"AsyncTreeSelectEcho",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeSelectEcho",info:"AsyncTreeSelectEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState('210102000000');\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  /**\n   * fetchBranch\n   * @description 初始化回显\n   * @param value\n   * @param cascadeParams\n   */\n  function fetchBranch(value, cascadeParams) {\n    return Promise.resolve([\n      {\n        title: '辽宁省',\n        value: '210000000000',\n        isLeaf: false,\n        children: [\n          {\n            title: '沈阳市',\n            value: '210100000000',\n            isLeaf: false,\n            children: [\n              {\n                title: '和平区',\n                value: '210102000000',\n                isLeaf: true,\n              },\n            ],\n          },\n        ],\n      },\n    ]);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeSelectEcho\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n      fetchBranch={fetchBranch}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(gr,null)},{id:"AsyncTreeSelect",name:"AsyncTreeSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeSelect",info:"AsyncTreeSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeSelect\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(fr,null)},{id:"AsyncTreeMultiSelectEcho",name:"AsyncTreeMultiSelectEcho",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeMultiSelectEcho",info:"AsyncTreeMultiSelectEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState(['230102000000', '210102000000']);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  /**\n   * fetchBranch\n   * @description 初始化回显\n   * @param value\n   * @param cascadeParams\n   */\n  function fetchBranch(value, cascadeParams) {\n    return Promise.resolve([\n      {\n        title: '辽宁省',\n        value: '210000000000',\n        isLeaf: false,\n        children: [\n          {\n            title: '沈阳市',\n            value: '210100000000',\n            isLeaf: false,\n            children: [\n              {\n                title: '和平区',\n                value: '210102000000',\n                isLeaf: true,\n              },\n            ],\n          },\n        ],\n      },\n      {\n        title: '黑龙江省',\n        value: '230000000000',\n        isLeaf: false,\n        children: [\n          {\n            title: '哈尔滨市',\n            value: '230100000000',\n            isLeaf: false,\n            children: [\n              {\n                title: '道里区',\n                value: '230102000000',\n                isLeaf: true,\n              },\n            ],\n          },\n        ],\n      },\n    ]);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeMultiSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeMultiSelectEcho\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n      fetchBranch={fetchBranch}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(hr,null)},{id:"AsyncTreeMultiSelect",name:"AsyncTreeMultiSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeMultiSelect",info:"AsyncTreeMultiSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeMultiSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeMultiSelect\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(pr,null)},{id:"AsyncTreeMultiLeafSelectEcho",name:"AsyncTreeMultiLeafSelectEcho",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeMultiLeafSelectEcho",info:"AsyncTreeMultiLeafSelectEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState(['230102000000', '210102000000']);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  /**\n   * fetchBranch\n   * @description 初始化回显\n   * @param value\n   * @param cascadeParams\n   */\n  function fetchBranch(value, cascadeParams) {\n    return Promise.resolve([\n      {\n        title: '辽宁省',\n        value: '210000000000',\n        isLeaf: false,\n        children: [\n          {\n            title: '沈阳市',\n            value: '210100000000',\n            isLeaf: false,\n            children: [\n              {\n                title: '和平区',\n                value: '210102000000',\n                isLeaf: true,\n              },\n            ],\n          },\n        ],\n      },\n      {\n        title: '黑龙江省',\n        value: '230000000000',\n        isLeaf: false,\n        children: [\n          {\n            title: '哈尔滨市',\n            value: '230100000000',\n            isLeaf: false,\n            children: [\n              {\n                title: '道里区',\n                value: '230102000000',\n                isLeaf: true,\n              },\n            ],\n          },\n        ],\n      },\n    ]);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeMultiLeafSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeMultiLeafSelectEcho\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n      fetchBranch={fetchBranch}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(ur,null)},{id:"AsyncTreeMultiLeafSelect",name:"AsyncTreeMultiLeafSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeMultiLeafSelect",info:"AsyncTreeMultiLeafSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeMultiLeafSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeMultiLeafSelect\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(mr,null)},{id:"AsyncTreeLeafSelect",name:"AsyncTreeLeafSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeLeafSelect",info:"AsyncTreeLeafSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeLeafSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeLeafSelect\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(dr,null)},{id:"AsyncTreeCheckedShowParentSelect",name:"AsyncTreeCheckedShowParentSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeCheckedShowParentSelect",info:"AsyncTreeCheckedShowParentSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeCheckedShowParentSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeCheckedShowParentSelect\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(cr,null)},{id:"AsyncTreeCheckedShowChildSelect",name:"AsyncTreeCheckedShowChildSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeCheckedShowChildSelect",info:"AsyncTreeCheckedShowChildSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeCheckedShowChildSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeCheckedShowChildSelect\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(sr,null)},{id:"AsyncTreeCheckedShowAllSelect",name:"AsyncTreeCheckedShowAllSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeCheckedShowAllSelect",info:"AsyncTreeCheckedShowAllSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from '../Cascader/index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          title: t.name,\n          label: t.name,\n          value: t.id,\n          id: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      title: t.name,\n      label: t.name,\n      value: t.id,\n      id: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  return (\n    <TreeSelect.AsyncTreeCheckedShowAllSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncTreeCheckedShowAllSelect\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(ir,null)}]}),u.createElement(p.Wc,{title:"CascaderHOC",config:[{id:"Cascader",name:"Cascader",mode:"code",scope:{React:u},cardProps:{description:{title:"Cascader",info:"Cascader"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const options = [\r\n    {\r\n      value: 'zhejiang',\r\n      label: 'Zhejiang',\r\n      children: [\r\n        {\r\n          value: 'hangzhou',\r\n          label: 'Hangzhou',\r\n          children: [\r\n            {\r\n              value: 'xihu',\r\n              label: 'West Lake',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      value: 'jiangsu',\r\n      label: 'Jiangsu',\r\n      children: [\r\n        {\r\n          value: 'nanjing',\r\n          label: 'Nanjing',\r\n          children: [\r\n            {\r\n              value: 'zhonghuamen',\r\n              label: 'Zhong Hua Men',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const onChange = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return <Cascader placeholder=\"Please select\" options={options} onChange={onChange} />;\r\n};\r\n",renderChildren:()=>u.createElement(sn,null)},{id:"AsyncCascader",name:"AsyncCascader",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncCascader",info:"AsyncCascader"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from './index.less';\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    console.log('pid', pid);\n\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          label: t.name,\n          value: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      label: t.name,\n      value: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  console.log('value', value);\n\n  return (\n    <Cascader.AsyncCascader\n      className={styles.Wrapper}\n      placeholder=\"AsyncCascader\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(nn,null)},{id:"AsyncCascaderChangeOnSelect",name:"AsyncCascaderChangeOnSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncCascaderChangeOnSelect",info:"AsyncCascaderChangeOnSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from './index.less';\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          label: t.name,\n          value: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      label: t.name,\n      value: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  console.log('value', value);\n\n  return (\n    <Cascader.AsyncCascaderChangeOnSelect\n      className={styles.Wrapper}\n      placeholder=\"AsyncCascaderChangeOnSelect\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(tn,null)},{id:"AsyncCascaderEcho",name:"AsyncCascaderEcho",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncCascaderEcho",info:"AsyncCascaderEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from './index.less';\n\nexport default () => {\n  const [value, setValue] = useState(['210000000000', '210100000000', '210102000000']);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          label: t.name,\n          value: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      label: t.name,\n      value: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  console.log('value', value);\n\n  return (\n    <Cascader.AsyncCascader\n      className={styles.Wrapper}\n      placeholder=\"AsyncCascader\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n      fetchBranch={(value, cascadeParams) => {\n        return Promise.resolve([\n          {\n            label: '辽宁省',\n            value: '210000000000',\n            isLeaf: false,\n            children: [\n              {\n                label: '沈阳市',\n                value: '210100000000',\n                isLeaf: false,\n                children: [\n                  {\n                    label: '和平区',\n                    value: '210102000000',\n                    isLeaf: true,\n                  },\n                ],\n              },\n            ],\n          },\n        ]);\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(an,null)},{id:"AsyncCascaderMulti",name:"AsyncCascaderMulti",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncCascaderMulti",info:"AsyncCascaderMulti"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from './index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          label: t.name,\n          value: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      label: t.name,\n      value: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  console.log('value', value);\n\n  return (\n    <Cascader.AsyncCascaderMulti\n      className={styles.Wrapper}\n      placeholder=\"AsyncCascaderMulti\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(rn,null)},{id:"AsyncCascaderMultiEcho",name:"AsyncCascaderMultiEcho",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncCascaderMultiEcho",info:"AsyncCascaderMultiEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from './index.less';\n\nexport default () => {\n  const [value, setValue] = useState([\n    ['210000000000', '210100000000', '210102000000'],\n    ['230000000000', '230100000000', '230102000000'],\n  ]);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          label: t.name,\n          value: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      label: t.name,\n      value: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  console.log('value', value);\n\n  return (\n    <Cascader.AsyncCascaderShowChild\n      className={styles.Wrapper}\n      placeholder=\"AsyncCascaderMulti\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n      fetchBranch={(value, cascadeParams) => {\n        return Promise.resolve([\n          {\n            label: '辽宁省',\n            value: '210000000000',\n            isLeaf: false,\n            children: [\n              {\n                label: '沈阳市',\n                value: '210100000000',\n                isLeaf: false,\n                children: [\n                  {\n                    label: '和平区',\n                    value: '210102000000',\n                    isLeaf: true,\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            label: '黑龙江省',\n            value: '230000000000',\n            isLeaf: false,\n            children: [\n              {\n                label: '哈尔滨市',\n                value: '230100000000',\n                isLeaf: false,\n                children: [\n                  {\n                    label: '道里区',\n                    value: '230102000000',\n                    isLeaf: true,\n                  },\n                ],\n              },\n            ],\n          },\n        ]);\n      }}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(ln,null)},{id:"AsyncCascaderShowChild",name:"AsyncCascaderShowChild",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncCascaderShowChild",info:"AsyncCascaderShowChild"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from './index.less';\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          label: t.name,\n          value: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      label: t.name,\n      value: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  console.log('value', value);\n\n  return (\n    <Cascader.AsyncCascaderShowChild\n      className={styles.Wrapper}\n      placeholder=\"AsyncCascaderShowChild\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(on,null)},{id:"CascaderChangeOnSelect",name:"CascaderChangeOnSelect",mode:"code",scope:{React:u},cardProps:{description:{title:"CascaderChangeOnSelect",info:"CascaderChangeOnSelect"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const options = [\r\n    {\r\n      value: 'zhejiang',\r\n      label: 'Zhejiang',\r\n      children: [\r\n        {\r\n          value: 'hangzhou',\r\n          label: 'Hangzhou',\r\n          children: [\r\n            {\r\n              value: 'xihu',\r\n              label: 'West Lake',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      value: 'jiangsu',\r\n      label: 'Jiangsu',\r\n      children: [\r\n        {\r\n          value: 'nanjing',\r\n          label: 'Nanjing',\r\n          children: [\r\n            {\r\n              value: 'zhonghuamen',\r\n              label: 'Zhong Hua Men',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const onChange = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <Cascader.CascaderChangeOnSelect\r\n      placeholder=\"Please select\"\r\n      options={options}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(cn,null)},{id:"CascaderMulti",name:"CascaderMulti",mode:"code",scope:{React:u},cardProps:{description:{title:"CascaderMulti",info:"CascaderMulti"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const options = [\r\n    {\r\n      label: 'Light',\r\n      value: 'light',\r\n      children: new Array(20).fill(null).map((_, index) => ({\r\n        label: `Number ${index}`,\r\n        value: index,\r\n      })),\r\n    },\r\n    {\r\n      label: 'Bamboo',\r\n      value: 'bamboo',\r\n      children: [\r\n        {\r\n          label: 'Little',\r\n          value: 'little',\r\n          children: [\r\n            {\r\n              label: 'Toy Fish',\r\n              value: 'fish',\r\n              disableCheckbox: true,\r\n            },\r\n            {\r\n              label: 'Toy Cards',\r\n              value: 'cards',\r\n            },\r\n            {\r\n              label: 'Toy Bird',\r\n              value: 'bird',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const onChange = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <Cascader.CascaderMulti placeholder=\"Please select\" options={options} onChange={onChange} />\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(dn,null)},{id:"CascaderShowChild",name:"CascaderShowChild",mode:"code",scope:{React:u},cardProps:{description:{title:"CascaderShowChild",info:"CascaderShowChild"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => {\n  const options = [\n    {\n      label: 'Light',\n      value: 'light',\n      children: new Array(20).fill(null).map((_, index) => ({\n        label: `Number ${index}`,\n        value: index,\n      })),\n    },\n    {\n      label: 'Bamboo',\n      value: 'bamboo',\n      children: [\n        {\n          label: 'Little',\n          value: 'little',\n          children: [\n            {\n              label: 'Toy Fish',\n              value: 'fish',\n              disableCheckbox: true,\n            },\n            {\n              label: 'Toy Cards',\n              value: 'cards',\n            },\n            {\n              label: 'Toy Bird',\n              value: 'bird',\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  const onChange = (value) => {\n    console.log(value);\n  };\n\n  return (\n    <Cascader.CascaderShowChild\n      className={styles.Wrapper1}\n      placeholder=\"Please select\"\n      options={options}\n      onChange={onChange}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(mn,null)},{id:"FlatAsyncCascader",name:"FlatAsyncCascader",mode:"code",scope:{React:u},cardProps:{description:{title:"FlatAsyncCascader",info:"FlatAsyncCascader"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from './index.less';\n\nexport default () => {\n  const [value, setValue] = useState(undefined);\n\n  /**\n   * fetchData\n   * @param pid\n   * @param cascadeParams\n   */\n  function fetchData(pid, cascadeParams) {\n    if (!pid) {\n      return Promise.resolve(\n        Province.map((t) => ({\n          label: t.name,\n          value: t.id,\n          pId: 0,\n          isLeaf: false,\n        })),\n      );\n    }\n\n    const countyIds = Object.keys(County)\n      .map((key) => County[key])\n      .flat()\n      .map((t) => t.id);\n\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\n      label: t.name,\n      value: t.id,\n      pId: pid,\n      isLeaf: countyIds.includes(t.id),\n    }));\n\n    return Promise.resolve(result);\n  }\n\n  return (\n    <Cascader.AsyncCascader\n      className={styles.Wrapper}\n      placeholder=\"AsyncCascader\"\n      value={value}\n      onChange={setValue}\n      fetchData={fetchData}\n      treeDataSimpleMode\n    />\n  );\n};\n",renderChildren:()=>u.createElement(un,null)},{id:"FlatCascader",name:"FlatCascader",mode:"code",scope:{React:u},cardProps:{description:{title:"FlatCascader",info:"FlatCascader"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nimport styles from './index.less';\n\nconst treeData = [\n  ...Province.map((t) => ({\n    title: t.name,\n    label: t.name,\n    value: t.id,\n    id: t.id,\n    isLeaf: false,\n    pId: 0,\n  })),\n  ...Object.keys(City)\n    .map((key) =>\n      City[key].map((t) => ({\n        title: t.name,\n        label: t.name,\n        value: t.id,\n        id: t.id,\n        isLeaf: false,\n        pId: `${key}`,\n      })),\n    )\n    .flat(),\n  ...Object.keys(County)\n    .map((key) =>\n      County[key].map((t) => ({\n        title: t.name,\n        label: t.name,\n        value: t.id,\n        id: t.id,\n        isLeaf: true,\n        pId: key,\n      })),\n    )\n    .flat(),\n];\n\nexport default () => {\n  const [value, setValue] = useState();\n\n  const onChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Cascader.CascaderMulti\n      className={styles.Wrapper}\n      value={value}\n      placeholder=\"Please select\"\n      onChange={onChange}\n      options={treeData}\n      treeDataSimpleMode\n    />\n  );\n};\n",renderChildren:()=>u.createElement(hn,null)}]}),u.createElement(p.Wc,{title:"AutoCompleteHOC",config:[{id:"AutoComplete",name:"AutoComplete",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoComplete",info:"AutoComplete"}},type:"PlayGround",codeText:"import React from 'react';\n\nimport { AutoComplete } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => (\n  <AutoComplete\n    // value={value}\n    options={Array.from({ length: 26 }).map((t, _index) => {\n      const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n      return {\n        label: letter,\n        value: 97 + _index,\n      };\n    })}\n    // style={{ width: 200 }}\n    className={styles.Wrapper}\n    onSelect={(v) => {\n      console.log('onSelect', v);\n    }}\n    onSearch={(v) => {\n      console.log('onSearch', v);\n    }}\n    onChange={(v) => {\n      console.log('onChange', v);\n    }}\n    placeholder=\"control mode\"\n  />\n);\n",renderChildren:()=>u.createElement(fe,null)},{id:"AutoCompleteSelectInput",name:"AutoCompleteSelectInput",mode:"code",scope:{React:u},cardProps:{description:{title:"AutoCompleteSelectInput",info:"AutoCompleteSelectInput"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\n\nimport { AutoComplete } from '@baifendian/adhere-ui-anthoc';\n\nimport styles from './index.less';\n\nexport default () => {\n  const [value, setValue] = useState({\n    inputValue: '',\n    selectValue: '',\n  });\n\n  return (\n    <AutoComplete.AutoCompleteSelectInput\n      placeholder=\"control mode\"\n      // style={{ width: 200 }}\n      className={styles.Wrapper}\n      value={value}\n      options={Array.from({ length: 26 }).map((t, _index) => {\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n        return {\n          label: letter,\n          value: `${97 + _index}`,\n        };\n      })}\n      onChange={setValue}\n    />\n  );\n};\n",renderChildren:()=>u.createElement(ge,null)}]}),u.createElement(p.Wc,{title:"ArrayEntityValueHOC",config:[{id:"SelectEntityValueHOC",name:"SelectEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"SelectEntityValueHOC",info:"Select获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport Mock from \'mockjs\';\r\nimport React, { useEffect } from \'react\';\r\nimport { useImmer } from \'use-immer\';\r\n\r\nimport {\r\n  ArrayEntityValueHOC,\r\n  Checkbox,\r\n  Form,\r\n  MultipleSelect,\r\n  Select,\r\n} from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport Book from \'@/mock/book\';\r\n\r\nconst options = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock(\'@name\');\r\n  const value = Mock.mock(\'@guid\');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [value3, setValue3] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const [value4, setValue4] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const [value5, setValue5] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    // 可以使用两种方式进行赋初值\r\n    form.setFieldValue(\'user\', [options[0], options[1].value]);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="user"\r\n        label="人员"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择人员\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Select placeholder="请选择人员" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="users1"\r\n        label="参与者1"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择参与者1\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <MultipleSelect placeholder="请选择参与者1" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="users2"\r\n        label="参与者2"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择参与者2\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <MultipleSelect.CheckAllSelect placeholder="请选择参与者2" options={options}>\r\n            {(props) => <Checkbox.Group {...props} />}\r\n          </MultipleSelect.CheckAllSelect>\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="users3"\r\n        label="参与者3"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择参与者3\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Select.AutoCompleteSelect\r\n            placeholder="请选择参与者3"\r\n            value={value3.value}\r\n            options={value3.options}\r\n            onChange={(_value) => {\r\n              setValue3((draft) => {\r\n                draft.value = _value;\r\n              });\r\n            }}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue3((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue3((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="users4"\r\n        label="参与者4"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择参与者4\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <MultipleSelect.AutoCompleteMultipleSelect\r\n            placeholder="请选择参与者4"\r\n            value={value4.value}\r\n            options={value4.options}\r\n            onChange={(_value) => {\r\n              setValue4((draft) => {\r\n                draft.value = _value;\r\n              });\r\n            }}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue4((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue4((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="users5"\r\n        label="参与者5"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择参与者5\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <MultipleSelect.AutoCompleteCheckAllMultipleSelect\r\n            placeholder="请选择参与者5"\r\n            value={value5.value}\r\n            options={value5.options}\r\n            onChange={(_value) => {\r\n              setValue5((draft) => {\r\n                draft.value = _value;\r\n              });\r\n            }}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue5((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue5((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          >\r\n            {(props) => <Checkbox.Group {...props} />}\r\n          </MultipleSelect.AutoCompleteCheckAllMultipleSelect>\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>u.createElement(Z,null)},{id:"RadioEntityValueHOC",name:"RadioEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"RadioEntityValueHOC",info:"Radio获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\nimport React, { useContext, useEffect } from \'react\';\nimport { useImmer } from \'use-immer\';\n\nimport { ConfigProvider, Util } from \'@baifendian/adhere\';\nimport { ArrayEntityValueHOC, Col, Form, Radio, Row } from \'@baifendian/adhere-ui-anthoc\';\n\nimport Book from \'@/mock/book\';\n\nconst options = Array.from({ length: 26 }).map((t, _index) => {\n  const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n  return {\n    label: letter,\n    value: letter,\n  };\n});\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  const [value5, setValue5] = useImmer({\n    options: [],\n    value: [],\n  });\n\n  const [value6, setValue6] = useImmer({\n    options: [],\n    value: [],\n  });\n\n  const [value7, setValue7] = useImmer({\n    options: [],\n    value: [],\n  });\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  useEffect(() => {}, []);\n\n  return (\n    <Form\n      form={form}\n      labelAlign="right"\n      labelCol={{ span: 3 }}\n      wrapperCol={{ span: 21 }}\n      onFinish={(values) => {\n        console.log(\'values\', values);\n        alert(JSON.stringify(values));\n      }}\n    >\n      <Form.Item\n        name="sex"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Radio.HorizontalRadio\n            options={[\n              {\n                label: \'男\',\n                value: 2,\n              },\n              {\n                label: \'女\',\n                value: 1,\n              },\n            ]}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="letter"\n        label="a-z"\n        rules={[\n          {\n            required: true,\n            message: \'请选择a-z\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Radio.RadioSelect placeholder="A-Z" options={options} />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="letter1"\n        label="a-z"\n        rules={[\n          {\n            required: true,\n            message: \'请选择a-z\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Radio.CustomRadio options={options}>\n            {(options) => (\n              <Row gutter={[16, 24]}>\n                {options.map(({ data }) => (\n                  <Col span={4}>\n                    <Radio key={data?.value} {...(data ?? {})}>\n                      {data?.label}\n                    </Radio>\n                  </Col>\n                ))}\n              </Row>\n            )}\n          </Radio.CustomRadio>\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="letter2"\n        label="a-z"\n        rules={[\n          {\n            required: true,\n            message: \'请选择a-z\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Radio.CustomRadioSelect\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\n              overflow: \'auto\',\n            }}\n            placeholder="A-Z"\n            options={options}\n          >\n            {(options) => (\n              <Row gutter={[16, 24]}>\n                {options.map(({ data }) => (\n                  <Col span={4}>\n                    <Radio key={data?.value} {...(data ?? {})}>\n                      {data?.label}\n                    </Radio>\n                  </Col>\n                ))}\n              </Row>\n            )}\n          </Radio.CustomRadioSelect>\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="letter3"\n        label="a-z"\n        rules={[\n          {\n            required: true,\n            message: \'请选择a-z\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Radio.ButtonRadio options={options} />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="letter4"\n        label="a-z"\n        rules={[\n          {\n            required: true,\n            message: \'请选择a-z\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Radio.ButtonRadioSelect placeholder="A-Z" options={options} />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="letter5"\n        label="a-z"\n        rules={[\n          {\n            required: true,\n            message: \'请选择a-z\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Radio.AutoCompleteRadioSelect\n            placeholder="AutoCompleteRadioSelect"\n            options={value5.options}\n            loadData={(_kw) =>\n              new Promise((resolve) => {\n                if (!_kw) {\n                  setValue5((draft) => {\n                    draft.options = [];\n                  });\n                  resolve();\n                  return;\n                }\n\n                setTimeout(() => {\n                  const result = [...Book]\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\n                    .map((t) => ({\n                      label: t.t,\n                      value: t.id,\n                    }));\n\n                  setValue5((draft) => {\n                    draft.options = result;\n                  });\n\n                  resolve();\n                }, 500);\n              })\n            }\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="letter6"\n        label="a-z"\n        rules={[\n          {\n            required: true,\n            message: \'请选择a-z\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Radio.AutoCompleteCustomRadioSelect\n            placeholder="AutoCompleteCustomRadioSelect"\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\n              overflow: \'auto\',\n            }}\n            options={value6.options}\n            loadData={(_kw) =>\n              new Promise((resolve) => {\n                if (!_kw) {\n                  setValue6((draft) => {\n                    draft.options = [];\n                  });\n                  resolve();\n                  return;\n                }\n\n                setTimeout(() => {\n                  const result = [...Book]\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\n                    .map((t) => ({\n                      label: t.t,\n                      value: t.id,\n                    }));\n\n                  setValue6((draft) => {\n                    draft.options = result;\n                  });\n\n                  resolve();\n                }, 500);\n              })\n            }\n          >\n            {(options) => (\n              <Row gutter={[16, 24]}>\n                {options.map(({ data }) => (\n                  <Col span={4}>\n                    <Radio key={data?.value} {...(data ?? {})}>\n                      {data?.label}\n                    </Radio>\n                  </Col>\n                ))}\n              </Row>\n            )}\n          </Radio.AutoCompleteCustomRadioSelect>\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="letter7"\n        label="a-z"\n        rules={[\n          {\n            required: true,\n            message: \'请选择a-z\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Radio.AutoCompleteButtonRadioSelect\n            placeholder="AutoCompleteButtonRadioSelect"\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\n              overflow: \'auto\',\n            }}\n            options={value7.options}\n            loadData={(_kw) =>\n              new Promise((resolve) => {\n                if (!_kw) {\n                  setValue7((draft) => {\n                    draft.options = [];\n                  });\n                  resolve();\n                  return;\n                }\n\n                setTimeout(() => {\n                  const result = [...Book]\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\n                    .map((t) => ({\n                      label: t.t,\n                      value: t.id,\n                    }));\n\n                  setValue7((draft) => {\n                    draft.options = result;\n                  });\n\n                  resolve();\n                }, 500);\n              })\n            }\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ span: 24 }}>\n        <Button htmlType="submit" block type="primary">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n',renderChildren:()=>u.createElement(j,null)},{id:"CheckboxEntityValueHOC",name:"CheckboxEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"CheckboxEntityValueHOC",info:"Checkbox获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\nimport React, { useContext, useEffect } from 'react';\nimport { useImmer } from 'use-immer';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { ArrayEntityValueHOC, Checkbox, Form } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nconst options = Array.from({ length: 26 }).map((t, _index) => {\n  const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n  return {\n    label: letter,\n    value: letter,\n  };\n});\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  const [value, setValue] = useImmer({\n    options: [],\n    value: [],\n  });\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  useEffect(() => {}, []);\n\n  return (\n    <Form\n      form={form}\n      labelAlign=\"right\"\n      labelCol={{ span: 3 }}\n      wrapperCol={{ span: 21 }}\n      onFinish={(values) => {\n        console.log('values', values);\n        alert(JSON.stringify(values));\n      }}\n    >\n      <Form.Item\n        name=\"sex\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Checkbox.VerticalCheckAllCheckbox\n            options={[\n              {\n                label: '男',\n                value: '2',\n              },\n              {\n                label: '女',\n                value: '1',\n              },\n            ]}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex1\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Checkbox.HorizontalCheckAllCheckbox\n            options={[\n              {\n                label: '男',\n                value: '2',\n              },\n              {\n                label: '女',\n                value: '1',\n              },\n            ]}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"letter1\"\n        label=\"a-z\"\n        rules={[\n          {\n            required: true,\n            message: '请选择a-z',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Checkbox.CheckboxSelect placeholder=\"A-Z\" options={options} />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"letter2\"\n        label=\"a-z\"\n        rules={[\n          {\n            required: true,\n            message: '请选择a-z',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Checkbox.CheckAllCheckboxSelect placeholder=\"A-Z\" options={options} />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"book\"\n        label=\"book\"\n        rules={[\n          {\n            required: true,\n            message: '请选择a-z',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Checkbox.AutoCompleteCheckboxSelect\n            placeholder=\"AutoCompleteCheckboxSelect\"\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\n              overflow: 'auto',\n            }}\n            options={value.options}\n            loadData={(_kw) =>\n              new Promise((resolve) => {\n                if (!_kw) {\n                  setValue((draft) => {\n                    draft.options = [];\n                  });\n                  resolve();\n                  return;\n                }\n\n                setTimeout(() => {\n                  const result = [...Book]\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\n                    .map((t) => ({\n                      label: t.t,\n                      value: t.id,\n                    }));\n\n                  setValue((draft) => {\n                    draft.options = result;\n                  });\n\n                  resolve();\n                }, 500);\n              })\n            }\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ span: 24 }}>\n        <Button htmlType=\"submit\" block type=\"primary\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n",renderChildren:()=>u.createElement(I,null)},{id:"TransferEntityValueHOC",name:"TransferEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"TransferEntityValueHOC",info:"Transfer获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useImmer } from 'use-immer';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { ArrayEntityValueHOC, Form, Transfer } from '@baifendian/adhere-ui-anthoc';\n\nimport Book from '@/mock/book';\n\nconst mockData = Array.from({\n  length: 20,\n}).map((_, i) => ({\n  key: i.toString(),\n  title: `content${i + 1}`,\n  description: `description of content${i + 1}`,\n}));\nconst initialTargetKeys = mockData.filter((item) => Number(item.key) > 10).map((item) => item.key);\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  const [value, setValue] = useImmer({\n    options: [],\n    value: [],\n  });\n\n  const [targetKeys, setTargetKeys] = useState([]);\n  const [selectedKeys, setSelectedKeys] = useState(initialTargetKeys);\n  const onChange = (nextTargetKeys, direction, moveKeys) => {\n    console.log('targetKeys:', nextTargetKeys);\n    console.log('direction:', direction);\n    console.log('moveKeys:', moveKeys);\n    setTargetKeys(nextTargetKeys);\n  };\n  const onSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\n    console.log('sourceSelectedKeys:', sourceSelectedKeys);\n    console.log('targetSelectedKeys:', targetSelectedKeys);\n    setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\n  };\n  const onScroll = (direction, e) => {\n    console.log('direction:', direction);\n    console.log('target:', e.target);\n  };\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  useEffect(() => {}, []);\n\n  return (\n    <Form\n      form={form}\n      labelAlign=\"right\"\n      labelCol={{ span: 3 }}\n      wrapperCol={{ span: 21 }}\n      onFinish={(values) => {\n        console.log('values', values);\n        alert(JSON.stringify(values));\n      }}\n    >\n      <Form.Item\n        name=\"sex\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Transfer\n            dataSource={mockData}\n            titles={['Source', 'Target']}\n            targetKeys={targetKeys}\n            selectedKeys={selectedKeys}\n            onChange={onChange}\n            onSelectChange={onSelectChange}\n            onScroll={onScroll}\n            render={(item) => item.title}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex1\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Transfer.TransferSelect\n            placeholder=\"A-Z\"\n            options={Array.from({ length: 26 }).map((t, _index) => {\n              const letter = String.fromCharCode(97 + _index).toUpperCase();\n\n              return {\n                label: letter,\n                value: letter,\n              };\n            })}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex2\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Transfer.AutoCompleteTransferSelect\n            placeholder=\"AutoCompleteTransferSelect\"\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\n              overflow: 'auto',\n            }}\n            options={value.options}\n            loadData={(_kw) =>\n              new Promise((resolve) => {\n                console.log('_kw', _kw);\n\n                if (!_kw) {\n                  setValue((draft) => {\n                    draft.options = [];\n                  });\n                  resolve();\n                  return;\n                }\n\n                setTimeout(() => {\n                  const result = [...Book]\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\n                    .map((t) => ({\n                      label: t.t,\n                      value: t.id,\n                    }));\n\n                  setValue((draft) => {\n                    draft.options = result;\n                  });\n\n                  resolve();\n                }, 500);\n              })\n            }\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ span: 24 }}>\n        <Button htmlType=\"submit\" block type=\"primary\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n",renderChildren:()=>u.createElement(re,null)},{id:"TagEntityValueHOC",name:"TagEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"TagEntityValueHOC",info:"Tag获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport React, { useEffect } from \'react\';\r\nimport { useImmer } from \'use-immer\';\r\n\r\nimport { ArrayEntityValueHOC, Form, Tag } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport Book from \'@/mock/book\';\r\n\r\nconst options = Array.from({ length: 26 }).map((t, _index) => {\r\n  const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n  return {\r\n    value: letter,\r\n    label: letter,\r\n    children: letter,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [value6, setValue6] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const [value7, setValue7] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.TagSelect mode="multiple" placeholder="A-Z" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex1"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.VerticalCheckableTagGroup mode="multiple" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex2"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.VerticalCheckAllCheckableTagGroup options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex3"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.CheckAllTagSelect placeholder="A-Z" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex4"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.HorizontalCheckableTagGroup mode="multiple" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex5"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.HorizontalCheckAllCheckableTagGroup options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex6"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.AutoCompleteTagSelect\r\n            placeholder="AutoCompleteTagSelect"\r\n            mode="multiple"\r\n            options={value6.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue6((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                      children: t.t,\r\n                    }));\r\n\r\n                  setValue6((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n            // tagProps={{\r\n            //   mode: \'multiple\',\r\n            // }}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex7"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.AutoCompleteCheckAllTagSelect\r\n            placeholder="AutoCompleteCheckAllTagSelect"\r\n            options={value7.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue7((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                      children: t.t,\r\n                    }));\r\n\r\n                  setValue7((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>u.createElement(ee,null)},{id:"ListEntityValueHOC",name:"ListEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"ListEntityValueHOC",info:"List获取实体数据"}},type:"PlayGround",codeText:'import React, { useContext, useEffect } from \'react\';\nimport { useImmer } from \'use-immer\';\n\nimport { ConfigProvider, Util } from \'@baifendian/adhere\';\nimport { ArrayEntityValueHOC, Avatar, Button, Form, List } from \'@baifendian/adhere-ui-anthoc\';\n\nimport Book from \'@/mock/book\';\n\nconst data = [\n  {\n    title: \'Ant Design Title 1\',\n  },\n  {\n    title: \'Ant Design Title 2\',\n  },\n  {\n    title: \'Ant Design Title 3\',\n  },\n  {\n    title: \'Ant Design Title 4\',\n  },\n].map(({ title }) => ({\n  title,\n  label: title,\n  value: title,\n}));\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  const [value3, setValue3] = useImmer({\n    options: [],\n    value: [],\n  });\n\n  const [value4, setValue4] = useImmer({\n    options: [],\n    value: [],\n  });\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  useEffect(() => {}, []);\n\n  return (\n    <Form\n      form={form}\n      labelAlign="right"\n      labelCol={{ span: 3 }}\n      wrapperCol={{ span: 21 }}\n      onFinish={(values) => {\n        console.log(\'values\', values);\n        alert(JSON.stringify(values));\n      }}\n    >\n      <Form.Item\n        name="sex"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <List.ListSelect\n            placeholder="List"\n            options={data}\n            listProps={{\n              itemLayout: \'horizontal\',\n              renderItem: (item, index) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={\n                      <Avatar\n                        src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`}\n                      />\n                    }\n                    title={<a href="https://ant.design">{item.title}</a>}\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\n                  />\n                </List.Item>\n              ),\n            }}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="sex1"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <List.ListSelect\n            mode="multiple"\n            placeholder="List"\n            options={data}\n            listProps={{\n              itemLayout: \'horizontal\',\n              renderItem: (item, index) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={\n                      <Avatar\n                        src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`}\n                      />\n                    }\n                    title={<a href="https://ant.design">{item.title}</a>}\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\n                  />\n                </List.Item>\n              ),\n            }}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="sex2"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <List.CheckAllListSelect\n            placeholder="List"\n            options={data}\n            listProps={{\n              itemLayout: \'horizontal\',\n              renderItem: (item, index) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={\n                      <Avatar\n                        src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`}\n                      />\n                    }\n                    title={<a href="https://ant.design">{item.title}</a>}\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\n                  />\n                </List.Item>\n              ),\n            }}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="sex3"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <List.AutoCompleteListSelect\n            placeholder="AutoCompleteListSelect"\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\n              overflow: \'auto\',\n            }}\n            options={value3.options}\n            loadData={(_kw) =>\n              new Promise((resolve) => {\n                console.log(\'_kw\', _kw);\n\n                if (!_kw) {\n                  setValue3((draft) => {\n                    draft.options = [];\n                  });\n                  resolve();\n                  return;\n                }\n\n                setTimeout(() => {\n                  const result = [...Book]\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\n                    .map((t) => ({\n                      label: t.t,\n                      value: t.id,\n                    }));\n\n                  setValue3((draft) => {\n                    draft.options = result;\n                  });\n\n                  resolve();\n                }, 500);\n              })\n            }\n            listProps={{\n              itemLayout: \'horizontal\',\n              renderItem: (item) => (\n                <List.Item>\n                  <List.Item.Meta title={item.title} description={item.label} />\n                </List.Item>\n              ),\n            }}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="sex4"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <List.AutoCompleteCheckAllListSelect\n            placeholder="AutoCompleteCheckAllListSelect"\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\n              overflow: \'auto\',\n            }}\n            options={value4.options}\n            loadData={(_kw) =>\n              new Promise((resolve) => {\n                if (!_kw) {\n                  setValue4((draft) => {\n                    draft.options = [];\n                  });\n                  resolve();\n                  return;\n                }\n\n                setTimeout(() => {\n                  const result = [...Book]\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\n                    .map((t) => ({\n                      label: t.t,\n                      value: t.id,\n                    }));\n\n                  setValue4((draft) => {\n                    draft.options = result;\n                  });\n\n                  resolve();\n                }, 500);\n              })\n            }\n            listProps={{\n              itemLayout: \'horizontal\',\n              renderItem: (item) => (\n                <List.Item>\n                  <List.Item.Meta title={item.title} description={item.label} />\n                </List.Item>\n              ),\n            }}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ span: 24 }}>\n        <Button htmlType="submit" block type="primary">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n',renderChildren:()=>u.createElement(H,null)},{id:"TableEntityValueHOC",name:"TableEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"TableEntityValueHOC",info:"Table获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\nimport Mock from 'mockjs';\nimport React, { useContext, useEffect } from 'react';\nimport { useImmer } from 'use-immer';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { ArrayEntityValueHOC, Form, Table } from '@baifendian/adhere-ui-anthoc';\n\nconst dataSource = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock('@name');\n  const value = Mock.mock('@guid');\n\n  return {\n    id: value,\n    name: label,\n    address: Mock.mock('@region'),\n    height: Mock.mock('@integer(60, 100)'),\n    width: Mock.mock('@integer(60, 100)'),\n    nativePlace: Mock.mock('@city'),\n    label,\n    value,\n  };\n});\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  const [value, setValue] = useImmer({\n    options: [],\n    value: [],\n  });\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  useEffect(() => {}, []);\n\n  return (\n    <Form\n      form={form}\n      labelAlign=\"right\"\n      labelCol={{ span: 3 }}\n      wrapperCol={{ span: 21 }}\n      onFinish={(values) => {\n        console.log('values', values);\n        alert(JSON.stringify(values));\n      }}\n    >\n      <Form.Item\n        name=\"sex\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Table.TableSelect\n            placeholder=\"TableSelect\"\n            options={dataSource}\n            tableProps={{\n              rowKey: 'id',\n              columns: [\n                {\n                  title: '名称',\n                  key: 'name',\n                  dataIndex: 'name',\n                },\n                {\n                  title: '地址',\n                  key: 'address',\n                  dataIndex: 'address',\n                },\n                {\n                  title: '籍贯',\n                  key: 'nativePlace',\n                  dataIndex: 'nativePlace',\n                },\n                {\n                  title: '身高',\n                  key: 'height',\n                  dataIndex: 'height',\n                },\n                {\n                  title: '体重',\n                  key: 'width',\n                  dataIndex: 'width',\n                },\n              ],\n            }}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex1\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Table.TableSelect\n            mode=\"multiple\"\n            placeholder=\"TableSelect\"\n            options={dataSource}\n            tableProps={{\n              rowKey: 'id',\n              columns: [\n                {\n                  title: '名称',\n                  key: 'name',\n                  dataIndex: 'name',\n                },\n                {\n                  title: '地址',\n                  key: 'address',\n                  dataIndex: 'address',\n                },\n                {\n                  title: '籍贯',\n                  key: 'nativePlace',\n                  dataIndex: 'nativePlace',\n                },\n                {\n                  title: '身高',\n                  key: 'height',\n                  dataIndex: 'height',\n                },\n                {\n                  title: '体重',\n                  key: 'width',\n                  dataIndex: 'width',\n                },\n              ],\n            }}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex2\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <ArrayEntityValueHOC>\n          <Table.AutoCompleteTableSelect\n            // mode=\"multiple\"\n            placeholder=\"AutoCompleteTableSelect\"\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\n              overflow: 'auto',\n            }}\n            options={value.options}\n            loadData={(_kw) =>\n              new Promise((resolve) => {\n                if (!_kw) {\n                  setValue((draft) => {\n                    draft.options = [];\n                  });\n                  resolve();\n                  return;\n                }\n\n                setTimeout(() => {\n                  const result = [...dataSource].filter(\n                    (_record) => _record.label.indexOf(_kw) !== -1,\n                  );\n\n                  setValue((draft) => {\n                    draft.options = result;\n                  });\n\n                  resolve();\n                }, 500);\n              })\n            }\n            tableProps={{\n              rowKey: 'id',\n              columns: [\n                {\n                  title: '名称',\n                  key: 'name',\n                  dataIndex: 'name',\n                },\n                {\n                  title: '地址',\n                  key: 'address',\n                  dataIndex: 'address',\n                },\n                {\n                  title: '籍贯',\n                  key: 'nativePlace',\n                  dataIndex: 'nativePlace',\n                },\n                {\n                  title: '身高',\n                  key: 'height',\n                  dataIndex: 'height',\n                },\n                {\n                  title: '体重',\n                  key: 'width',\n                  dataIndex: 'width',\n                },\n              ],\n              pagination: false,\n            }}\n          />\n        </ArrayEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ span: 24 }}>\n        <Button htmlType=\"submit\" block type=\"primary\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n",renderChildren:()=>u.createElement(Y,null)}]}),u.createElement(p.Wc,{title:"PagingEntityValueHOC",config:[{id:"ListPagingEntityValueHOC",name:"ListPagingEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"ListPagingEntityValueHOC",info:"List分页获取实体数据"}},type:"PlayGround",codeText:'import { Avatar, Button } from \'antd\';\nimport Mock from \'mockjs\';\nimport React, { useContext, useEffect } from \'react\';\n\nimport { ConfigProvider, Util } from \'@baifendian/adhere\';\nimport { Form, List, PagingEntityValueHOC } from \'@baifendian/adhere-ui-anthoc\';\n\nconst data = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock(\'@cname\');\n  const value = Mock.mock(\'@guid\');\n\n  return {\n    label,\n    value,\n    title: label,\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\n  };\n});\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  function loadData(page, limit) {\n    console.log(\'paging\', page, limit);\n\n    return new Promise((resolve) => {\n      resolve({\n        totalCount: data.length,\n        data: data.slice((page - 1) * limit, page * limit),\n      });\n    });\n  }\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  useEffect(() => {}, []);\n\n  return (\n    <Form\n      form={form}\n      labelAlign="right"\n      labelCol={{ span: 3 }}\n      wrapperCol={{ span: 21 }}\n      onFinish={(values) => {\n        console.log(\'values\', values);\n        alert(JSON.stringify(values));\n      }}\n    >\n      <Form.Item\n        name="sex"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <PagingEntityValueHOC>\n          <List.ListPaging\n            isSuspenseAsync={false}\n            pagingProps={{\n              loadData,\n              defaultLimit: 5,\n            }}\n            listPagingProps={{\n              itemLayout: \'horizontal\',\n              renderItem: (item, index) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={<Avatar src={item.avatar} />}\n                    title={<a href="https://ant.design">{item.title}</a>}\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\n                  />\n                </List.Item>\n              ),\n            }}\n          />\n        </PagingEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="sex1"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <PagingEntityValueHOC>\n          <List.ListPagingSelect\n            placeholder="RadioListPagingSelect"\n            pagingProps={{\n              loadData,\n              defaultLimit: 5,\n            }}\n            listPagingProps={{\n              itemLayout: \'horizontal\',\n              renderItem: (item, index) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={<Avatar src={item.avatar} />}\n                    title={<a href="https://ant.design">{item.title}</a>}\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\n                  />\n                </List.Item>\n              ),\n            }}\n          />\n        </PagingEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="sex2"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <PagingEntityValueHOC>\n          <List.ListPaging\n            mode="multiple"\n            isSuspenseAsync={false}\n            pagingProps={{\n              loadData,\n              defaultLimit: 5,\n            }}\n            listPagingProps={{\n              itemLayout: \'horizontal\',\n              renderItem: (item, index) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={<Avatar src={item.avatar} />}\n                    title={<a href="https://ant.design">{item.title}</a>}\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\n                  />\n                </List.Item>\n              ),\n            }}\n          />\n        </PagingEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="sex3"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <PagingEntityValueHOC>\n          <List.ListPagingSelect\n            mode="multiple"\n            placeholder="CheckboxListPagingSelect"\n            pagingProps={{\n              loadData,\n              defaultLimit: 5,\n            }}\n            listPagingProps={{\n              itemLayout: \'horizontal\',\n              renderItem: (item, index) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={<Avatar src={item.avatar} />}\n                    title={<a href="https://ant.design">{item.title}</a>}\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\n                  />\n                </List.Item>\n              ),\n            }}\n          />\n        </PagingEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name="sex4"\n        label="性别"\n        rules={[\n          {\n            required: true,\n            message: \'请选择性别\',\n          },\n        ]}\n      >\n        <PagingEntityValueHOC>\n          <List.AutoCompleteListPagingSelect\n            mode="multiple"\n            placeholder="AutoCompleteListPagingSelect"\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\n              overflow: \'auto\',\n            }}\n            pagingProps={{\n              loadData,\n              defaultLimit: 5,\n            }}\n            listPagingProps={{\n              itemLayout: \'horizontal\',\n              renderItem: (item) => (\n                <List.Item>\n                  <List.Item.Meta title={item.title} description={item.label} />\n                </List.Item>\n              ),\n            }}\n          />\n        </PagingEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ span: 24 }}>\n        <Button htmlType="submit" block type="primary">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n',renderChildren:()=>u.createElement(Pt,null)},{id:"TablePagingEntityValueHOC",name:"TablePagingEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"TablePagingEntityValueHOC",info:"Table分页获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\nimport Mock from 'mockjs';\nimport React, { useContext, useEffect } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Form, PagingEntityValueHOC, Table } from '@baifendian/adhere-ui-anthoc';\n\nconst dataSource = Array.from({ length: 100 }).map(() => {\n  const label = Mock.mock('@name');\n  const value = Mock.mock('@guid');\n\n  return {\n    id: value,\n    name: label,\n    address: Mock.mock('@region'),\n    height: Mock.mock('@integer(60, 100)'),\n    width: Mock.mock('@integer(60, 100)'),\n    nativePlace: Mock.mock('@city'),\n    label,\n    value,\n  };\n});\n\nconst columns = [\n  {\n    title: '名称',\n    key: 'name',\n    dataIndex: 'name',\n  },\n  {\n    title: '地址',\n    key: 'address',\n    dataIndex: 'address',\n  },\n  {\n    title: '籍贯',\n    key: 'nativePlace',\n    dataIndex: 'nativePlace',\n  },\n  {\n    title: '身高',\n    key: 'height',\n    dataIndex: 'height',\n  },\n  {\n    title: '体重',\n    key: 'width',\n    dataIndex: 'width',\n  },\n];\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  function loadData(page, limit) {\n    console.log('paging', page, limit);\n\n    return new Promise((resolve) => {\n      resolve({\n        totalCount: dataSource.length,\n        data: dataSource.slice((page - 1) * limit, page * limit),\n      });\n    });\n  }\n\n  useEffect(() => {}, []);\n\n  return (\n    <Form\n      form={form}\n      labelAlign=\"right\"\n      labelCol={{ span: 3 }}\n      wrapperCol={{ span: 21 }}\n      onFinish={(values) => {\n        console.log('values', values);\n        alert(JSON.stringify(values));\n      }}\n    >\n      <Form.Item\n        name=\"sex\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <PagingEntityValueHOC>\n          <Table.TablePaging\n            isSuspenseAsync={false}\n            pagingProps={{\n              loadData,\n              defaultLimit: 5,\n            }}\n            tablePagingProps={{\n              rowKey: 'id',\n              columns,\n            }}\n          />\n        </PagingEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex1\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <PagingEntityValueHOC>\n          <Table.TablePagingSelect\n            placeholder=\"RadioPagingList\"\n            pagingProps={{\n              loadData,\n              defaultLimit: 5,\n            }}\n            tablePagingProps={{\n              rowKey: 'id',\n              columns,\n            }}\n          />\n        </PagingEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex2\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <PagingEntityValueHOC>\n          <Table.TablePaging\n            mode=\"multiple\"\n            isSuspenseAsync={false}\n            pagingProps={{\n              loadData,\n              defaultLimit: 5,\n            }}\n            tablePagingProps={{\n              rowKey: 'id',\n              columns,\n            }}\n          />\n        </PagingEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex3\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <PagingEntityValueHOC>\n          <Table.TablePagingSelect\n            mode=\"multiple\"\n            placeholder=\"RadioPagingList\"\n            pagingProps={{\n              loadData,\n              defaultLimit: 5,\n            }}\n            tablePagingProps={{\n              rowKey: 'id',\n              columns,\n            }}\n          />\n        </PagingEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex4\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <PagingEntityValueHOC>\n          <Table.AutoCompleteTablePagingSelect\n            mode=\"multiple\"\n            placeholder=\"AutoCompleteTablePagingSelect\"\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\n              overflow: 'auto',\n            }}\n            pagingProps={{\n              loadData,\n              defaultLimit: 5,\n            }}\n            tablePagingProps={{\n              rowKey: 'id',\n              columns,\n            }}\n          />\n        </PagingEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ span: 24 }}>\n        <Button htmlType=\"submit\" block type=\"primary\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n",renderChildren:()=>u.createElement(It,null)}]}),u.createElement(p.Wc,{title:"TreeEntityValueHOC",config:[{id:"TreeEntityValueHOC",name:"TreeEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"TreeEntityValueHOC",info:"TreeSelect获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\nimport React, { useContext, useEffect } from 'react';\n\nimport { ConfigProvider, Util } from '@baifendian/adhere';\nimport { Form, TreeEntityValueHOC, TreeSelect } from '@baifendian/adhere-ui-anthoc';\n\nimport { City, County, Province } from '@/mock/pcc';\n\nconst treeData = [\n  {\n    value: 'parent 1',\n    title: 'parent 1',\n    children: [\n      {\n        value: 'parent 1-0',\n        title: 'parent 1-0',\n        children: [\n          {\n            value: 'leaf1',\n            title: 'leaf1',\n          },\n          {\n            value: 'leaf2',\n            title: 'leaf2',\n          },\n        ],\n      },\n      {\n        value: 'parent 1-1',\n        title: 'parent 1-1',\n        children: [\n          {\n            value: 'leaf3',\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst flatTreeData = [\n  ...Province.map((t) => ({\n    title: t.name,\n    label: t.name,\n    value: t.id,\n    id: t.id,\n    isLeaf: false,\n    pId: 0,\n  })),\n  ...Object.keys(City)\n    .map((key) =>\n      City[key].map((t) => ({\n        title: t.name,\n        label: t.name,\n        value: t.id,\n        id: t.id,\n        isLeaf: false,\n        pId: `${key}`,\n      })),\n    )\n    .flat(),\n  ...Object.keys(County)\n    .map((key) =>\n      County[key].map((t) => ({\n        title: t.name,\n        label: t.name,\n        value: t.id,\n        id: t.id,\n        isLeaf: true,\n        pId: key,\n      })),\n    )\n    .flat(),\n];\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  const { media } = useContext(ConfigProvider.Context);\n\n  useEffect(() => {}, []);\n\n  return (\n    <Form\n      form={form}\n      labelAlign=\"right\"\n      labelCol={{ span: 3 }}\n      wrapperCol={{ span: 21 }}\n      onFinish={(values) => {\n        console.log('values', values);\n        alert(JSON.stringify(values));\n      }}\n    >\n      <Form.Item\n        name=\"sex\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <TreeEntityValueHOC>\n          <TreeSelect\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\n              overflow: 'auto',\n            }}\n            placeholder=\"Please select\"\n            treeDefaultExpandAll\n            treeData={treeData}\n          />\n        </TreeEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex1\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <TreeEntityValueHOC>\n          <TreeSelect.TreeMultiSelect\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\n              overflow: 'auto',\n            }}\n            placeholder=\"Please select\"\n            treeDefaultExpandAll\n            treeData={treeData}\n          />\n        </TreeEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex2\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <TreeEntityValueHOC>\n          <TreeSelect.TreeCheckedShowParentSelect\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\n              overflow: 'auto',\n            }}\n            placeholder=\"Please select\"\n            treeDefaultExpandAll\n            treeData={treeData}\n          />\n        </TreeEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex3\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <TreeEntityValueHOC>\n          <TreeSelect.TreeCheckedShowChildSelect\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\n              overflow: 'auto',\n            }}\n            placeholder=\"Please select\"\n            treeDefaultExpandAll\n            treeData={treeData}\n          />\n        </TreeEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex4\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <TreeEntityValueHOC>\n          <TreeSelect.TreeCheckedShowAllSelect\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\n              overflow: 'auto',\n            }}\n            placeholder=\"Please select\"\n            treeDefaultExpandAll\n            treeData={treeData}\n          />\n        </TreeEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item\n        name=\"sex5\"\n        label=\"性别\"\n        rules={[\n          {\n            required: true,\n            message: '请选择性别',\n          },\n        ]}\n      >\n        <TreeEntityValueHOC>\n          <TreeSelect\n            dropdownStyle={{\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\n              overflow: 'auto',\n            }}\n            placeholder=\"Please select\"\n            treeDefaultExpandAll\n            treeData={flatTreeData}\n            treeDataSimpleMode\n          />\n        </TreeEntityValueHOC>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ span: 24 }}>\n        <Button htmlType=\"submit\" block type=\"primary\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n",renderChildren:()=>u.createElement(or,null)},{id:"CascaderEntityValueHOC",name:"CascaderEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"CascaderEntityValueHOC",info:"Cascader获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport React, { useEffect } from \'react\';\r\n\r\nimport { Cascader, Form, TreeEntityValueHOC } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport { City, County, Province } from \'@/mock/pcc\';\r\n\r\nconst options = [\r\n  {\r\n    value: \'zhejiang\',\r\n    label: \'Zhejiang\',\r\n    children: [\r\n      {\r\n        value: \'hangzhou\',\r\n        label: \'Hangzhou\',\r\n        children: [\r\n          {\r\n            value: \'xihu\',\r\n            label: \'West Lake\',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: \'jiangsu\',\r\n    label: \'Jiangsu\',\r\n    children: [\r\n      {\r\n        value: \'nanjing\',\r\n        label: \'Nanjing\',\r\n        children: [\r\n          {\r\n            value: \'zhonghuamen\',\r\n            label: \'Zhong Hua Men\',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst treeData = [\r\n  ...Province.map((t) => ({\r\n    title: t.name,\r\n    label: t.name,\r\n    value: t.id,\r\n    id: t.id,\r\n    isLeaf: false,\r\n    pId: 0,\r\n  })),\r\n  ...Object.keys(City)\r\n    .map((key) =>\r\n      City[key].map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        isLeaf: false,\r\n        pId: `${key}`,\r\n      })),\r\n    )\r\n    .flat(),\r\n  ...Object.keys(County)\r\n    .map((key) =>\r\n      County[key].map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        isLeaf: true,\r\n        pId: key,\r\n      })),\r\n    )\r\n    .flat(),\r\n];\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC treeDataProp="options">\r\n          <Cascader placeholder="Please select" options={options} />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex1"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC treeDataProp="options">\r\n          <Cascader.CascaderMulti placeholder="Please select" options={options} />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex2"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC treeDataProp="options">\r\n          <Cascader.CascaderChangeOnSelect placeholder="Please select" options={options} />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex3"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC treeDataProp="options">\r\n          <Cascader.CascaderShowChild placeholder="Please select" options={options} />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex4"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC treeDataProp="options">\r\n          <Cascader.CascaderMulti\r\n            placeholder="Please select"\r\n            options={treeData}\r\n            treeDataSimpleMode\r\n          />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>u.createElement(ar,null)}]}),u.createElement(p.Wc,{title:"AsyncTreeEntityValueHOC",config:[{id:"AsyncTreeEntityValueHOC",name:"AsyncTreeEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncTreeEntityValueHOC",info:"AsyncTreeSelect获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport React, { useEffect } from \'react\';\r\n\r\nimport { AsyncTreeEntityValueHOC, Form, TreeSelect } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport { City, County, Province } from \'@/mock/pcc\';\r\n\r\n/**\r\n * fetchData\r\n * @param pid\r\n * @param cascadeParams\r\n */\r\nfunction fetchData(pid, cascadeParams) {\r\n  if (!pid) {\r\n    return Promise.resolve(\r\n      Province.map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        pId: 0,\r\n        isLeaf: false,\r\n      })),\r\n    );\r\n  }\r\n\r\n  const countyIds = Object.keys(County)\r\n    .map((key) => County[key])\r\n    .flat()\r\n    .map((t) => t.id);\r\n\r\n  const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n    title: t.name,\r\n    label: t.name,\r\n    value: t.id,\r\n    id: t.id,\r\n    pId: pid,\r\n    isLeaf: countyIds.includes(t.id),\r\n  }));\r\n\r\n  return Promise.resolve(result);\r\n}\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <TreeSelect.AsyncTreeSelect placeholder="AsyncTreeSelect" fetchData={fetchData} />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex1"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <TreeSelect.AsyncTreeMultiSelect\r\n            placeholder="AsyncTreeMultiSelectEcho"\r\n            fetchData={fetchData}\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex2"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <TreeSelect.AsyncTreeCheckedShowParentSelect\r\n            placeholder="AsyncTreeCheckedShowParentSelect"\r\n            fetchData={fetchData}\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex3"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <TreeSelect.AsyncTreeCheckedShowAllSelect\r\n            placeholder="AsyncTreeCheckedShowAllSelect"\r\n            fetchData={fetchData}\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex4"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeSelect.AsyncTreeCheckedShowChildSelect\r\n          placeholder="AsyncTreeCheckedShowChildSelect"\r\n          fetchData={fetchData}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex5"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <TreeSelect.AsyncTreeSelect\r\n            placeholder="AsyncTreeSelect"\r\n            fetchData={fetchData}\r\n            treeDataSimpleMode\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>u.createElement(ue,null)},{id:"AsyncCascaderEntityValueHOC",name:"AsyncCascaderEntityValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"AsyncCascaderEntityValueHOC",info:"AsyncCascader获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport React, { useEffect } from \'react\';\r\n\r\nimport { AsyncTreeEntityValueHOC, Cascader, Form } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport { City, County, Province } from \'@/mock/pcc\';\r\n\r\n/**\r\n * fetchData\r\n * @param pid\r\n * @param cascadeParams\r\n */\r\nfunction fetchData(pid, cascadeParams) {\r\n  console.log(\'pid\', pid);\r\n\r\n  if (!pid) {\r\n    return Promise.resolve(\r\n      Province.map((t) => ({\r\n        label: t.name,\r\n        value: t.id,\r\n        pId: 0,\r\n        isLeaf: false,\r\n      })),\r\n    );\r\n  }\r\n\r\n  const countyIds = Object.keys(County)\r\n    .map((key) => County[key])\r\n    .flat()\r\n    .map((t) => t.id);\r\n\r\n  const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n    label: t.name,\r\n    value: t.id,\r\n    pId: pid,\r\n    isLeaf: countyIds.includes(t.id),\r\n  }));\r\n\r\n  return Promise.resolve(result);\r\n}\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <Cascader.AsyncCascader placeholder="AsyncCascader" fetchData={fetchData} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex1"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <Cascader.AsyncCascaderChangeOnSelect\r\n            placeholder="AsyncCascaderChangeOnSelect"\r\n            fetchData={fetchData}\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex2"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <Cascader.AsyncCascaderMulti placeholder="AsyncCascaderMulti" fetchData={fetchData} />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex3"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <Cascader.AsyncCascader\r\n            placeholder="AsyncCascader"\r\n            fetchData={fetchData}\r\n            treeDataSimpleMode\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>u.createElement(ce,null)}]}),u.createElement(p.Wc,{title:"DatePickerValueHOC",config:[{id:"DatePickerTimestampValueHOC",name:"DatePickerTimestampValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"DatePickerTimestampValueHOC",info:"DatePickerTimestamp获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport dayjs from \'dayjs\';\r\nimport React, { useEffect } from \'react\';\r\n\r\nimport { DatePickerTimestampValueHOC, Form } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue(\'birthDay2\', dayjs().valueOf());\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="birthday"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerTimestampValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="birthday1"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerTimestampValueHOC type="seconds" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="birthday2"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerTimestampValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>u.createElement(Jn,null)},{id:"DatePickerFormatValueHOC",name:"DatePickerFormatValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"DatePickerFormatValueHOC",info:"DatePickerFormat获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { DatePickerFormatValueHOC, Form } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue('birthDay2', dayjs().format('YYYY-MM-DD'));\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"birthday\"\r\n        label=\"生日\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择生日',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerFormatValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"birthday1\"\r\n        label=\"生日\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择生日',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerFormatValueHOC type=\"seconds\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"birthday2\"\r\n        label=\"生日\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择生日',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerFormatValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Bn,null)}]}),u.createElement(p.Wc,{title:"RangePickerValueHOC",config:[{id:"RangePickerTimestampValueHOC",name:"RangePickerTimestampValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"RangePickerTimestampValueHOC",info:"RangePickerTimestamp获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { Form, RangePickerTimestampValueHOC } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue('createTime', [dayjs().valueOf(), dayjs().valueOf()]);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"createTime\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerTimestampValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"createTime1\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerTimestampValueHOC type={['seconds', 'seconds']} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"createTime2\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerTimestampValueHOC type={['seconds', 'milliseconds']} />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(Qt,null)},{id:"RangePickerFormatValueHOC",name:"RangePickerFormatValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"RangePickerFormatValueHOC",info:"RangePickerFormat获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { Form, RangePickerFormatValueHOC } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue('createTime', ['2023-12-12: 23:45:23', '2026-12-12: 23:45:23']);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"createTime\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerFormatValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"createTime1\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerFormatValueHOC type={['seconds', 'seconds']} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"createTime2\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerFormatValueHOC type={['seconds', 'milliseconds']} />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(zt,null)}]}),u.createElement(p.Wc,{title:"TimePickerValueHOC",config:[{id:"TimePickerTimestampValueHOC",name:"TimePickerTimestampValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"TimePickerTimestampValueHOC",info:"TimePickerTimestamp获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport dayjs from \'dayjs\';\r\nimport React, { useEffect } from \'react\';\r\n\r\nimport { Form, TimePickerTimestampValueHOC } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue(\'birthDay2\', dayjs().valueOf());\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="birthday"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <TimePickerTimestampValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="birthday1"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <TimePickerTimestampValueHOC type="seconds" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="birthday2"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <TimePickerTimestampValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>u.createElement(Za,null)},{id:"TimePickerFormatValueHOC",name:"TimePickerFormatValueHOC",mode:"code",scope:{React:u},cardProps:{description:{title:"TimePickerFormatValueHOC",info:"TimePickerFormat获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { Form, TimePickerFormatValueHOC } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue('createTime', '23:59:59');\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"createTime\"\r\n        label=\"开店时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择开店时间',\r\n          },\r\n        ]}\r\n      >\r\n        <TimePickerFormatValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>u.createElement(ja,null)}]}),u.createElement(p.Wc,{title:"配合ScrollLayout使用",config:[{id:"p1",name:"配合ScrollLayout使用",mode:"code",scope:{React:u},type:"PlayGround",codeText:"",cardProps:{description:{title:"使用ScrollLayout做容器",info:"自动设置组件的getPopupContainer，浮层跟随滚动`"}},renderChildren:()=>u.createElement("div",{className:Fr},u.createElement(Mr,{scrollY:!0},u.createElement(a.A.Group,{direction:"vertical"},u.createElement("dl",null,u.createElement("dt",null,u.createElement("p",null,"Select")),u.createElement("dd",null,u.createElement(oa,null))),u.createElement("dl",null,u.createElement("dt",null,u.createElement("p",null,"MultipleSelect")),u.createElement("dd",null,u.createElement(ra,null))),u.createElement("dl",null,u.createElement("dt",null,u.createElement("p",null,"TreeSelect")),u.createElement("dd",null,u.createElement(Dr,null))),u.createElement("dl",null,u.createElement("dt",null,u.createElement("p",null,"AutoComplete")),u.createElement("dd",null,u.createElement(fe,null))),u.createElement("dl",null,u.createElement("dt",null,u.createElement("p",null,"DatePicker")),u.createElement("dd",null,u.createElement(o.A,{className:Hr}))),u.createElement("dl",null,u.createElement("dt",null,u.createElement("p",null,"RangePicker")),u.createElement("dd",null,u.createElement(l.A,{className:Hr}))),u.createElement("dl",null,u.createElement("dt",null,u.createElement("p",null,"TimePicker")),u.createElement("dd",null,u.createElement(r.A,{className:Hr}))),u.createElement("dl",null,u.createElement("dt",null,u.createElement("p",null,"Cascader")),u.createElement("dd",null,u.createElement(sn,null))))))}]}),u.createElement(p.e6,{title:"anthoc",config:[{border:!0,title:"Select（单选）、MultipleSelect（多选）",data:[{params:"showSearch",desc:"配置是否可搜索",type:"boolean",defaultVal:"true"},{params:"allowClear",desc:"支持清除",type:"boolean",defaultVal:"true"},{params:"placement",desc:"选择框弹出的位置",type:"bottomLeft bottomRight topLeft topRight",defaultVal:"bottomLeft"},{params:"filterOption",desc:"是否根据输入项进行筛选。当其为一个函数时，会接收 inputValue option 两个参数，当 option 符合筛选条件时，应返回 true，反之则返回 false",type:"boolean | function(inputValue, option)",defaultVal:"(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0"},{params:"getPopupContainer",desc:"",type:"function(triggerNode)",defaultVal:"默认浮层跟随滚动"},{params:"其他属性",desc:"参考 https://ant.design/components/select-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"TreeSelect",data:[{params:"showSearch",desc:"配置是否可搜索",type:"boolean",defaultVal:"true"},{params:"allowClear",desc:"支持清除",type:"boolean",defaultVal:"true"},{params:"placement",desc:"选择框弹出的位置",type:"bottomLeft bottomRight topLeft topRight",defaultVal:"bottomLeft"},{params:"treeNodeFilterProp",desc:"输入项过滤对应的 treeNode 属性",type:"string",defaultVal:"title"},{params:"getPopupContainer",desc:"",type:"function(triggerNode)",defaultVal:"默认浮层跟随滚动"},{params:"其他属性",desc:"参考 https://ant.design/components/tree-select-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"AutoComplete",data:[{params:"allowClear",desc:"支持清除",type:"boolean",defaultVal:"true"},{params:"filterOption",desc:"是否根据输入项进行筛选。当其为一个函数时，会接收 inputValue option 两个参数，当 option 符合筛选条件时，应返回 true，反之则返回 false",type:"boolean | function(inputValue, option)",defaultVal:"(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0"},{params:"getPopupContainer",desc:"",type:"function(triggerNode)",defaultVal:"默认浮层跟随滚动"},{params:"其他属性",desc:"参考 https://ant.design/components/auto-complete-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"DatePicker、RangePicker、TimePicker",data:[{params:"allowClear",desc:"支持清除",type:"boolean",defaultVal:"true"},{params:"placement",desc:"选择框弹出的位置",type:"bottomLeft bottomRight topLeft topRight",defaultVal:"bottomLeft"},{params:"getPopupContainer",desc:"",type:"function(triggerNode)",defaultVal:"默认浮层跟随滚动"},{params:"其他属性",desc:"参考 https://ant.design/components/date-picker-cn#api、https://ant.design/components/time-picker-cn",type:"-",defaultVal:"-"}]},{border:!0,title:"Cascader",data:[{params:"showSearch",desc:"配置是否可搜索",type:"boolean",defaultVal:"{\n                  filter: (inputValue, path) =>\n                    path.some((option) => option.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1),\n                },"},{params:"allowClear",desc:"支持清除",type:"boolean",defaultVal:"true"},{params:"placement",desc:"选择框弹出的位置",type:"bottomLeft bottomRight topLeft topRight",defaultVal:"bottomLeft"},{params:"getPopupContainer",desc:"",type:"function(triggerNode)",defaultVal:"默认浮层跟随滚动"},{params:"其他属性",desc:"参考 https://ant.design/components/cascader-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"Upload",data:[{params:"name",desc:"发到后台的文件参数名",type:"string",defaultVal:"file"},{params:"withCredentials",desc:"上传请求时是否携带 cookie",type:"boolean",defaultVal:"true"},{params:"其他属性",desc:"参考 https://ant.design/components/upload-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"Modal",data:[{params:"closable",desc:"是否显示右上角的关闭按钮",type:"boolean",defaultVal:"true"},{params:"centered",desc:"垂直居中展示 Modal",type:"boolean",defaultVal:"true"},{params:"maskClosable",desc:"点击蒙层是否允许关闭",type:"boolean",defaultVal:"true"},{params:"destroyOnClose",desc:"关闭时销毁 Modal 里的子元素",type:"boolean",defaultVal:"true"},{params:"zIndex",desc:"设置 Modal 的 z-index",type:"number",defaultVal:"Resource.Dict.value.ResourceNormalMaxZIndex.value"},{params:"其他属性",desc:"参考 https://ant.design/components/modal-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"Input、TextArea",data:[{params:"allowClear",desc:"可以点击清除图标删除内容",type:"boolean | { clearIcon: ReactNode }",defaultVal:"true"},{params:"maxLength",desc:"最大长度",type:"number",defaultVal:"1000"},{params:"showCount",desc:"是否展示字数",type:"boolean | { formatter: (info: { value: string, count: number, maxLength?: number }) => ReactNode }",defaultVal:"true"},{params:"autoSize（适用于TextArea）",desc:"自适应内容高度，可设置为 true | false 或对象：{ minRows: 2, maxRows: 6 }",type:"boolean | object",defaultVal:"false"},{params:"其他属性",desc:"参考 https://ant.design/components/input-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"InputNumberDecimal1（1位小数）、InputNumberDecimal2（2位小数）、InputNumberInteger（整数）",data:[{params:"precision",desc:"数值精度，配置 formatter 时会以 formatter 为准",type:"number",defaultVal:"InputNumberDecimal1 = 1、 InputNumberDecimal2 = 2、 InputNumberInteger = 0"},{params:"其他属性",desc:"参考 https://ant.design/components/input-number-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"SubmitButton（默认点击显示loading,通过onClick事件返回promise来取消loading）",data:[{params:"其他属性",desc:"参考 https://ant.design/components/button-cn#api",type:"-",defaultVal:"-"}]}]}))},19994:(e,n,t)=>{t.d(n,{Ay:()=>u,I7:()=>m,Wc:()=>c,e6:()=>d,wn:()=>s});var a=t(71860),r=t(24370),l=t(26322);const{PlayGroundPageContext:o,PlayGroundPage:i}=r.A,{Section:s,CodeBoxSection:c,PropsSection:d,FunctionPropsSection:m}=i;const u=function(e){let{children:n,onScrollBottom:t,distance:r=50,...s}=e;const[c,d]=(0,l.useState)(),m=(0,l.useRef)(),u=(0,l.useRef)(!1);return(0,l.useEffect)((()=>{function e(){const e=n.scrollHeight-n.offsetHeight,a=n.scrollTop;if(t&&Math.abs(a-e)<=r){if(u.current)return;u.current=!0,null==t||t().then((()=>{u.current=!1}))}}const n=m.current.parentElement.parentElement;return n.addEventListener("scroll",e),d(n),()=>{n.removeEventListener("scroll",e)}}),[]),l.createElement(o.Provider,{value:{scrollEl:c}},l.createElement(i,(0,a.A)({ref:m},s),n))}},84792:(e,n,t)=>{t.d(n,{A:()=>a});const a=t(24902).A},32517:(e,n,t)=>{t.d(n,{A:()=>a});const a=t(2382).A}}]);