"use strict";(self.webpackChunk_ctsj_build=self.webpackChunk_ctsj_build||[]).push([[7473],{767577:function(e,n,t){t.r(n);var o=t(633196),r=t(130356),a=t(5254),l=t(690171),m=t(296032);n.default=()=>{const[e,n]=(0,l.useState)(!0),t={labelCol:{span:4},wrapperCol:{span:12}},i=e=>{console.log("success",e)},s=e=>{console.log("failed",e)};return l.createElement(m.ZP,null,l.createElement(m.$0,{title:"FormItemCreator"},l.createElement("p",null,"表单配置")),l.createElement(m.e0,{title:"代码演示",columnCount:1,config:[{id:"p1",name:"基本使用",mode:"code",scope:{React:l},cardProps:{description:{title:"基本使用",info:"【type=FormItemCreator.TEXT】"}},codeText:"\n  import React from 'react';\n  import { Form, Button } from 'antd';\n  import { FormItemCreator } from '@baifendian/adhere';\n\n  export default () => {\n    const layout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 12 },\n    };\n\n    const onFinish = (values) => {\n      console.log('success', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n      console.log('failed', errorInfo);\n    };\n\n    return (\n      <Form name=\"textDemo\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\n        <FormItemCreator\n          columns={[\n            { label: '就是一个查看', name: 'name', initialValue: '我就是一个查看', type: FormItemCreator.TEXT }\n          ]}\n          layout={layout}\n        />\n        <Form.Item wrapperCol={{ offset: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n        ",type:"PlayGround",renderChildren:()=>l.createElement(r.Z,{name:"textDemo",onFinish:i,onFinishFailed:s},l.createElement(o.Z,{columns:[{label:"就是一个查看",name:"name",initialValue:"我就是一个查看",type:o.Z.TEXT}],layout:t}),l.createElement(r.Z.Item,{wrapperCol:{offset:4}},l.createElement(a.ZP,{type:"primary",htmlType:"submit"},"提交")))},{id:"p2",name:"文本框",mode:"code",scope:{React:l},cardProps:{description:{title:"文本框",info:"\n              【type=FormItemCreator.TEXT | FormItemCreator.PASSWORD | FormItemCreator.TEXTAREA |\n        FormItemCreator.NUMBER】\n            "}},codeText:"\n  import React from 'react';\n  import { Form, Button } from 'antd';\n  import { FormItemCreator } from '@baifendian/adhere';\n\n  export default () => {\n    const layout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 12 },\n    };\n\n    const onFinish = (values) => {\n      console.log('success', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n      console.log('failed', errorInfo);\n    };\n\n    return (\n      <Form name=\"inputDemo\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\n        <FormItemCreator\n          columns={[\n            {\n              label: '输入框',\n              name: 'name',\n              type: FormItemCreator.INPUT,\n              rules: [{ required: true, message: '请输入'}],\n              contentProps: { placeholder: '请输入关键词' },\n            },\n            {\n              label: '密码框',\n              name: 'password',\n              type: FormItemCreator.PASSWORD,\n              rules: [{ required: true, message: '请输入'}],\n              contentProps: { placeholder: '请输入密码' },\n            },\n            {\n              label: '文本域',\n              name: 'des',\n              type: FormItemCreator.TEXTAREA,\n              contentProps: { rows: 8 },\n            },\n            {\n              label: '数值输入框',\n              name: 'number',\n              type: FormItemCreator.NUMBER,\n              contentProps: { min: 10 },\n            }\n          ]}\n          layout={layout}\n        />\n        <Form.Item wrapperCol={{ offset: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n        ",type:"PlayGround",renderChildren:()=>l.createElement(r.Z,{name:"inputDemo",onFinish:i,onFinishFailed:s},l.createElement(o.Z,{columns:[{label:"输入框",name:"name",type:o.Z.INPUT,rules:[{required:!0,message:"请输入"}],contentProps:{placeholder:"请输入关键词"}},{label:"密码框",name:"password",type:o.Z.PASSWORD,rules:[{required:!0,message:"请输入"}],contentProps:{placeholder:"请输入密码"}},{label:"文本域",name:"des",type:o.Z.TEXTAREA,contentProps:{rows:8}},{label:"数值输入框",name:"number",type:o.Z.NUMBER,contentProps:{min:10}}],layout:t}),l.createElement(r.Z.Item,{wrapperCol:{offset:4}},l.createElement(a.ZP,{type:"primary",htmlType:"submit"},"提交")))},{id:"p3",name:"选择控件",mode:"code",scope:{React:l},cardProps:{description:{title:"选择控件",info:"\n              【type=radio | checkbox | select】\r\n\n              均是通过contentProps.options: [&lt;'label', 'value'&gt;]来配置选择项\n            "}},codeText:"\n  import React from 'react';\n  import { Form, Button } from 'antd';\n  import { FormItemCreator } from '@baifendian/adhere';\n\n  export default () => {\n    const layout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 12 },\n    };\n\n    const onFinish = (values) => {\n      console.log('success', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n      console.log('failed', errorInfo);\n    };\n\n    return (\n      <Form name=\"selectDemo\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\n        <FormItemCreator\n          columns={[\n            {\n              label: '单选框1',\n              name: 'radio1',\n              type: FormItemCreator.RADIO,\n              contentProps: {\n                options: [{ label: '单选1', value: 1 }, { label: '单选2', value: 2}]\n              },\n            },\n            {\n              label: '单选框2-按钮形式',\n              name: 'radio2',\n              type: FormItemCreator.RADIO,\n              contentProps: {\n                optionType: 'button',\n                options: [{ label: '单选1', value: 1 }, { label: '单选2', value: 2}]\n              },\n            },\n            {\n              label: '复选框',\n              name: 'checkbox1',\n              type: FormItemCreator.CHECKBOX,\n              contentProps: {\n                options: [{ label: '复选1', value: 1 }, { label: '复选2', value: 2}]\n              },\n            },\n            {\n              label: '下拉',\n              name: 'select1',\n              type: FormItemCreator.SELECT,\n              contentProps: {\n                options: [{ label: '下拉1', value: 1 }, { label: '下拉2', value: 2}]\n              },\n            },\n            {\n              label: '多选下拉',\n              name: 'select2',\n              type: FormItemCreator.SELECT,\n              contentProps: {\n                mode: 'multiple',\n                options: [{ label: '下拉1', value: 1 }, { label: '下拉2', value: 2}]\n              },\n            }\n          ]}\n          layout={layout}\n        />\n        <Form.Item wrapperCol={{ offset: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n        ",type:"PlayGround",renderChildren:()=>l.createElement(r.Z,{name:"selectDemo",onFinish:i,onFinishFailed:s},l.createElement(o.Z,{columns:[{label:"单选框1",name:"radio1",type:o.Z.RADIO,contentProps:{options:[{label:"单选1",value:1},{label:"单选2",value:2}]}},{label:"单选框2-按钮形式",name:"radio2",type:o.Z.RADIO,contentProps:{optionType:"button",options:[{label:"单选1",value:1},{label:"单选2",value:2}]}},{label:"复选框",name:"checkbox1",type:o.Z.CHECKBOX,contentProps:{options:[{label:"复选1",value:1},{label:"复选2",value:2}]}},{label:"下拉",name:"select1",type:o.Z.SELECT,contentProps:{options:[{label:"下拉1",value:1},{label:"下拉2",value:2}]}},{label:"多选下拉",name:"select2",type:o.Z.SELECT,contentProps:{mode:"multiple",options:[{label:"下拉1",value:1},{label:"下拉2",value:2}]}}],layout:t}),l.createElement(r.Z.Item,{wrapperCol:{offset:4}},l.createElement(a.ZP,{type:"primary",htmlType:"submit"},"提交")))},{id:"p4",name:"滑动控件",mode:"code",scope:{React:l},cardProps:{description:{title:"滑动控件",info:"\n              【type=switch | slider | Rate】\n            "}},codeText:"\n  import React from 'react';\n  import { Form, Button } from 'antd';\n  import { FormItemCreator } from '@baifendian/adhere';\n\n  export default () => {\n    const layout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 12 },\n    };\n\n    const onFinish = (values) => {\n      console.log('success', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n      console.log('failed', errorInfo);\n    };\n\n    return (\n      <Form name=\"switchDemo\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\n        <FormItemCreator\n          columns={[\n            {\n              label: '开关',\n              name: 'switch',\n              type: FormItemCreator.SWITCH,\n              contentProps: {\n                // antd switch支持的属性\n                checkedChildren: '开启',\n              },\n            },\n            {\n              label: '滑动条',\n              name: 'slider',\n              type: FormItemCreator.SLIDER,\n              contentProps: {\n                // antd slider支持的属性\n                range: true,\n              },\n            },\n            {\n              label: '评分',\n              name: 'rate',\n              type: FormItemCreator.RATE,\n              contentProps: {\n                // antd rate支持的属性\n                allowHalf: true,\n              },\n            },\n          ]}\n          layout={layout}\n        />\n        <Form.Item wrapperCol={{ offset: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n        ",type:"PlayGround",renderChildren:()=>l.createElement(r.Z,{name:"switchDemo",onFinish:i,onFinishFailed:s},l.createElement(o.Z,{columns:[{label:"开关",name:"switch",type:o.Z.SWITCH,contentProps:{checkedChildren:"开启"}},{label:"滑动条",name:"slider",type:o.Z.SLIDER,contentProps:{range:!0}},{label:"评分",name:"rate",type:o.Z.RATE,contentProps:{allowHalf:!0}}],layout:t}),l.createElement(r.Z.Item,{wrapperCol:{offset:4}},l.createElement(a.ZP,{type:"primary",htmlType:"submit"},"提交")))},{id:"p5",name:"时间控件",mode:"code",scope:{React:l},cardProps:{description:{title:"时间控件",info:"\n              【type=FormItemCreator.DATEPICKER | FormItemCreator.RANGEPICKER | FormItemCreator.TIMEPICKER\n            "}},codeText:"\n  import React from 'react';\n  import { Form, Button } from 'antd';\n  import { FormItemCreator } from '@baifendian/adhere';\n\n  export default () => {\n    const layout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 12 },\n    };\n\n    const onFinish = (values) => {\n      console.log('success', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n      console.log('failed', errorInfo);\n    };\n\n    return (\n      <Form name=\"pickerDemo\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\n        <FormItemCreator\n          columns={[\n            {\n              label: '选择日期',\n              name: 'date',\n              type: FormItemCreator.DATEPICKER,\n              contentProps: {\n                // antd DatePicker支持的属性\n              },\n            },\n            {\n              label: '选择年份',\n              name: 'year',\n              type: FormItemCreator.DATEPICKER,\n              contentProps: {\n                // antd DatePicker支持的属性\n                picker: 'year',\n              },\n            },\n            {\n              label: '选择月份',\n              name: 'month',\n              type: FormItemCreator.DATEPICKER,\n              contentProps: {\n                // antd DatePicker支持的属性\n                picker: 'month',\n              },\n            },\n            {\n              label: '选择季度',\n              name: 'quarter',\n              type: FormItemCreator.DATEPICKER,\n              contentProps: {\n                // antd DatePicker支持的属性\n                picker: 'quarter',\n              },\n            },\n            {\n              label: '选择周',\n              name: 'week',\n              type: FormItemCreator.DATEPICKER,\n              contentProps: {\n                // antd DatePicker支持的属性\n                picker: 'week',\n              },\n            },\n            {\n              label: '选择日期范围',\n              name: 'rangedate',\n              type: FormItemCreator.RANGEPICKER,\n              contentProps: {\n                // antd DatePicker.RangePicker支持的属性\n              },\n            },\n            {\n              label: '选择时间',\n              name: 'time',\n              type: FormItemCreator.TIMEPICKER,\n              contentProps: {\n                // antd TimePicker支持的属性\n              },\n            },\n          ]}\n          layout={layout}\n        />\n        <Form.Item wrapperCol={{ offset: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n        ",type:"PlayGround",renderChildren:()=>l.createElement(r.Z,{name:"pickerDemo",onFinish:i,onFinishFailed:s},l.createElement(o.Z,{columns:[{label:"选择日期",name:"date",type:o.Z.DATEPICKER,contentProps:{}},{label:"选择年份",name:"year",type:o.Z.DATEPICKER,contentProps:{picker:"year"}},{label:"选择月份",name:"month",type:o.Z.DATEPICKER,contentProps:{picker:"month"}},{label:"选择季度",name:"quarter",type:o.Z.DATEPICKER,contentProps:{picker:"quarter"}},{label:"选择周",name:"week",type:o.Z.DATEPICKER,contentProps:{picker:"week"}},{label:"选择日期范围",name:"rangedate",type:o.Z.RANGEPICKER,contentProps:{}},{label:"选择时间",name:"time",type:o.Z.TIMEPICKER,contentProps:{}}],layout:t}),l.createElement(r.Z.Item,{wrapperCol:{offset:4}},l.createElement(a.ZP,{type:"primary",htmlType:"submit"},"提交")))},{id:"p6",name:"上传",mode:"code",scope:{React:l},cardProps:{description:{title:"上传",info:"\n              【type=FormItemCreator.UPLOAD | FormItemCreator.DEFINE】\n            "}},codeText:"\n  import React from 'react';\n  import { Form, Button } from 'antd';\n  import { FormItemCreator } from '@baifendian/adhere';\n\n  export default () => {\n    const layout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 12 },\n    };\n\n    const onFinish = (values) => {\n      console.log('success', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n      console.log('failed', errorInfo);\n    };\n\n    return (\n      <Form name=\"uploadDemo\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\n        <FormItemCreator\n          columns={[\n            {\n              label: '上传头像',\n              name: 'image',\n              type: FormItemCreator.UPLOAD,\n              contentProps: {\n                // antd Upload支持的属性\n                // children 是upload组件包括的组件\n                children: <Button>Upload</Button>\n              },\n            },\n            {\n              label: '自己定义的表单项',\n              name: 'my',\n              type: FormItemCreator.DEFINE,\n              content: <div>我就是自定义的</div>,\n              contentProps: {\n                // 传给content的属性\n              },\n            },\n          ]}\n          layout={layout}\n        />\n        <Form.Item wrapperCol={{ offset: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n        ",type:"PlayGround",renderChildren:()=>l.createElement(r.Z,{name:"uploadDemo",onFinish:i,onFinishFailed:s},l.createElement(o.Z,{columns:[{label:"上传头像",name:"image",type:o.Z.UPLOAD,contentProps:{children:l.createElement(a.ZP,null,"Upload")}},{label:"自己定义的表单项",name:"my",type:o.Z.DEFINE,content:l.createElement("div",null,"我就是自定义的"),contentProps:{}}],layout:t}),l.createElement(r.Z.Item,{wrapperCol:{offset:4}},l.createElement(a.ZP,{type:"primary",htmlType:"submit"},"提交")))},{id:"p7",name:"Skip",mode:"code",scope:{React:l},cardProps:{description:{title:"Skip",info:"\n              【Skip使用例子】\n            "}},codeText:"\n  import React, { useState } from 'react';\n  import { Form, Button } from 'antd';\n  import { FormItemCreator } from '@baifendian/adhere';\n\n  export default () => {\n    const [skip, setSkip] = useState(true);\n    const layout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 12 },\n    };\n\n    const onFinish = (values) => {\n      console.log('success', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n      console.log('failed', errorInfo);\n    };\n\n    return (\n      <Form name=\"textDemo\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\n        <FormItemCreator\n          columns={[\n            {\n              label: '是否显示下拉',\n              name: 'showSelect',\n              type: FormItemCreator.RADIO,\n              contentProps: {\n                options: [{ label: '是', value: 1 }, { label: '否', value: 2 }],\n                onChange: e => setSkip(e.target.value === 2),\n              }\n            },\n            {\n              label: '下拉',\n              name: 'isSelect',\n              type: FormItemCreator.SELECT,\n              skip: skip,\n              contentProps: {\n                options: [{ label: '下拉1', value: 1 }, { label: '下拉2', value: 2 }]\n              }\n            }\n          ]}\n          layout={layout}\n        />\n        <Form.Item wrapperCol={{ offset: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n        ",type:"PlayGround",renderChildren:()=>l.createElement(r.Z,{name:"skipDemo",onFinish:i,onFinishFailed:s},l.createElement(o.Z,{columns:[{label:"是否显示下拉",name:"showSelect",type:o.Z.RADIO,contentProps:{options:[{label:"是",value:1},{label:"否",value:2}],onChange:e=>n(2===e.target.value)}},{label:"下拉",name:"isSelect",type:o.Z.SELECT,skip:e,contentProps:{options:[{label:"下拉1",value:1},{label:"下拉2",value:2}]}}],layout:t}),l.createElement(r.Z.Item,{wrapperCol:{offset:4}},l.createElement(a.ZP,{type:"primary",htmlType:"submit"},"提交")))}]}),l.createElement(m.sB,{title:"Props",config:[{border:!0,title:"属性",data:[{params:"columns",desc:"配置数组",type:"array",defaultVal:""},{params:"layout",desc:"{labelCol, wrapperCol} 配置布局会应用到每一个item中，如果需要单独特殊配置，columns里面会覆盖此配置",type:"object",defaultVal:""}]},{border:!0,title:"表单中每一项的配置",data:[{params:"type",desc:"表单项类型, 可选【\n\n              FormItemCreator.INPUT, FormItemCreator.PASSWORD, FormItemCreator.TEXTAREA, FormItemCreator.NUMBER, FormItemCreator.RADIO, FormItemCreator.CHECKBOX, FormItemCreator.SELECT, \n\n              FormItemCreator.SWITCH, FormItemCreator.SLIDER, FormItemCreator.RATE, FormItemCreator.DATEPICKER, FormItemCreator.RANGEPICKER, FormItemCreator.TIMEPICKER, FormItemCreator.DEFINE \n\n            】",type:"string",defaultVal:""},{params:"skip",desc:"是否跳过此项，如果为true，则不渲染此项内容",type:"boolean",defaultVal:"false"},{params:"content",desc:"type为FormItemCreator.DEFINE时需配置此项，自定义Form.item中包裹的组件 ",type:"ReactNode",defaultVal:""},{params:"contentProps",desc:"传入被Form.Item包裹的组件的属性，\n 例如type为input则是antd中Input支持的属性，以此类推",type:"ReactNode",defaultVal:""},{params:"......",desc:l.createElement("div",null,"支持antd中Form.Item的属性",l.createElement("a",{href:"https://ant.design/components/form-cn/#Form.Item",target:"_blank"},"https://ant.design/components/form-cn/#Form.Item")),type:"",defaultVal:""}]}]}))}},296032:function(e,n,t){t.d(n,{$0:function(){return i},ae:function(){return c},e0:function(){return s},sB:function(){return p}});var o=t(570517),r=t(153757),a=t(690171);const{PlayGroundPageContext:l,PlayGroundPage:m}=r.default,{Section:i,CodeBoxSection:s,PropsSection:p,FunctionPropsSection:c}=m;n.ZP=function(e){let{children:n,...t}=e;const[r,i]=(0,a.useState)(),s=(0,a.useRef)();return(0,a.useEffect)((()=>{i(s.current.parentElement.parentElement)}),[]),a.createElement(l.Provider,{value:{scrollEl:r}},a.createElement(m,(0,o.Z)({ref:s},t),n))}},633196:function(e,n,t){var o=t(128691);n.Z=o.Z}}]);