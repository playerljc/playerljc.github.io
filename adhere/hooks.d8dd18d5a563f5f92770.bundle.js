"use strict";(self.webpackChunk_ctsj_build=self.webpackChunk_ctsj_build||[]).push([[6401],{46360:(e,n,r)=>{r.r(n),r.d(n,{default:()=>w});var t=r(26322),a=r(96465),o=r(61444),l=r(80711);const{useForceUpdate:u}=o.A,c=()=>{const e=u();return t.createElement(l.Ay,{type:"primary",onClick:()=>{e()}},"forceUpdate")};var s=r(32517);const{useSetState:i,useFirst:d,usePrevious:p}=o.A,m=()=>{const[e,n]=i(0),[r,a]=i(0),[o,u]=i(0),[c,m]=d(),f=p(3);return console.log(f),(0,t.useEffect)((()=>{console.log("isFirst",c),m(!0)}),[]),t.createElement("div",null,t.createElement("div",null,t.createElement(s.A.Group,{direction:"horizontal"},t.createElement(l.Ay,{onClick:()=>{n(e.current+1,(()=>console.log("count1更新完成")))}},"setCount1"),t.createElement(l.Ay,{onClick:()=>{a(r.current+1,(()=>console.log("count2更新完成")))}},"setCount2"),t.createElement(l.Ay,{onClick:()=>{u((e=>e+1),(()=>console.log("count3更新完成")))}},"setCount3"))),t.createElement("div",null,t.createElement("p",null,"count1: ",e.current),t.createElement("p",null,"count2: ",r.current),t.createElement("p",null,"count3: ",o.current)))},{useLatestState:f}=o.A,v=()=>{const[e,n]=f(0);return setInterval((()=>{n(e.current+1)}),1e3),t.createElement("div",null,e.current)},{useSetState:y}=o.A,g=()=>{const[e,n]=y(0);return setInterval((()=>{n(e.current+1,(()=>{}))}),1e3),t.createElement("div",null,e.current)},{usePropToState:E}=o.A;function k(e){let{defaultCount:n}=e;const[r,a]=E(n);return setInterval((()=>{a((e=>e+1))}),1e3),t.createElement("div",null,r)}const C=()=>{const[e,n]=(0,t.useState)(0);return t.createElement("div",null,t.createElement(k,{defaultCount:e}),t.createElement(l.Ay,{onClick:()=>{n(e+1)}},"设置新值"))};var S=r(35696),h=r(48305),P=r(86798);const{useTriggerQuery:b}=o.A,{Label:A,Value:R}=S.A,x=()=>{const{setFieldsValue:e,fieldsValue:n,searchParams:r,search:a,reset:o}=b({userName:"",sex:"",nativePlace:""});return t.createElement("div",null,t.createElement("div",null,t.createElement(S.A,{bordered:!0,mode:"bordered",data:[{name:"g1",width:"100%",columnCount:3,colgroup:[150,"auto",150,"auto",150,"auto"],data:[{key:"姓名",label:t.createElement(A,null,"姓名："),value:t.createElement(R,null,t.createElement(h.A,{placeholder:"姓名",value:n.current.userName,onChange:n=>e((e=>{e.userName=n.target.value}))}))},{key:"性别",label:t.createElement(A,null,"性别："),value:t.createElement(R,null,t.createElement(P.A,{value:n.current.sex,onChange:n=>e((e=>{e.sex=n}))},t.createElement(P.A.Option,{value:"1"},"男"),t.createElement(P.A.Option,{value:"2"},"女")))},{key:"籍贯",label:t.createElement(A,null,"籍贯："),value:t.createElement(R,null,t.createElement(h.A,{placeholder:"籍贯",value:n.current.nativePlace,onChange:n=>e((e=>{e.nativePlace=n.target.value}))}))}]}]})),t.createElement("div",null,t.createElement(l.Ay,{type:"primary",block:!0,onClick:()=>{a((()=>{console.log("searchParams",r.current)}))}},"查询"),t.createElement(l.Ay,{block:!0,onClick:()=>{o((()=>{console.log("searchParams",r.current)}))}},"重置")))};var T=r(38848),F=r(13097),B=r(42438),I=r(2438),L=r(28361),V=r.n(L);const{use:H}=o.A;function j(){return new Promise((e=>{setTimeout((()=>{e(Array.from({length:10}).map((()=>({id:"",name:V().mock("@guid"),jg:V().mock("@cname"),address:V().mock("@cname")}))))}),2e3)}))}const G=()=>{const{data:e,isPending:n,isValidate:r,reset:a,reload:o,type:u}=H(j,[]);function c(){return t.createElement("div",null,t.createElement("div",null,t.createElement(l.Ay,{type:"primary",onClick:()=>{a()}},"重置成reset"),t.createElement(l.Ay,{type:"primary",onClick:()=>{o()}},"重置成reload")),t.createElement(F.A,{dataSource:e,columns:[{title:"姓名",key:"name",dataIndex:"name"},{title:"籍贯",key:"jg",dataIndex:"jg"},{title:"住址",key:"address",dataIndex:"address"}]}))}return t.createElement(t.Fragment,null,n&&"reset"===u&&t.createElement(B.A,{avatar:!0,paragraph:{rows:4}}),n&&"reload"===u&&t.createElement(t.Fragment,null,t.createElement(T.A,{spinning:!0}),c()),!n&&e&&!!e.length&&c(),!n&&(!e||!e.length)&&t.createElement(I.A,null))},{useItemsRef:U}=o.A,_=()=>{const{get:e,set:n}=U();return t.createElement("ul",null,Array.from({length:10}).map(((r,a)=>t.createElement("li",{key:"".concat(a+1),ref:e=>{n("".concat(a+1),e)},onClick:()=>{const n=e("".concat(a+1));alert(n.innerHTML)}},a+1,"：",t.createElement("span",null,"pppppppppppppppppppppppppppppppppppp")))))},w=()=>t.createElement(a.Ay,null,t.createElement(a.wn,{title:"Hooks"},t.createElement("ul",null,t.createElement("li",null,"- useFirst"),t.createElement("li",null,"- useForceUpdate"),t.createElement("li",null,"- usePrevious"),t.createElement("li",null,"- useLatestState"),t.createElement("li",null,"- usePropToState"),t.createElement("li",null,"- useSetState"),t.createElement("li",null,"- useTriggerQuery"),t.createElement("li",null,"- use"),t.createElement("li",null,"- useItemsRef"))),t.createElement(a.Wc,{title:"代码演示",columnCount:1,config:[{id:"p1",name:"useForceUpdate",mode:"code",scope:{React:t},cardProps:{description:{title:"useForceUpdate",info:"useForceUpdate"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { Hooks } from '@baifendian/adhere';\r\n\r\nconst { useForceUpdate } = Hooks;\r\n\r\nexport default () => {\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        forceUpdate();\r\n      }}\r\n    >\r\n      forceUpdate\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>t.createElement(c,null)},{id:"p2",name:"useSetState",mode:"code",scope:{React:t},cardProps:{description:{title:"useSetState",info:"useSetState"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { Hooks, Space } from '@baifendian/adhere';\r\n\r\nconst { useSetState, useFirst, usePrevious } = Hooks;\r\n\r\nexport default () => {\r\n  const [count1Ref, setCount1] = useSetState(0);\r\n\r\n  const [count2Ref, setCount2] = useSetState(0);\r\n\r\n  const [count3Ref, setCount3] = useSetState(0);\r\n\r\n  const [isFirst, updateFirst] = useFirst();\r\n\r\n  const val = usePrevious(3);\r\n\r\n  console.log(val);\r\n\r\n  useEffect(() => {\r\n    console.log('isFirst', isFirst);\r\n    updateFirst(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Space.Group direction=\"horizontal\">\r\n          <Button\r\n            onClick={() => {\r\n              setCount1(count1Ref.current + 1, () => console.log('count1更新完成'));\r\n            }}\r\n          >\r\n            setCount1\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setCount2(count2Ref.current + 1, () => console.log('count2更新完成'));\r\n            }}\r\n          >\r\n            setCount2\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setCount3(\r\n                (count) => count + 1,\r\n                () => console.log('count3更新完成'),\r\n              );\r\n            }}\r\n          >\r\n            setCount3\r\n          </Button>\r\n        </Space.Group>\r\n      </div>\r\n      <div>\r\n        <p>count1: {count1Ref.current}</p>\r\n        <p>count2: {count2Ref.current}</p>\r\n        <p>count3: {count3Ref.current}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",renderChildren:()=>t.createElement(m,null)},{id:"p3",name:"useLatestState",mode:"code",scope:{React:t},cardProps:{description:{title:"useLatestState",info:"useLatestState"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Hooks } from '@baifendian/adhere';\r\n\r\nconst { useLatestState } = Hooks;\r\n\r\nexport default () => {\r\n  const [countRef, setCount] = useLatestState(0);\r\n\r\n  setInterval(() => {\r\n    setCount(countRef.current + 1);\r\n  }, 1000);\r\n\r\n  return <div>{countRef.current}</div>;\r\n};\r\n",renderChildren:()=>t.createElement(v,null)},{id:"p4",name:"useSetState",mode:"code",scope:{React:t},cardProps:{description:{title:"useSetState",info:"useSetState"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Hooks } from '@baifendian/adhere';\r\n\r\nconst { useSetState } = Hooks;\r\n\r\nexport default () => {\r\n  const [countRef, setCount] = useSetState(0);\r\n\r\n  setInterval(() => {\r\n    setCount(countRef.current + 1, () => {\r\n      // console.log('countRef.current', countRef.current);\r\n    });\r\n  }, 1000);\r\n\r\n  return <div>{countRef.current}</div>;\r\n};\r\n",renderChildren:()=>t.createElement(g,null)},{id:"p5",name:"usePropToState",mode:"code",scope:{React:t},cardProps:{description:{title:"usePropToState",info:"usePropToState"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Hooks } from '@baifendian/adhere';\r\n\r\nconst { usePropToState } = Hooks;\r\n\r\nfunction MyComponent({ defaultCount }) {\r\n  const [count, setCount] = usePropToState(defaultCount);\r\n\r\n  setInterval(() => {\r\n    setCount((_count) => {\r\n      return _count + 1;\r\n    });\r\n  }, 1000);\r\n\r\n  return <div>{count}</div>;\r\n}\r\n\r\nexport default () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <MyComponent defaultCount={count} />\r\n      <Button\r\n        onClick={() => {\r\n          setCount(count + 1);\r\n        }}\r\n      >\r\n        设置新值\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n",renderChildren:()=>t.createElement(C,null)},{id:"p6",name:"useTriggerQuery",mode:"code",scope:{React:t},cardProps:{description:{title:"useTriggerQuery",info:"useTriggerQuery"}},type:"PlayGround",codeText:"import { Button, Input, Select } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { Hooks, TableGridLayout } from '@baifendian/adhere';\r\n\r\nconst { useTriggerQuery } = Hooks;\r\n\r\nconst { Label, Value } = TableGridLayout;\r\n\r\nexport default () => {\r\n  const { setFieldsValue, fieldsValue, searchParams, search, reset } = useTriggerQuery({\r\n    userName: '',\r\n    sex: '',\r\n    nativePlace: '',\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TableGridLayout\r\n          bordered\r\n          mode=\"bordered\"\r\n          data={[\r\n            {\r\n              name: 'g1',\r\n              width: '100%',\r\n              columnCount: 3,\r\n              colgroup: [150, 'auto', 150, 'auto', 150, 'auto'],\r\n              data: [\r\n                {\r\n                  key: '姓名',\r\n                  label: <Label>姓名：</Label>,\r\n                  value: (\r\n                    <Value>\r\n                      <Input\r\n                        placeholder=\"姓名\"\r\n                        value={fieldsValue.current.userName}\r\n                        onChange={(e) =>\r\n                          setFieldsValue((draft) => {\r\n                            draft.userName = e.target.value;\r\n                          })\r\n                        }\r\n                      />\r\n                    </Value>\r\n                  ),\r\n                },\r\n                {\r\n                  key: '性别',\r\n                  label: <Label>性别：</Label>,\r\n                  value: (\r\n                    <Value>\r\n                      <Select\r\n                        value={fieldsValue.current.sex}\r\n                        onChange={(value) =>\r\n                          setFieldsValue((draft) => {\r\n                            draft.sex = value;\r\n                          })\r\n                        }\r\n                      >\r\n                        <Select.Option value=\"1\">男</Select.Option>\r\n                        <Select.Option value=\"2\">女</Select.Option>\r\n                      </Select>\r\n                    </Value>\r\n                  ),\r\n                },\r\n                {\r\n                  key: '籍贯',\r\n                  label: <Label>籍贯：</Label>,\r\n                  value: (\r\n                    <Value>\r\n                      <Input\r\n                        placeholder=\"籍贯\"\r\n                        value={fieldsValue.current.nativePlace}\r\n                        onChange={(e) =>\r\n                          setFieldsValue((draft) => {\r\n                            draft.nativePlace = e.target.value;\r\n                          })\r\n                        }\r\n                      />\r\n                    </Value>\r\n                  ),\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          block\r\n          onClick={() => {\r\n            search(() => {\r\n              console.log('searchParams', searchParams.current);\r\n            });\r\n          }}\r\n        >\r\n          查询\r\n        </Button>\r\n        <Button\r\n          block\r\n          onClick={() => {\r\n            reset(() => {\r\n              console.log('searchParams', searchParams.current);\r\n            });\r\n          }}\r\n        >\r\n          重置\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",renderChildren:()=>t.createElement(x,null)},{id:"p7",name:"use",mode:"code",scope:{React:t},cardProps:{description:{title:"use",info:"use"}},type:"PlayGround",codeText:"import { Button, Empty, Skeleton, Table } from 'antd';\r\nimport Mockjs from 'mockjs';\r\nimport React from 'react';\r\n\r\nimport { Hooks, Spin } from '@baifendian/adhere';\r\n\r\nconst { use } = Hooks;\r\n\r\nfunction loadData(...args) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(\r\n        Array.from({ length: 10 }).map(() => ({\r\n          id: '',\r\n          name: Mockjs.mock('@guid'),\r\n          jg: Mockjs.mock('@cname'),\r\n          address: Mockjs.mock('@cname'),\r\n        })),\r\n      );\r\n    }, 2000);\r\n  });\r\n}\r\n\r\nexport default () => {\r\n  const { data, isPending, isValidate, reset, reload, type } = use(loadData, []);\r\n\r\n  function renderTable() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              reset();\r\n            }}\r\n          >\r\n            重置成reset\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              reload();\r\n            }}\r\n          >\r\n            重置成reload\r\n          </Button>\r\n        </div>\r\n        <Table\r\n          dataSource={data}\r\n          columns={[\r\n            {\r\n              title: '姓名',\r\n              key: 'name',\r\n              dataIndex: 'name',\r\n            },\r\n            {\r\n              title: '籍贯',\r\n              key: 'jg',\r\n              dataIndex: 'jg',\r\n            },\r\n            {\r\n              title: '住址',\r\n              key: 'address',\r\n              dataIndex: 'address',\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isPending && type === 'reset' && (\r\n        <Skeleton\r\n          avatar\r\n          paragraph={{\r\n            rows: 4,\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {isPending && type === 'reload' && (\r\n        <>\r\n          <Spin spinning />\r\n          {renderTable()}\r\n        </>\r\n      )}\r\n\r\n      {!isPending && data && !!data.length && renderTable()}\r\n\r\n      {!isPending && (!data || !data.length) && <Empty />}\r\n    </>\r\n  );\r\n};\r\n",renderChildren:()=>t.createElement(G,null)},{id:"p8",name:"useItemsRef",mode:"code",scope:{React:t},cardProps:{description:{title:"useItemsRef",info:"useItemsRef"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Hooks } from '@baifendian/adhere';\r\n\r\nconst { useItemsRef } = Hooks;\r\n\r\nexport default () => {\r\n  const { get, set } = useItemsRef();\r\n\r\n  return (\r\n    <ul>\r\n      {Array.from({ length: 10 }).map((t, _index) => (\r\n        <li\r\n          key={`${_index + 1}`}\r\n          ref={(node) => {\r\n            set(`${_index + 1}`, node);\r\n          }}\r\n          onClick={() => {\r\n            const el = get(`${_index + 1}`);\r\n            alert(el.innerHTML);\r\n          }}\r\n        >\r\n          {_index + 1}：<span>pppppppppppppppppppppppppppppppppppp</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n",renderChildren:()=>t.createElement(_,null)}]}))},61444:(e,n,r)=>{r.d(n,{A:()=>t});const t=r(6940).A},32517:(e,n,r)=>{r.d(n,{A:()=>t});const t=r(2382).A},38848:(e,n,r)=>{r.d(n,{A:()=>t});const t=r(68729).A},38948:e=>{e.exports=JSON.parse('{"rE":"2.11.0","Jk":{"O":"https://github.com/playerljc/adhere"}}')}}]);