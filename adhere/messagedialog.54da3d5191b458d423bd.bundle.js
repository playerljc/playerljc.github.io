"use strict";(self.webpackChunk_ctsj_build=self.webpackChunk_ctsj_build||[]).push([[6956],{54763:(e,r,n)=>{n.d(r,{A:()=>s});var t=n(75745),a=n(85820),o="adhere-ui-global-indicator",l=a.A.Dict.value.ResourceNormalMaxZIndex.value,i=new Set;const s={show:function(e,r,n,a){void 0===e&&(e=document.body),void 0===r&&(r=""),void 0===n&&(n=l),void 0===a&&(a="default");var s=(r=((s=document.createElement("div")).innerHTML='\n      <div class="'.concat(o,'" style="z-index: ').concat(n||l,'">\n       <span class="').concat(o,'-dot"></span>\n       ').concat(r&&'<div class="'.concat(o,'-text">').concat(r,"</div>"),"\n      </div>"),s.firstElementChild)).querySelector(".".concat(o,"-dot")),c=(a=new Map([["small",.1],["default",.2],["large",.3]]).get(a),document.documentElement.style.getPropertyValue("--adhere-color-primary"));return new t.y({lines:4,length:0,width:52,radius:29,scale:a,corners:1,speed:2.1,rotate:19,animation:"spinner-line-fade-quick",direction:1,color:c,fadeColor:"transparent",top:"46%",left:"50%",shadow:"0 0 1px transparent",zIndex:n,className:"".concat(o,"-spinner"),position:"absolute"}).spin(s),e===document.body&&(r.style.position="fixed"),e.appendChild(r),i.add(r),r},hide:function(e){var r,n;if(e)try{null!=(n=null==(r=null==e?void 0:e.parentElement)?void 0:r.removeChild)&&n.call(r,e),i.delete(e)}catch(e){}},hideAll:function(){Array.from(i.values()).forEach((function(e){var r,n;try{null!=(n=null==(r=null==e?void 0:e.parentElement)?void 0:r.removeChild)&&n.call(r,e)}catch(e){}})),i.clear()}}},69171:(e,r,n)=>{n.d(r,{A:()=>c});var t,a=n(74713),o=n(27476),l=n(59418),i=function(){return(i=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},s=function(e,r){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var t=0,a=Object.getOwnPropertySymbols(e);t<a.length;t++)r.indexOf(a[t])<0&&Object.prototype.propertyIsEnumerable.call(e,a[t])&&(n[a[t]]=e[a[t]]);return n};const c={openSuccessMessage:function(e,r,n){return a.Ay.success(e||l.Ay.v("操作成功"),r,n)},openSuccessDialog:function(e){var r=void 0===(r=e.duration)?3e3:r,n=(e=s(e,["duration"]),o.A.success(i({title:l.Ay.v("提示"),content:l.Ay.v("操作成功"),mask:!1,maskClosable:!0,footer:null},null!=e?e:{})));return r&&(t&&clearTimeout(t),t=setTimeout((function(){n.destroy()}),r)),n}}},38482:(e,r,n)=>{n.r(r),n.d(r,{default:()=>O});const t="import { Transfer } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\n\r\nconst mockData = Array.from({\r\n  length: 20,\r\n}).map((_, i) => ({\r\n  key: i.toString(),\r\n  title: `content${i + 1}`,\r\n  description: `description of content${i + 1}`,\r\n}));\r\n\r\nfunction SelectPerson(props, ref) {\r\n  const [targetKeys, setTargetKeys] = useState(props.value);\r\n\r\n  useEffect(() => {\r\n    setTargetKeys(props.value);\r\n  }, [props.value]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    getValues: () => targetKeys,\r\n  }));\r\n\r\n  return (\r\n    <Transfer\r\n      dataSource={mockData}\r\n      targetKeys={targetKeys}\r\n      render={(item) => item.title}\r\n      onChange={(sourceSelectedKeys) => {\r\n        setTargetKeys(sourceSelectedKeys);\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default forwardRef(SelectPerson);\r\n";var a=n(26322),o=n(19994),l=n(40370),i=n(80711);const s=n.p+"f9953a8dcdd0c1b3da32.svg",c=()=>a.createElement(i.Ay,{type:"primary",onClick:()=>{l.A.Confirm({title:"提示",text:"确认要进行此操作码？",width:300,zIndex:1e3,local:"zh_CN",icon:a.createElement("img",{src:s,alt:"",width:30}),onSuccess:()=>new Promise((e=>{alert("点击了确认"),e()}))})}},"Open Confirm"),d=()=>a.createElement(i.Ay,{type:"primary",onClick:()=>{l.A.Alert({title:"提示",text:"操作失败！",width:300,zIndex:1e3,local:"zh_CN",icon:a.createElement("img",{src:s,alt:"",width:30})})}},"Open Alert");var m=n(41283);const u=()=>a.createElement(i.Ay,{type:"primary",onClick:()=>{l.A.Prompt({title:"提示",config:{type:m.A.SLIDER,label:"大小",initialValue:10},width:300,zIndex:1e3,local:"zh_CN",onSuccess:e=>new Promise((r=>{alert(e),r()}))})}},"Open Prompt"),p=()=>a.createElement(i.Ay,{type:"primary",onClick:()=>{l.A.InputPrompt({title:"提示",config:{label:"姓名",initialValue:"张三"},width:300,zIndex:1e3,local:"zh_CN",onSuccess:e=>new Promise((r=>{alert(e),r()}))})}},"Open InputPrompt"),f=()=>a.createElement(i.Ay,{type:"primary",onClick:()=>{l.A.TextAreaPrompt({title:"提示",config:{label:"地址",initialValue:""},width:300,zIndex:1e3,local:"zh_CN",onSuccess:e=>new Promise((r=>{alert(e),r()}))})}},"Open TextAreaPrompt"),g=()=>a.createElement(i.Ay,{type:"primary",onClick:()=>{l.A.PassWordPrompt({title:"提示",config:{label:"密码",initialValue:""},width:300,zIndex:1e3,local:"zh_CN",onSuccess:e=>new Promise((r=>{alert(e),r()}))})}},"Open PassWordPrompt"),y=()=>a.createElement(i.Ay,{type:"primary",onClick:()=>{l.A.NumberPrompt({title:"提示",config:{label:"数字",initialValue:""},width:300,zIndex:1e3,local:"zh_CN",onSuccess:e=>new Promise((r=>{alert(e),r()}))})}},"Open NumberPrompt");var h=n(16712);const P=()=>a.createElement(i.Ay,{type:"primary",onClick:()=>{const{close:e}=l.A.Modal({config:{title:"提示"},defaultCloseBtn:!1,children:a.createElement(h.Ay,{title:"Your operation has been executed",extra:a.createElement(i.Ay,{type:"primary",key:"console",onClick:()=>{e()}},"Close")})})}},"Open Modal"),C=()=>a.createElement(i.Ay,{type:"primary",onClick:()=>{const{close:e}=l.A.MaximizeModal({config:{title:"提示"},defaultCloseBtn:!1,children:a.createElement(h.Ay,{title:"Your operation has been executed",extra:a.createElement(i.Ay,{type:"primary",key:"console",onClick:()=>{e()}},"Close")})})}},"Open MaximizeModal"),b=()=>a.createElement(l.A.TriggerPrompt,{okText:"确认",renderTrigger:()=>a.createElement(i.Ay,{type:"primary"},"触发"),modalConfig:{config:{title:"提示"}},onSubmit:()=>new Promise((e=>{setTimeout((()=>{e(123)}),2e3)}))},a.createElement(h.Ay,{status:"success",title:"Successfully Purchased Cloud Server ECS!",subTitle:"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait."}));var v=n(71860),T=n(45738);const x=Array.from({length:20}).map(((e,r)=>({key:r.toString(),title:"content".concat(r+1),description:"description of content".concat(r+1)})));function E(e,r){const[n,t]=(0,a.useState)(e.value);return(0,a.useEffect)((()=>{t(e.value)}),[e.value]),(0,a.useImperativeHandle)(r,(()=>({getValues:()=>n}))),a.createElement(T.A,(0,v.A)({dataSource:x,targetKeys:n,render:e=>e.title,onChange:e=>{t(e)}},e))}const S=(0,a.forwardRef)(E),A=()=>{const[e,r]=(0,a.useState)([]),n=(0,a.useRef)();return a.createElement(l.A.TriggerPrompt,{okText:"确认",renderTrigger:()=>a.createElement(i.Ay,{type:"primary"},"选取(",e.length,")"),modalConfig:{config:{title:"人员选择"}},onSubmit:()=>new Promise((e=>{e(n.current.getValues())})),value:e,onChange:e=>{r(e)}},a.createElement(S,{ref:n}))};var M=n(89765);const R=()=>{const e=(0,a.useRef)(),[r]=M.A.useForm(),n=M.A.useWatch("person",r);return a.createElement(M.A,{name:"PersonForm",form:r,onFinish:e=>{alert(e)}},a.createElement(M.A.Item,{label:"人员选择",name:"person",rules:[{required:!0,message:"请选择人员"}]},a.createElement(l.A.TriggerPrompt,{okText:"确认",renderTrigger:()=>a.createElement(i.Ay,{type:"primary"},"选取(",null==n?void 0:n.length,")"),modalConfig:{config:{title:"人员选择"}},onSubmit:()=>new Promise((r=>{r(e.current.getValues())}))},a.createElement(S,{ref:e}))),a.createElement(M.A.Item,{wrapperCol:{offset:8,span:16}},a.createElement(i.Ay,{type:"primary",htmlType:"submit"},"提交")))};var V=n(73288),I=n(18647),w=n(48305),k=n(87318);function D(e,r){const[n]=M.A.useForm();return(0,a.useImperativeHandle)(r,(()=>({getValues:()=>n.validateFields()}))),a.createElement(M.A,{name:"userForm",form:n,labelCol:{span:3},wrapperCol:{span:21}},a.createElement(M.A.Item,{name:"name",label:"姓名",rules:[{required:!0,message:"请输入姓名"}]},a.createElement(w.A,{placeholder:"姓名"})),a.createElement(M.A.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择姓名"}]},a.createElement(k.A,null,a.createElement(k.A.Option,{value:"1"},"男"),a.createElement(k.A.Option,{value:"2"},"女"))),a.createElement(M.A.Item,{name:"address",label:"地址"},a.createElement(w.A,{placeholder:"地址"})))}const q=(0,a.forwardRef)(D),z=()=>{const e=(0,a.useRef)();return a.createElement(l.A.Trigger,{okText:"确认",renderTrigger:()=>a.createElement(i.Ay,{type:"primary"},"添加任务"),modalConfig:{config:{title:"任务"}},actions:[{key:"submit",type:"primary",children:a.createElement("span",null,"提交"),onClick:()=>new Promise(((r,n)=>{e.current.getValues().then((e=>{console.log("values",e);const n=I.A.show();setTimeout((()=>{I.A.hide(n),r(),setTimeout((()=>{V.A.openSuccessDialog({})}),500)}),1500)})).catch((e=>n(e)))}))},{key:"save",children:a.createElement("span",null,"暂存"),onClick:()=>new Promise(((r,n)=>{e.current.getValues().then((e=>{console.log("values",e);const n=I.A.show();setTimeout((()=>{I.A.hide(n),r(),setTimeout((()=>{V.A.openSuccessDialog({})}),500)}),1500)})).catch((e=>n(e)))}))}]},a.createElement(q,{ref:e}))},B=()=>a.createElement(i.Ay,{type:"primary",onClick:()=>{const{setConfig:e}=l.A.Modal({config:{title:"提示",width:"50%"},defaultCloseBtn:!1,children:a.createElement("div",null,a.createElement("button",{onClick:()=>{e((e=>{e.title="custom",e.width="30%"}))}},"设置标题为custom，宽度变成30%"))})}},"Open Modal"),O=()=>a.createElement(o.Ay,null,a.createElement(o.wn,{title:"MessageDialog"},a.createElement("p",null,"对 ant-design 的<Model>进行封装"),a.createElement("ul",null,a.createElement("li",null,"- 支持使用 open 方式打开"),a.createElement("li",null,"- 支持 Modal 原始方法"),a.createElement("li",null,"- 支持预定义 Alert、Confirm"),a.createElement("li",null,"- 不与变量进行绑定，开箱即用的功能"))),a.createElement(o.Wc,{title:"代码演示",columnCount:1,config:[{id:"p1",name:"Confirm",mode:"code",scope:{React:a},cardProps:{description:{title:"Confirm",info:"使用Confirm"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nimport icon from '../icon.svg';\r\n\r\nexport default () => {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        MessageDialog.Confirm({\r\n          title: '提示',\r\n          text: '确认要进行此操作码？',\r\n          width: 300,\r\n          zIndex: 1000,\r\n          local: 'zh_CN',\r\n          icon: <img src={icon} alt=\"\" width={30} />,\r\n          onSuccess: () => {\r\n            return new Promise((resolve) => {\r\n              alert('点击了确认');\r\n\r\n              resolve();\r\n            });\r\n          },\r\n        });\r\n      }}\r\n    >\r\n      Open Confirm\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>a.createElement(c,null)},{id:"p2",name:"Alert",mode:"code",scope:{React:a},cardProps:{description:{title:"Alert",info:"使用Alert"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nimport icon from '../icon.svg';\r\n\r\nexport default () => {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        MessageDialog.Alert({\r\n          title: '提示',\r\n          text: '操作失败！',\r\n          width: 300,\r\n          zIndex: 1000,\r\n          local: 'zh_CN',\r\n          icon: <img src={icon} alt=\"\" width={30} />,\r\n        });\r\n      }}\r\n    >\r\n      Open Alert\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>a.createElement(d,null)},{id:"p3",name:"Prompt",mode:"code",scope:{React:a},cardProps:{description:{title:"Prompt",info:"使用Prompt"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { FormItemCreator, MessageDialog } from '@baifendian/adhere';\r\n\r\nexport default () => {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        MessageDialog.Prompt({\r\n          title: '提示',\r\n          config: {\r\n            type: FormItemCreator.SLIDER,\r\n            label: '大小',\r\n            initialValue: 10,\r\n          },\r\n          width: 300,\r\n          zIndex: 1000,\r\n          local: 'zh_CN',\r\n          onSuccess: (value) => {\r\n            return new Promise((resolve) => {\r\n              alert(value);\r\n              resolve();\r\n            });\r\n          },\r\n        });\r\n      }}\r\n    >\r\n      Open Prompt\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>a.createElement(u,null)},{id:"p4",name:"InputPrompt",mode:"code",scope:{React:a},cardProps:{description:{title:"InputPrompt",info:"使用InputPrompt"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nexport default () => {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        MessageDialog.InputPrompt({\r\n          title: '提示',\r\n          config: {\r\n            label: '姓名',\r\n            initialValue: '张三',\r\n          },\r\n          width: 300,\r\n          zIndex: 1000,\r\n          local: 'zh_CN',\r\n          onSuccess: (value) => {\r\n            return new Promise((resolve) => {\r\n              alert(value);\r\n              resolve();\r\n            });\r\n          },\r\n        });\r\n      }}\r\n    >\r\n      Open InputPrompt\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>a.createElement(p,null)},{id:"p5",name:"TextAreaPrompt",mode:"code",scope:{React:a},cardProps:{description:{title:"TextAreaPrompt",info:"使用TextAreaPrompt"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nexport default () => {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        MessageDialog.TextAreaPrompt({\r\n          title: '提示',\r\n          config: {\r\n            label: '地址',\r\n            initialValue: '',\r\n          },\r\n          width: 300,\r\n          zIndex: 1000,\r\n          local: 'zh_CN',\r\n          onSuccess: (value) => {\r\n            return new Promise((resolve) => {\r\n              alert(value);\r\n              resolve();\r\n            });\r\n          },\r\n        });\r\n      }}\r\n    >\r\n      Open TextAreaPrompt\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>a.createElement(f,null)},{id:"p6",name:"PassWordPrompt",mode:"code",scope:{React:a},cardProps:{description:{title:"PassWordPrompt",info:"使用PassWordPrompt"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nexport default () => {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        MessageDialog.PassWordPrompt({\r\n          title: '提示',\r\n          config: {\r\n            label: '密码',\r\n            initialValue: '',\r\n          },\r\n          width: 300,\r\n          zIndex: 1000,\r\n          local: 'zh_CN',\r\n          onSuccess: (value) => {\r\n            return new Promise((resolve) => {\r\n              alert(value);\r\n              resolve();\r\n            });\r\n          },\r\n        });\r\n      }}\r\n    >\r\n      Open PassWordPrompt\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>a.createElement(g,null)},{id:"p7",name:"NumberPrompt",mode:"code",scope:{React:a},cardProps:{description:{title:"NumberPrompt",info:"使用NumberPrompt"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nexport default () => {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        MessageDialog.NumberPrompt({\r\n          title: '提示',\r\n          config: {\r\n            label: '数字',\r\n            initialValue: '',\r\n          },\r\n          width: 300,\r\n          zIndex: 1000,\r\n          local: 'zh_CN',\r\n          onSuccess: (value) => {\r\n            return new Promise((resolve) => {\r\n              alert(value);\r\n              resolve();\r\n            });\r\n          },\r\n        });\r\n      }}\r\n    >\r\n      Open NumberPrompt\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>a.createElement(y,null)},{id:"p8",name:"Modal",mode:"code",scope:{React:a},cardProps:{description:{title:"Modal",info:"使用Modal"}},type:"PlayGround",codeText:"import { Button, Result } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nexport default () => {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        const { close } = MessageDialog.Modal({\r\n          config: {\r\n            title: '提示',\r\n          },\r\n          defaultCloseBtn: false,\r\n          children: (\r\n            <Result\r\n              title=\"Your operation has been executed\"\r\n              extra={\r\n                <Button\r\n                  type=\"primary\"\r\n                  key=\"console\"\r\n                  onClick={() => {\r\n                    close();\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              }\r\n            />\r\n          ),\r\n        });\r\n      }}\r\n    >\r\n      Open Modal\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>a.createElement(P,null)},{id:"p9",name:"MaximizeModal",mode:"code",scope:{React:a},cardProps:{description:{title:"MaximizeModal",info:"使用MaximizeModal"}},type:"PlayGround",codeText:"import { Button, Result } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nexport default () => {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        const { close } = MessageDialog.MaximizeModal({\r\n          config: {\r\n            title: '提示',\r\n          },\r\n          defaultCloseBtn: false,\r\n          children: (\r\n            <Result\r\n              title=\"Your operation has been executed\"\r\n              extra={\r\n                <Button\r\n                  type=\"primary\"\r\n                  key=\"console\"\r\n                  onClick={() => {\r\n                    close();\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              }\r\n            />\r\n          ),\r\n        });\r\n      }}\r\n    >\r\n      Open MaximizeModal\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>a.createElement(C,null)},{id:"p10",name:"使用TriggerPrompt弹出MessageDialog",mode:"code",scope:{React:a},cardProps:{description:{title:"使用TriggerPrompt弹出MessageDialog",info:"基本的显示 - 只显示内容"}},type:"PlayGround",codeText:'import { Button, Result } from \'antd\';\r\nimport React from \'react\';\r\n\r\nimport { MessageDialog } from \'@baifendian/adhere\';\r\n\r\nexport default () => {\r\n  return (\r\n    <MessageDialog.TriggerPrompt\r\n      okText="确认"\r\n      renderTrigger={() => <Button type="primary">触发</Button>}\r\n      modalConfig={{\r\n        config: {\r\n          title: \'提示\',\r\n        },\r\n      }}\r\n      onSubmit={() =>\r\n        new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            resolve(123);\r\n          }, 2000);\r\n        })\r\n      }\r\n    >\r\n      <Result\r\n        status="success"\r\n        title="Successfully Purchased Cloud Server ECS!"\r\n        subTitle="Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait."\r\n      />\r\n    </MessageDialog.TriggerPrompt>\r\n  );\r\n};\r\n',renderChildren:()=>a.createElement(b,null)},{id:"p11",name:"使用TriggerPrompt选取人员",cardProps:{description:{title:"使用TriggerPrompt选取人员",info:"在弹出的穿梭框中选取指定的人员"}},active:"p11.jsx",config:[{key:"p11.jsx",title:"p11.jsx",codeText:"import { Button } from 'antd';\r\nimport React, { useRef, useState } from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nimport SelectPerson from '../SelectPerson';\r\n\r\nexport default () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const personSelectRef = useRef();\r\n\r\n  return (\r\n    <MessageDialog.TriggerPrompt\r\n      okText=\"确认\"\r\n      renderTrigger={() => <Button type=\"primary\">选取({persons.length})</Button>}\r\n      modalConfig={{\r\n        config: {\r\n          title: '人员选择',\r\n        },\r\n      }}\r\n      onSubmit={() =>\r\n        new Promise((resolve) => {\r\n          resolve(personSelectRef.current.getValues());\r\n        })\r\n      }\r\n      value={persons}\r\n      onChange={(_values) => {\r\n        setPersons(_values);\r\n      }}\r\n    >\r\n      <SelectPerson ref={personSelectRef} />\r\n    </MessageDialog.TriggerPrompt>\r\n  );\r\n};\r\n"},{key:"SelectPerson.jsx",title:"SelectPerson.jsx",codeText:t}],type:"PlayGroundTab",renderChildren:()=>a.createElement(A,null)},{id:"p12",name:"在表单中当作一个FormItem来使用TriggerPrompt",cardProps:{description:{title:"在表单中当作一个FormItem来使用TriggerPrompt",info:"在表单中当作一个FormItem来使用TriggerPrompt"}},type:"PlayGroundTab",active:"p12.jsx",config:[{key:"p12.jsx",title:"p12.jsx",codeText:"import { Button, Form } from 'antd';\r\nimport React, { useRef, useState } from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nimport SelectPerson from '../SelectPerson';\r\n\r\nexport default () => {\r\n  const personSelectRef = useRef();\r\n  const [form] = Form.useForm();\r\n  const watchPerson = Form.useWatch('person', form);\r\n\r\n  return (\r\n    <Form\r\n      name=\"PersonForm\"\r\n      form={form}\r\n      onFinish={(values) => {\r\n        alert(values);\r\n      }}\r\n    >\r\n      <Form.Item\r\n        label=\"人员选择\"\r\n        name=\"person\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择人员',\r\n          },\r\n        ]}\r\n      >\r\n        <MessageDialog.TriggerPrompt\r\n          okText=\"确认\"\r\n          renderTrigger={() => <Button type=\"primary\">选取({watchPerson?.length})</Button>}\r\n          modalConfig={{\r\n            config: {\r\n              title: '人员选择',\r\n            },\r\n          }}\r\n          onSubmit={() =>\r\n            new Promise((resolve) => {\r\n              resolve(personSelectRef.current.getValues());\r\n            })\r\n          }\r\n        >\r\n          <SelectPerson ref={personSelectRef} />\r\n        </MessageDialog.TriggerPrompt>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n"},{key:"SelectPerson.jsx",title:"SelectPerson.jsx",codeText:t}],renderChildren:()=>a.createElement(R,null)},{id:"p13",name:"处理一个表单",cardProps:{description:{title:"弹出一个表单进行处理",info:"弹出一个表单进行处理"}},type:"PlayGroundTab",active:"p13.jsx",config:[{key:"p13.jsx",title:"p13.jsx",codeText:"import { Button } from 'antd';\r\nimport React, { useRef } from 'react';\r\n\r\nimport { GlobalIndicator, MessageDialog, SuccessPrompt } from '@baifendian/adhere';\r\n\r\nimport Task from '../Task';\r\n\r\nexport default () => {\r\n  const taskSelectRef = useRef();\r\n\r\n  return (\r\n    <MessageDialog.Trigger\r\n      okText=\"确认\"\r\n      renderTrigger={() => <Button type=\"primary\">添加任务</Button>}\r\n      modalConfig={{\r\n        config: {\r\n          title: '任务',\r\n        },\r\n      }}\r\n      actions={[\r\n        {\r\n          key: 'submit',\r\n          type: 'primary',\r\n          children: <span>提交</span>,\r\n          onClick: () =>\r\n            new Promise((resolve, reject) => {\r\n              taskSelectRef.current\r\n                .getValues()\r\n                .then((values) => {\r\n                  console.log('values', values);\r\n                  const indicator = GlobalIndicator.show();\r\n\r\n                  setTimeout(() => {\r\n                    GlobalIndicator.hide(indicator);\r\n                    resolve();\r\n\r\n                    setTimeout(() => {\r\n                      SuccessPrompt.openSuccessDialog({});\r\n                    }, 500);\r\n                  }, 1500);\r\n                })\r\n                .catch((error) => reject(error));\r\n            }),\r\n        },\r\n        {\r\n          key: 'save',\r\n          children: <span>暂存</span>,\r\n          onClick: () =>\r\n            new Promise((resolve, reject) => {\r\n              taskSelectRef.current\r\n                .getValues()\r\n                .then((values) => {\r\n                  console.log('values', values);\r\n                  const indicator = GlobalIndicator.show();\r\n\r\n                  setTimeout(() => {\r\n                    GlobalIndicator.hide(indicator);\r\n                    resolve();\r\n\r\n                    setTimeout(() => {\r\n                      SuccessPrompt.openSuccessDialog({});\r\n                    }, 500);\r\n                  }, 1500);\r\n                })\r\n                .catch((error) => reject(error));\r\n            }),\r\n        },\r\n      ]}\r\n    >\r\n      <Task ref={taskSelectRef} />\r\n    </MessageDialog.Trigger>\r\n  );\r\n};\r\n"},{key:"Task.jsx",title:"Task.jsx",codeText:'import { Form, Input, Select } from \'antd\';\r\nimport React, { forwardRef, useImperativeHandle } from \'react\';\r\n\r\nfunction Task(props, ref) {\r\n  const [form] = Form.useForm();\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    getValues: () => form.validateFields(),\r\n  }));\r\n\r\n  return (\r\n    <Form\r\n      name="userForm"\r\n      form={form}\r\n      labelCol={{\r\n        span: 3,\r\n      }}\r\n      wrapperCol={{\r\n        span: 21,\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="name"\r\n        label="姓名"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请输入姓名\',\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder="姓名" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择姓名\',\r\n          },\r\n        ]}\r\n      >\r\n        <Select>\r\n          <Select.Option value="1">男</Select.Option>\r\n          <Select.Option value="2">女</Select.Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item name="address" label="地址">\r\n        <Input placeholder="地址" />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default forwardRef(Task);\r\n'}],renderChildren:()=>a.createElement(z,null)},{id:"p14",name:"动态设置Modal的参数",mode:"code",scope:{React:a},cardProps:{description:{title:"动态设置Modal的参数",info:"动态设置Modal的参数"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { MessageDialog } from '@baifendian/adhere';\r\n\r\nexport default () => {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        const { setConfig } = MessageDialog.Modal({\r\n          config: {\r\n            title: '提示',\r\n            width: '50%',\r\n          },\r\n          defaultCloseBtn: false,\r\n          children: (\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  setConfig((currentModalConfig) => {\r\n                    currentModalConfig.title = 'custom';\r\n                    currentModalConfig.width = '30%';\r\n                  });\r\n                }}\r\n              >\r\n                设置标题为custom，宽度变成30%\r\n              </button>\r\n            </div>\r\n          ),\r\n        });\r\n      }}\r\n    >\r\n      Open Modal\r\n    </Button>\r\n  );\r\n};\r\n",renderChildren:()=>a.createElement(B,null)}]}),a.createElement(o.I7,{title:"Api",config:[{border:!0,title:"Confirm方法",data:[{name:"MessageDialog.Confirm",desc:"打开确认对话框",modifier:"static",params:[{name:"title",desc:"标题",type:"String | React.ReactElement",defaultVal:"",required:""},{name:"text",desc:"显示的内容",type:"String | React.ReactElement",defaultVal:"",required:""},{name:"width",desc:"宽度",type:"number",defaultVal:"300",required:""},{name:"zIndex",desc:"层级",type:"number",defaultVal:"1000",required:""},{name:"local",desc:"语言",type:"string [zh_CN | pt_PT | en_US]",defaultVal:"zh_CN",required:""},{name:"icon",desc:"图标",type:"string | React.ReactElement",defaultVal:"",required:""},{name:"onSuccess",desc:"成功的回调函数，返回Promise",type:"Function",defaultVal:"() => {}",required:""}],returnType:"void",returnDesc:""}]},{border:!0,title:"Alert方法",data:[{name:"MessageDialog.Alert",desc:"打开Alert对话框",modifier:"static",params:[{name:"title",desc:"标题",type:"String | React.ReactElement",defaultVal:"",required:""},{name:"text",desc:"显示的内容",type:"String | React.ReactElement",defaultVal:"",required:""},{name:"width",desc:"宽度",type:"number",defaultVal:"300",required:""},{name:"zIndex",desc:"层级",type:"number",defaultVal:"1000",required:""},{name:"local",desc:"语言",type:"string [zh_CN | pt_PT | en_US]",defaultVal:"zh_CN",required:""},{name:"icon",desc:"图标",type:"string | React.ReactElement",defaultVal:"",required:""}],returnType:"void",returnDesc:""}]},{border:!0,title:"Prompt方法",data:[{name:"MessageDialog.Prompt",desc:"打开一个FormItem的窗体",modifier:"static",params:[{name:"title",desc:"标题",type:"String | React.ReactElement",defaultVal:"",required:""},{name:"config",desc:"FormItemCreator的一个配置，请参考adhere-ui-formitemcreator",type:"Object",defaultVal:"",required:""},{name:"layout",desc:"FormItemCreator的layout配置，请参考adhere-ui-formitemcreator",type:"Object",defaultVal:"",required:""},{name:"width",desc:"宽度",type:"number",defaultVal:"300",required:""},{name:"zIndex",desc:"层级",type:"number",defaultVal:"1000",required:""},{name:"local",desc:"语言",type:"string [zh_CN | pt_PT | en_US]",defaultVal:"zh_CN",required:""},{name:"icon",desc:"图标",type:"string | React.ReactElement",defaultVal:"",required:""}],returnType:"void",returnDesc:""}]},{border:!0,title:"InputPrompt方法",data:[{name:"MessageDialog.InputPrompt方法",desc:"打开一个InputFormItem的窗体",modifier:"static",params:[{name:"title",desc:"标题",type:"String | React.ReactElement",defaultVal:"",required:""},{name:"config",desc:"FormItemCreator的一个配置，请参考adhere-ui-formitemcreator",type:"Object",defaultVal:"",required:""},{name:"layout",desc:"FormItemCreator的layout配置，请参考adhere-ui-formitemcreator",type:"Object",defaultVal:"",required:""},{name:"width",desc:"宽度",type:"number",defaultVal:"300",required:""},{name:"zIndex",desc:"层级",type:"number",defaultVal:"1000",required:""},{name:"local",desc:"语言",type:"string [zh_CN | pt_PT | en_US]",defaultVal:"zh_CN",required:""},{name:"icon",desc:"图标",type:"string | React.ReactElement",defaultVal:"",required:""}],returnType:"void",returnDesc:""}]},{border:!0,title:"TextAreaPrompt方法",data:[{name:"MessageDialog.TextAreaPrompt方法",desc:"打开一个TextAreaFormItem的窗体",modifier:"static",params:[{name:"title",desc:"标题",type:"String | React.ReactElement",defaultVal:"",required:""},{name:"config",desc:"FormItemCreator的一个配置，请参考adhere-ui-formitemcreator",type:"Object",defaultVal:"",required:""},{name:"layout",desc:"FormItemCreator的layout配置，请参考adhere-ui-formitemcreator",type:"Object",defaultVal:"",required:""},{name:"width",desc:"宽度",type:"number",defaultVal:"300",required:""},{name:"zIndex",desc:"层级",type:"number",defaultVal:"1000",required:""},{name:"local",desc:"语言",type:"string [zh_CN | pt_PT | en_US]",defaultVal:"zh_CN",required:""},{name:"icon",desc:"图标",type:"string | React.ReactElement",defaultVal:"",required:""}],returnType:"void",returnDesc:""}]},{border:!0,title:"PassWordPrompt方法",data:[{name:"MessageDialog.PassWordPrompt方法",desc:"打开一个PassWordFormItem的窗体",modifier:"static",params:[{name:"title",desc:"标题",type:"String | React.ReactElement",defaultVal:"",required:""},{name:"config",desc:"FormItemCreator的一个配置，请参考adhere-ui-formitemcreator",type:"Object",defaultVal:"",required:""},{name:"layout",desc:"FormItemCreator的layout配置，请参考adhere-ui-formitemcreator",type:"Object",defaultVal:"",required:""},{name:"width",desc:"宽度",type:"number",defaultVal:"300",required:""},{name:"zIndex",desc:"层级",type:"number",defaultVal:"1000",required:""},{name:"local",desc:"语言",type:"string [zh_CN | pt_PT | en_US]",defaultVal:"zh_CN",required:""},{name:"icon",desc:"图标",type:"string | React.ReactElement",defaultVal:"",required:""}],returnType:"void",returnDesc:""}]},{border:!0,title:"NumberPromptPrompt方法",data:[{name:"MessageDialog.NumberPrompt方法",desc:"打开一个NumberFormItem的窗体",modifier:"static",params:[{name:"title",desc:"标题",type:"String | React.ReactElement",defaultVal:"",required:""},{name:"config",desc:"FormItemCreator的一个配置，请参考adhere-ui-formitemcreator",type:"Object",defaultVal:"",required:""},{name:"layout",desc:"FormItemCreator的layout配置，请参考adhere-ui-formitemcreator",type:"Object",defaultVal:"",required:""},{name:"width",desc:"宽度",type:"number",defaultVal:"300",required:""},{name:"zIndex",desc:"层级",type:"number",defaultVal:"1000",required:""},{name:"local",desc:"语言",type:"string [zh_CN | pt_PT | en_US]",defaultVal:"zh_CN",required:""},{name:"icon",desc:"图标",type:"string | React.ReactElement",defaultVal:"",required:""}],returnType:"void",returnDesc:""}]},{border:!0,title:"Modal方法",data:[{name:"MessageDialog.Modal",desc:"打开一个模式对话框",modifier:"static",params:[{name:"config",desc:"配置",type:"Object - antd的Modal的配置",defaultVal:"{}",required:""},{name:"children",desc:"显示的内容",type:"React.ReactElement | null",defaultVal:"",required:""},{name:"defaultCloseBtn",desc:"是否缺省有关闭按钮",type:"boolean",defaultVal:"true",required:""},{name:"local",desc:"语言",type:"string [zh_CN | pt_PT | en_US]",defaultVal:"zh_CN",required:""}],returnType:"HtmlElement",returnDesc:"返回Modal的HtmlElement对象"}]},{border:!0,title:"MaximizeModal方法",data:[{name:"MessageDialog.MaximizeModal",desc:"打开一个可以最大化和还原的对话框",modifier:"static",params:[{name:"config",desc:"配置",type:"Object - antd的Modal的配置",defaultVal:"{}",required:""},{name:"children",desc:"显示的内容",type:"React.ReactElement | null",defaultVal:"",required:""},{name:"defaultCloseBtn",desc:"是否缺省有关闭按钮",type:"boolean",defaultVal:"true",required:""},{name:"local",desc:"语言",type:"string [zh_CN | pt_PT | en_US]",defaultVal:"zh_CN",required:""}],returnType:"HtmlElement",returnDesc:"返回Modal的HtmlElement对象"}]},{border:!0,title:"Close方法",data:[{name:"MessageDialog.close",desc:"关闭一个Modal对话框",modifier:"static",params:[{name:"el",desc:"Model的el,一般是MessageDialog.Modal的返回值",type:"HtmlElement",defaultVal:"",required:""}],returnType:"void",returnDesc:""}]},{border:!0,title:"Trigger",data:[{name:"MessageDialog.Trigger",desc:"Trigger组件",modifier:"static",params:[],returnType:"ReactFunction",returnDesc:""}]},{border:!0,title:"TriggerPrompt",data:[{name:"MessageDialog.TriggerPrompt",desc:"Trigger组件",modifier:"static",params:[],returnType:"ReactFunction",returnDesc:""}]}]}),a.createElement(o.e6,{title:"Props",config:[{border:!0,title:"Trigger",data:[{params:"className",desc:"附加的样式表",type:"string",defaultVal:""},{params:"style",desc:"附加的样式",type:"React.CSSProperties",defaultVal:""},{params:"children",desc:"",type:"any",defaultVal:""},{params:"value",desc:"",type:"any",defaultVal:""},{params:"onChange",desc:"",type:"(params?: any) => void",defaultVal:""},{params:"renderTrigger",desc:"",type:"() => ReactNode",defaultVal:""},{params:"maximized",desc:"",type:"boolean",defaultVal:""},{params:"actions",desc:"",type:"\n                  Omit<ButtonProps, 'onClick'> &\n                    {\n                      key: any;\n                      onClick?: () => Promise<any>;\n                    }[];\n                  modalConfig?: Omit<\n                    Omit<ModalArgv, 'config'> & {\n                      config?: Omit<ModalProps, 'footer'>;\n                    },\n                    'children' | 'defaultCloseBtn'\n                  >\n                ",defaultVal:""}]},{border:!0,title:"TriggerPrompt",data:[{params:"onSubmit",desc:"提交，resolve的值是onChange的参数",type:"() => Promise<any>",defaultVal:""},{params:"modalConfig",desc:"Modal的配置",type:"Omit<ModalArgv, 'children' | 'defaultCloseBtn'>",defaultVal:""},{params:"okText",desc:"确定按钮的文本",type:"string",defaultVal:""}]}]}))},19994:(e,r,n)=>{n.d(r,{Ay:()=>u,I7:()=>m,Wc:()=>c,e6:()=>d,wn:()=>s});var t=n(71860),a=n(24370),o=n(26322);const{PlayGroundPageContext:l,PlayGroundPage:i}=a.A,{Section:s,CodeBoxSection:c,PropsSection:d,FunctionPropsSection:m}=i;const u=function(e){let{children:r,onScrollBottom:n,distance:a=50,...s}=e;const[c,d]=(0,o.useState)(),m=(0,o.useRef)(),u=(0,o.useRef)(!1);return(0,o.useEffect)((()=>{function e(){const e=r.scrollHeight-r.offsetHeight,t=r.scrollTop;if(n&&Math.abs(t-e)<=a){if(u.current)return;u.current=!0,null==n||n().then((()=>{u.current=!1}))}}const r=m.current.parentElement.parentElement;return r.addEventListener("scroll",e),d(r),()=>{r.removeEventListener("scroll",e)}}),[]),o.createElement(l.Provider,{value:{scrollEl:c}},o.createElement(i,(0,t.A)({ref:m},s),r))}},41283:(e,r,n)=>{n.d(r,{A:()=>t});const t=n(53473).A},18647:(e,r,n)=>{n.d(r,{A:()=>t});const t=n(54763).A},73288:(e,r,n)=>{n.d(r,{A:()=>t});const t=n(69171).A}}]);