"use strict";(self.webpackChunk_ctsj_build=self.webpackChunk_ctsj_build||[]).push([[4412],{50829:(e,r,n)=>{n.d(r,{A:()=>l});var t=n(42040),a=(0,n(14442).B)(t.A,{});a.displayName="Col";const l=a},89743:(e,r,n)=>{n.d(r,{A:()=>l});var t=n(10346),a=(0,n(14442).B)(t.A,{});a.displayName="Row";const l=a},70508:(e,r,n)=>{n.r(r),n.d(r,{default:()=>wl});var t=n(32517),a=n(41104),l=n(90812),o=n(45633),i=n(84792);const s="import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: dataSource.length,\r\n        data: dataSource.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table.TablePagingSelect\r\n      mode=\"multiple\"\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"RadioPagingList\"\r\n      value={value}\r\n      onChange={setValue}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      tablePagingProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n",c="import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: dataSource.length,\r\n        data: dataSource.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table.TablePaging\r\n      value={value}\r\n      onChange={setValue}\r\n      isSuspenseAsync={false}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      tablePagingProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n";var m=n(26322),d=n(96465),u=n(62076),p=n(18097),h=n(41065),f=n(43760),g=n(89765),C=n(19090),y=n(14442);const v=function(e){var r=e.children,n=e.value;e=e.onChange;return null==r?void 0:r({value:n,onChange:e})};var b=n(88724),A=function(){return(A=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},k=function(e,r){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var t=0,a=Object.getOwnPropertySymbols(e);t<a.length;t++)r.indexOf(a[t])<0&&Object.prototype.propertyIsEnumerable.call(e,a[t])&&(n[a[t]]=e[a[t]]);return n};const x=function(e){var r=e.getErrorContainer,n=e.children,t=(e=k(e,["getErrorContainer","children"]),(o=(0,m.useState)())[0]),a=o[1],l=((0,m.useEffect)((function(){a(null==r?void 0:r())}),[r]),(0,m.useMemo)((function(){var e;return n?b.A.isFunction(n)?function(e){return(e=n(e))?m.cloneElement(e,A(A({},null!=(e=null==e?void 0:e.props)?e:{}),{errorContainer:t})):null}:m.cloneElement(n,A(A({},null!=(e=null==n?void 0:n.props)?e:{}),{errorContainer:t})):null}),[n,t])),o=(0,m.useMemo)((function(){var e;return"NestingFormItem"===(null==(e=null==l?void 0:l.type)?void 0:e.displayName)?"":"onChange"}),[l]);return m.createElement(g.A.Item,A({noStyle:!!t,validateTrigger:o},e),l)};var S=n(82636),P=n(59223),E=function(){return(E=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},T=(0,m.memo)((0,m.forwardRef)((function(e,r){var n=e.className,t=e.style,a=e.formProps,l=e.value,o=e.onChange,i=(e=e.children,F.useForm()[0]);function s(){return i.validateFields().then((function(){})).catch((function(e){return new Error(e)}))}return(0,S.A)((function(){i.setFieldsValue(l)})),(0,P.A)((function(){i.setFieldsValue(l)}),[l]),(0,m.useImperativeHandle)(r,(function(){return{validateFields:s}})),m.createElement(F,E({ref:r,className:null!=n?n:"",style:null!=t?t:{},form:i},null!=a?a:{},{onValuesChange:function(e,r){null!=o&&o(r)}}),e)}))),I=T;I.displayName="NestingFormItem";const w=I;var V,R,O=function(e,r,n){if(n||2===arguments.length)for(var t,a=0,l=r.length;a<l;a++)!t&&a in r||((t=t||Array.prototype.slice.call(r,0,a))[a]=r[a]);return e.concat(t||Array.prototype.slice.call(r))},L=(0,y.B)(g.A,{});R=["default","version","toDate","toFloat","toInt","toBoolean","equals","contains","matches","ltrim","rtrim","trim","escape","unescape","stripLow","whitelist","blacklist","isWhitelisted","normalizeEmail","toString"],V=Array.from(Object.keys(C.A)).filter((function(e){return!R.includes(e)})).reduce((function(e,r){return e[r]=function(e){return{validator:function(n,t){var a=this;function l(){var n;return C.A[r].apply(a,O([t],(null==e?void 0:e.params)||[],!0))?Promise.resolve():Promise.reject(null!=(n=null==e?void 0:e.invalidMessage)?n:"")}return null!=n&&n.required?t?l():Promise.reject(null==n?void 0:n.message):t?l():Promise.resolve()}}},e}),{}),L.ValidatorRules=V,L.NestingFormItem=w,L.CustomWrapperFormItem=v,L.Item=x,L.displayName="Form";const F=L,D=F;var M=n(80711),H=n(73846),N=n(7197);const W=Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}})),_=()=>{const[e]=D.useForm(),[r,n]=(0,H.e)({options:[],value:[]}),{media:t}=(0,m.useContext)(f.A.Context);return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(h.A.VerticalCheckAllCheckbox,{options:[{label:"男",value:"2"},{label:"女",value:"1"}]}))),m.createElement(D.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(h.A.HorizontalCheckAllCheckbox,{options:[{label:"男",value:"2"},{label:"女",value:"1"}]}))),m.createElement(D.Item,{name:"letter1",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(h.A.CheckboxSelect,{placeholder:"A-Z",options:W}))),m.createElement(D.Item,{name:"letter2",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(h.A.CheckAllCheckboxSelect,{placeholder:"A-Z",options:W}))),m.createElement(D.Item,{name:"book",label:"book",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(h.A.AutoCompleteCheckboxSelect,{placeholder:"AutoCompleteCheckboxSelect",dropdownStyle:{maxHeight:u.A.pxToRem(300,t.designWidth,t),overflow:"auto"},options:r.options,loadData:e=>new Promise((r=>{if(!e)return n((e=>{e.options=[]})),void r();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n((e=>{e.options=t})),r()}),500)}))}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var q=(0,y.B)(M.Ay,{});q.displayName="Button";const j=q;var G=n(59682),B=n(1025),U=(0,y.B)(B.A,{});U.displayName="Avatar";const z=U,K=[{title:"Ant Design Title 1"},{title:"Ant Design Title 2"},{title:"Ant Design Title 3"},{title:"Ant Design Title 4"}].map((e=>{let{title:r}=e;return{title:r,label:r,value:r}})),Z=()=>{const[e]=D.useForm(),[r,n]=(0,H.e)({options:[],value:[]}),[t,a]=(0,H.e)({options:[],value:[]}),{media:l}=(0,m.useContext)(f.A.Context);return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(G.A.ListSelect,{placeholder:"List",options:K,listProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),m.createElement(D.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(G.A.ListSelect,{mode:"multiple",placeholder:"List",options:K,listProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),m.createElement(D.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(G.A.CheckAllListSelect,{placeholder:"List",options:K,listProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),m.createElement(D.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(G.A.AutoCompleteListSelect,{placeholder:"AutoCompleteListSelect",dropdownStyle:{maxHeight:u.A.pxToRem(300,l.designWidth,l),overflow:"auto"},options:r.options,loadData:e=>new Promise((r=>{if(console.log("_kw",e),!e)return n((e=>{e.options=[]})),void r();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n((e=>{e.options=t})),r()}),500)})),listProps:{itemLayout:"horizontal",renderItem:e=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{title:e.title,description:e.label}))}}))),m.createElement(D.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(G.A.AutoCompleteCheckAllListSelect,{placeholder:"AutoCompleteCheckAllListSelect",dropdownStyle:{maxHeight:u.A.pxToRem(300,l.designWidth,l),overflow:"auto"},options:t.options,loadData:e=>new Promise((r=>{if(!e)return a((e=>{e.options=[]})),void r();setTimeout((()=>{const n=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));a((e=>{e.options=n})),r()}),500)})),listProps:{itemLayout:"horizontal",renderItem:e=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{title:e.title,description:e.label}))}}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(j,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var J=n(89743),$=n(50829),Y=n(71860),Q=n(88831);const X=Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}})),ee=()=>{const[e]=D.useForm(),[r,n]=(0,H.e)({options:[],value:[]}),[t,a]=(0,H.e)({options:[],value:[]}),[l,o]=(0,H.e)({options:[],value:[]}),{media:i}=(0,m.useContext)(f.A.Context);return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(Q.A.HorizontalRadio,{options:[{label:"男",value:2},{label:"女",value:1}]}))),m.createElement(D.Item,{name:"letter",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(Q.A.RadioSelect,{placeholder:"A-Z",options:X}))),m.createElement(D.Item,{name:"letter1",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(Q.A.CustomRadio,{options:X},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r}=e;return m.createElement($.A,{span:4},m.createElement(Q.A,(0,Y.A)({key:null==r?void 0:r.value},null!=r?r:{}),null==r?void 0:r.label))}))))))),m.createElement(D.Item,{name:"letter2",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(Q.A.CustomRadioSelect,{dropdownStyle:{maxHeight:u.A.pxToRem(300,i.designWidth,i),overflow:"auto"},placeholder:"A-Z",options:X},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r}=e;return m.createElement($.A,{span:4},m.createElement(Q.A,(0,Y.A)({key:null==r?void 0:r.value},null!=r?r:{}),null==r?void 0:r.label))}))))))),m.createElement(D.Item,{name:"letter3",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(Q.A.ButtonRadio,{options:X}))),m.createElement(D.Item,{name:"letter4",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(Q.A.ButtonRadioSelect,{placeholder:"A-Z",options:X}))),m.createElement(D.Item,{name:"letter5",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(Q.A.AutoCompleteRadioSelect,{placeholder:"AutoCompleteRadioSelect",options:r.options,loadData:e=>new Promise((r=>{if(!e)return n((e=>{e.options=[]})),void r();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n((e=>{e.options=t})),r()}),500)}))}))),m.createElement(D.Item,{name:"letter6",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(Q.A.AutoCompleteCustomRadioSelect,{placeholder:"AutoCompleteCustomRadioSelect",dropdownStyle:{maxHeight:u.A.pxToRem(300,i.designWidth,i),overflow:"auto"},options:t.options,loadData:e=>new Promise((r=>{if(!e)return a((e=>{e.options=[]})),void r();setTimeout((()=>{const n=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));a((e=>{e.options=n})),r()}),500)}))},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r}=e;return m.createElement($.A,{span:4},m.createElement(Q.A,(0,Y.A)({key:null==r?void 0:r.value},null!=r?r:{}),null==r?void 0:r.label))}))))))),m.createElement(D.Item,{name:"letter7",label:"a-z",rules:[{required:!0,message:"请选择a-z"}]},m.createElement(p.A,null,m.createElement(Q.A.AutoCompleteButtonRadioSelect,{placeholder:"AutoCompleteButtonRadioSelect",dropdownStyle:{maxHeight:u.A.pxToRem(300,i.designWidth,i),overflow:"auto"},options:l.options,loadData:e=>new Promise((r=>{if(!e)return o((e=>{e.options=[]})),void r();setTimeout((()=>{const n=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));o((e=>{e.options=n})),r()}),500)}))}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var re=n(48774),ne=n(77658),te=n(28361),ae=n.n(te);const le=Array.from({length:100}).map((()=>({label:ae().mock("@name"),value:ae().mock("@guid")}))),oe=()=>{const[e]=D.useForm(),[r,n]=(0,H.e)({options:[],value:[]}),[t,a]=(0,H.e)({options:[],value:[]}),[l,o]=(0,H.e)({options:[],value:[]});return(0,m.useEffect)((()=>{e.setFieldValue("user",[le[0],le[1].value])}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"user",label:"人员",rules:[{required:!0,message:"请选择人员"}]},m.createElement(p.A,null,m.createElement(ne.A,{placeholder:"请选择人员",options:le}))),m.createElement(D.Item,{name:"users1",label:"参与者1",rules:[{required:!0,message:"请选择参与者1"}]},m.createElement(p.A,null,m.createElement(re.A,{placeholder:"请选择参与者1",options:le}))),m.createElement(D.Item,{name:"users2",label:"参与者2",rules:[{required:!0,message:"请选择参与者2"}]},m.createElement(p.A,null,m.createElement(re.A.CheckAllSelect,{placeholder:"请选择参与者2",options:le},(e=>m.createElement(h.A.Group,e))))),m.createElement(D.Item,{name:"users3",label:"参与者3",rules:[{required:!0,message:"请选择参与者3"}]},m.createElement(p.A,null,m.createElement(ne.A.AutoCompleteSelect,{placeholder:"请选择参与者3",value:r.value,options:r.options,onChange:e=>{n((r=>{r.value=e}))},loadData:e=>new Promise((r=>{if(!e)return n((e=>{e.options=[]})),void r();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n((e=>{e.options=t})),r()}),500)}))}))),m.createElement(D.Item,{name:"users4",label:"参与者4",rules:[{required:!0,message:"请选择参与者4"}]},m.createElement(p.A,null,m.createElement(re.A.AutoCompleteMultipleSelect,{placeholder:"请选择参与者4",value:t.value,options:t.options,onChange:e=>{a((r=>{r.value=e}))},loadData:e=>new Promise((r=>{if(!e)return a((e=>{e.options=[]})),void r();setTimeout((()=>{const n=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));a((e=>{e.options=n})),r()}),500)}))}))),m.createElement(D.Item,{name:"users5",label:"参与者5",rules:[{required:!0,message:"请选择参与者5"}]},m.createElement(p.A,null,m.createElement(re.A.AutoCompleteCheckAllMultipleSelect,{placeholder:"请选择参与者5",value:l.value,options:l.options,onChange:e=>{o((r=>{r.value=e}))},loadData:e=>new Promise((r=>{if(!e)return o((e=>{e.options=[]})),void r();setTimeout((()=>{const n=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));o((e=>{e.options=n})),r()}),500)}))},(e=>m.createElement(h.A.Group,e))))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var ie=n(22079);const se=Array.from({length:100}).map((()=>{const e=ae().mock("@name"),r=ae().mock("@guid");return{id:r,name:e,address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city"),label:e,value:r}})),ce=()=>{const[e]=D.useForm(),[r,n]=(0,H.e)({options:[],value:[]}),{media:t}=(0,m.useContext)(f.A.Context);return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(ie.A.TableSelect,{placeholder:"TableSelect",options:se,tableProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}}))),m.createElement(D.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(ie.A.TableSelect,{mode:"multiple",placeholder:"TableSelect",options:se,tableProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}}))),m.createElement(D.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(ie.A.AutoCompleteTableSelect,{placeholder:"AutoCompleteTableSelect",dropdownStyle:{maxHeight:u.A.pxToRem(300,t.designWidth,t),overflow:"auto"},options:r.options,loadData:e=>new Promise((r=>{if(!e)return n((e=>{e.options=[]})),void r();setTimeout((()=>{const t=[...se].filter((r=>-1!==r.label.indexOf(e)));n((e=>{e.options=t})),r()}),500)})),tableProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}],pagination:!1}}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var me=n(55846);const de=Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{value:n,label:n,children:n}})),ue=()=>{const[e]=D.useForm(),[r,n]=(0,H.e)({options:[],value:[]}),[t,a]=(0,H.e)({options:[],value:[]});return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(me.A.TagSelect,{mode:"multiple",placeholder:"A-Z",options:de}))),m.createElement(D.Item,{name:"sex1",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(me.A.VerticalCheckableTagGroup,{mode:"multiple",options:de}))),m.createElement(D.Item,{name:"sex2",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(me.A.VerticalCheckAllCheckableTagGroup,{options:de}))),m.createElement(D.Item,{name:"sex3",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(me.A.CheckAllTagSelect,{placeholder:"A-Z",options:de}))),m.createElement(D.Item,{name:"sex4",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(me.A.HorizontalCheckableTagGroup,{mode:"multiple",options:de}))),m.createElement(D.Item,{name:"sex5",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(me.A.HorizontalCheckAllCheckableTagGroup,{options:de}))),m.createElement(D.Item,{name:"sex6",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(me.A.AutoCompleteTagSelect,{placeholder:"AutoCompleteTagSelect",mode:"multiple",options:r.options,loadData:e=>new Promise((r=>{if(!e)return n((e=>{e.options=[]})),void r();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id,children:e.t})));n((e=>{e.options=t})),r()}),500)}))}))),m.createElement(D.Item,{name:"sex7",label:"a-z",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(me.A.AutoCompleteCheckAllTagSelect,{placeholder:"AutoCompleteCheckAllTagSelect",options:t.options,loadData:e=>new Promise((r=>{if(!e)return a((e=>{e.options=[]})),void r();setTimeout((()=>{const n=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id,children:e.t})));a((e=>{e.options=n})),r()}),500)}))}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var pe=n(32579);const he=Array.from({length:20}).map(((e,r)=>({key:r.toString(),title:"content".concat(r+1),description:"description of content".concat(r+1)}))),fe=he.filter((e=>Number(e.key)>10)).map((e=>e.key)),ge=()=>{const[e]=D.useForm(),[r,n]=(0,H.e)({options:[],value:[]}),[t,a]=(0,m.useState)([]),[l,o]=(0,m.useState)(fe),{media:i}=(0,m.useContext)(f.A.Context);return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(pe.A,{dataSource:he,titles:["Source","Target"],targetKeys:t,selectedKeys:l,onChange:(e,r,n)=>{console.log("targetKeys:",e),console.log("direction:",r),console.log("moveKeys:",n),a(e)},onSelectChange:(e,r)=>{console.log("sourceSelectedKeys:",e),console.log("targetSelectedKeys:",r),o([...e,...r])},onScroll:(e,r)=>{console.log("direction:",e),console.log("target:",r.target)},render:e=>e.title}))),m.createElement(D.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(pe.A.TransferSelect,{placeholder:"A-Z",options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))}))),m.createElement(D.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(p.A,null,m.createElement(pe.A.AutoCompleteTransferSelect,{placeholder:"AutoCompleteTransferSelect",dropdownStyle:{maxHeight:u.A.pxToRem(300,i.designWidth,i),overflow:"auto"},options:r.options,loadData:e=>new Promise((r=>{if(console.log("_kw",e),!e)return n((e=>{e.options=[]})),void r();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));n((e=>{e.options=t})),r()}),500)}))}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var Ce=n(24238),ye=n(78831),ve=n(8664);function be(e,r){var n,t;if(console.log("pid",e),!e)return Promise.resolve(ve.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({label:r.name,value:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}const Ae=()=>{const[e]=D.useForm();return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ye.A.AsyncCascader,{placeholder:"AsyncCascader",fetchData:be})),m.createElement(D.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ce.A,null,m.createElement(ye.A.AsyncCascaderChangeOnSelect,{placeholder:"AsyncCascaderChangeOnSelect",fetchData:be}))),m.createElement(D.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ce.A,null,m.createElement(ye.A.AsyncCascaderMulti,{placeholder:"AsyncCascaderMulti",fetchData:be}))),m.createElement(D.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ce.A,null,m.createElement(ye.A.AsyncCascader,{placeholder:"AsyncCascader",fetchData:be,treeDataSimpleMode:!0}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var ke=n(75547);function xe(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}const Se=()=>{const[e]=D.useForm();return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ce.A,null,m.createElement(ke.A.AsyncTreeSelect,{placeholder:"AsyncTreeSelect",fetchData:xe}))),m.createElement(D.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ce.A,null,m.createElement(ke.A.AsyncTreeMultiSelect,{placeholder:"AsyncTreeMultiSelectEcho",fetchData:xe}))),m.createElement(D.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ce.A,null,m.createElement(ke.A.AsyncTreeCheckedShowParentSelect,{placeholder:"AsyncTreeCheckedShowParentSelect",fetchData:xe}))),m.createElement(D.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ce.A,null,m.createElement(ke.A.AsyncTreeCheckedShowAllSelect,{placeholder:"AsyncTreeCheckedShowAllSelect",fetchData:xe}))),m.createElement(D.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ke.A.AsyncTreeCheckedShowChildSelect,{placeholder:"AsyncTreeCheckedShowChildSelect",fetchData:xe})),m.createElement(D.Item,{name:"sex5",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ce.A,null,m.createElement(ke.A.AsyncTreeSelect,{placeholder:"AsyncTreeSelect",fetchData:xe,treeDataSimpleMode:!0}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var Pe=n(17435);const Ee="vPpMoxqkdhb0DmNVOk5W",Te=()=>m.createElement(Pe.A,{options:Array.from({length:26}).map(((e,r)=>({label:String.fromCharCode(97+r).toUpperCase(),value:97+r}))),className:Ee,onSelect:e=>{console.log("onSelect",e)},onSearch:e=>{console.log("onSearch",e)},onChange:e=>{console.log("onChange",e)},placeholder:"control mode"}),Ie=()=>{const[e,r]=(0,m.useState)({inputValue:"",selectValue:""});return m.createElement(Pe.A.AutoCompleteSelectInput,{placeholder:"control mode",className:Ee,value:e,options:Array.from({length:26}).map(((e,r)=>({label:String.fromCharCode(97+r).toUpperCase(),value:"".concat(97+r)}))),onChange:r})},we="LcBH0IQFfC5dopcmhbjk",Ve=()=>m.createElement(o.A,{className:we,showTime:!0,onChange:(e,r)=>{console.log(e,r)}});var Re=n(48305),Oe=(0,y.B)(Re.A,{allowClear:!0,maxLength:1e3,showCount:!0});Oe.displayName="Input";const Le=Oe,Fe=()=>m.createElement("div",null,m.createElement("p",null,"对Form的Rules进行增强(",m.createElement("a",{target:"_blank",href:"/adhere/component/util/validator"},"使用adhere-util-validator"),")"),m.createElement(D,{labelCol:{span:3},wrapperCol:{span:21}},m.createElement("ul",null,m.createElement(t.A.Group,{direction:"vertical"},m.createElement("li",null,m.createElement(D.Item,{name:"email",label:"email",rules:[D.ValidatorRules.isEmail({invalidMessage:"email格式错误"})]},m.createElement(Le,{placeholder:"email"}))),m.createElement("li",null,m.createElement(D.Item,{name:"mime",label:"mime",rules:[D.ValidatorRules.isMimeType({invalidMessage:"MimeType格式错误"})]},m.createElement(Le,{placeholder:"mime"}))),m.createElement("li",null,m.createElement(D.Item,{name:"hex",label:"hex",rules:[D.ValidatorRules.isHexColor({invalidMessage:"hex值格式错误"})]},m.createElement(Le,{placeholder:"hex"}))),m.createElement("li",null,m.createElement(D.Item,{name:"ip",label:"ip",rules:[D.ValidatorRules.isIP({invalidMessage:"ip地址格式错误"})]},m.createElement(Le,{placeholder:"ip"}))),m.createElement("li",null,m.createElement(D.Item,{name:"chinaPhoneNumber",label:"手机卡 + 数据卡 + 上网卡",rules:[D.ValidatorRules.isAllChinaPhoneNumber({invalidMessage:"手机卡或数据卡或上网卡格式错误"})]},m.createElement(Le,{placeholder:"手机卡 + 数据卡 + 上网卡"}))))))),De=()=>m.createElement(Le,{placeholder:"请输入",className:we});var Me=n(24619);const He=()=>m.createElement(Me.A,{placeholder:"请输入",className:we});var Ne=n(3136);const We=()=>m.createElement(Ne.A,{placeholder:"请输入",className:we});var _e=n(75788);const qe=()=>m.createElement(_e.A,{placeholder:"请输入",className:we});var je=n(27476),Ge=(0,y.B)(je.A,{closable:!0,centered:!0,maskClosable:!0,destroyOnClose:!0,zIndex:999});Ge.displayName="Modal";const Be=Ge,Ue=()=>{const[e,r]=(0,m.useState)(!1);return m.createElement("div",null,m.createElement(j,{type:"primary",onClick:()=>{r(!0)}},"Open Modal"),m.createElement(Be,{title:"Basic Modal",open:e,onOk:()=>{r(!1)},onCancel:()=>{r(!1)}},m.createElement("p",null,"Some contents..."),m.createElement("p",null,"Some contents..."),m.createElement("p",null,"Some contents...")))};var ze=n(12090),Ke=(0,y.B)(ze.A,{showQuickJumper:!0});Ke.displayName="Pagination";const Ze=Ke,Je=()=>m.createElement(Ze,{defaultCurrent:1,total:50}),$e=()=>m.createElement(l.A,{className:we});var Ye=function(){return(Ye=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)};const Qe=function(e){var r=(0,m.useState)(!1),n=r[0],t=r[1];return m.createElement(M.Ay,Ye({loading:n},e,{onClick:function(r){var a;e.onClick&&!n&&(t(!0),null!=(r=null==(a=null==(a=null==(r=e.onClick(r))?void 0:r.then)?void 0:a.call(r,(function(){return t(!1)})))?void 0:a.catch))&&r.call(a,(function(){return t(!1)}))}}),e.children)};var Xe=(0,y.B)(Qe,{});Xe.displayName="SubmitButton";const er=Xe,rr=()=>m.createElement(er,{className:we,type:"primary",onClick:()=>new Promise((e=>setTimeout(e,3e3)))},"提交");var nr=Re.A.TextArea,tr=(0,y.B)(nr,{allowClear:!0,maxLength:1e3,showCount:!0,autoSize:!1});tr.displayName="TextArea";const ar=tr,lr=()=>m.createElement(ar,{placeholder:"请输入",className:we}),or=()=>m.createElement(a.A,{className:we});var ir=n(74874),sr=(0,y.B)(ir.A,{name:"file",withCredentials:!0});sr.displayName="Upload";const cr=sr;var mr=n(72018);const dr=()=>m.createElement(cr,{name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange(e){"uploading"!==e.file.status&&console.log(e.file,e.fileList),"done"===e.file.status?message.success("".concat(e.file.name," file uploaded successfully")):"error"===e.file.status&&message.error("".concat(e.file.name," file upload failed."))}},m.createElement(j,{icon:m.createElement(mr.A,null)},"Click to Upload"));var ur=n(65086);const pr=()=>{const[e,r]=(0,m.useState)(void 0);return console.log("value",e),m.createElement(ye.A.AsyncCascader,{className:ur.A.Wrapper,placeholder:"AsyncCascader",value:e,onChange:r,fetchData:function(e,r){var n,t;if(console.log("pid",e),!e)return Promise.resolve(ve.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({label:r.name,value:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},hr=()=>{const[e,r]=(0,m.useState)(void 0);return console.log("value",e),m.createElement(ye.A.AsyncCascaderChangeOnSelect,{className:ur.A.Wrapper,placeholder:"AsyncCascaderChangeOnSelect",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({label:r.name,value:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},fr=()=>{const[e,r]=(0,m.useState)(["210000000000","210100000000","210102000000"]);return console.log("value",e),m.createElement(ye.A.AsyncCascader,{className:ur.A.Wrapper,placeholder:"AsyncCascader",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({label:r.name,value:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)},fetchBranch:(e,r)=>Promise.resolve([{label:"辽宁省",value:"210000000000",isLeaf:!1,children:[{label:"沈阳市",value:"210100000000",isLeaf:!1,children:[{label:"和平区",value:"210102000000",isLeaf:!0}]}]}])})},gr=()=>{const[e,r]=(0,m.useState)([]);return console.log("value",e),m.createElement(ye.A.AsyncCascaderMulti,{className:ur.A.Wrapper,placeholder:"AsyncCascaderMulti",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({label:r.name,value:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},Cr=()=>{const[e,r]=(0,m.useState)([["210000000000","210100000000","210102000000"],["230000000000","230100000000","230102000000"]]);return console.log("value",e),m.createElement(ye.A.AsyncCascaderShowChild,{className:ur.A.Wrapper,placeholder:"AsyncCascaderMulti",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({label:r.name,value:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)},fetchBranch:(e,r)=>Promise.resolve([{label:"辽宁省",value:"210000000000",isLeaf:!1,children:[{label:"沈阳市",value:"210100000000",isLeaf:!1,children:[{label:"和平区",value:"210102000000",isLeaf:!0}]}]},{label:"黑龙江省",value:"230000000000",isLeaf:!1,children:[{label:"哈尔滨市",value:"230100000000",isLeaf:!1,children:[{label:"道里区",value:"230102000000",isLeaf:!0}]}]}])})},yr=()=>{const[e,r]=(0,m.useState)([]);return console.log("value",e),m.createElement(ye.A.AsyncCascaderShowChild,{className:ur.A.Wrapper,placeholder:"AsyncCascaderShowChild",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({label:r.name,value:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},vr=()=>m.createElement(ye.A,{placeholder:"Please select",options:[{value:"zhejiang",label:"Zhejiang",children:[{value:"hangzhou",label:"Hangzhou",children:[{value:"xihu",label:"West Lake"}]}]},{value:"jiangsu",label:"Jiangsu",children:[{value:"nanjing",label:"Nanjing",children:[{value:"zhonghuamen",label:"Zhong Hua Men"}]}]}],onChange:e=>{console.log(e)}}),br=()=>m.createElement(ye.A.CascaderChangeOnSelect,{placeholder:"Please select",options:[{value:"zhejiang",label:"Zhejiang",children:[{value:"hangzhou",label:"Hangzhou",children:[{value:"xihu",label:"West Lake"}]}]},{value:"jiangsu",label:"Jiangsu",children:[{value:"nanjing",label:"Nanjing",children:[{value:"zhonghuamen",label:"Zhong Hua Men"}]}]}],onChange:e=>{console.log(e)}}),Ar=()=>{const e=[{label:"Light",value:"light",children:new Array(20).fill(null).map(((e,r)=>({label:"Number ".concat(r),value:r})))},{label:"Bamboo",value:"bamboo",children:[{label:"Little",value:"little",children:[{label:"Toy Fish",value:"fish",disableCheckbox:!0},{label:"Toy Cards",value:"cards"},{label:"Toy Bird",value:"bird"}]}]}];return m.createElement(ye.A.CascaderMulti,{placeholder:"Please select",options:e,onChange:e=>{console.log(e)}})},kr=()=>{const e=[{label:"Light",value:"light",children:new Array(20).fill(null).map(((e,r)=>({label:"Number ".concat(r),value:r})))},{label:"Bamboo",value:"bamboo",children:[{label:"Little",value:"little",children:[{label:"Toy Fish",value:"fish",disableCheckbox:!0},{label:"Toy Cards",value:"cards"},{label:"Toy Bird",value:"bird"}]}]}];return m.createElement(ye.A.CascaderShowChild,{className:ur.A.Wrapper1,placeholder:"Please select",options:e,onChange:e=>{console.log(e)}})},xr=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(ye.A.AsyncCascader,{className:ur.A.Wrapper,placeholder:"AsyncCascader",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({label:e.name,value:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({label:r.name,value:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)},treeDataSimpleMode:!0})},Sr=[...ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,isLeaf:!1,pId:0}))),...Object.keys(ve.Wj).map((e=>ve.Wj[e].map((r=>({title:r.name,label:r.name,value:r.id,id:r.id,isLeaf:!1,pId:"".concat(e)}))))).flat(),...Object.keys(ve.Vb).map((e=>ve.Vb[e].map((r=>({title:r.name,label:r.name,value:r.id,id:r.id,isLeaf:!0,pId:e}))))).flat()],Pr=()=>{const[e,r]=(0,m.useState)();return m.createElement(ye.A.CascaderMulti,{className:ur.A.Wrapper,value:e,placeholder:"Please select",onChange:e=>{r(e)},options:Sr,treeDataSimpleMode:!0})},Er="E6Ad7PcNwjPnDbIm0y1Z",Tr=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)([]),{media:a}=(0,m.useContext)(f.A.Context);return m.createElement(h.A.AutoCompleteCheckAllCheckboxSelect,{placeholder:"AutoCompleteCheckAllCheckboxSelect111",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,a.designWidth,a),overflow:"auto"},value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))})},Ir=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)([]),{media:a}=(0,m.useContext)(f.A.Context);return m.createElement(h.A.AutoCompleteCheckAllCustomCheckboxSelect,{placeholder:"AutoCompleteCheckAllCustomCheckboxSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,a.designWidth,a),overflow:"auto"},value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r,onChange:n,checked:t,disabled:a}=e;return m.createElement($.A,{span:4,key:null==r?void 0:r.value},m.createElement(h.A,(0,Y.A)({},null!=r?r:{},{checked:t,disabled:a,onChange:e=>{n(e,r.value)}}),null==r?void 0:r.label))})))))},wr=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)([]),{media:a}=(0,m.useContext)(f.A.Context);return m.createElement(h.A.AutoCompleteCheckboxSelect,{placeholder:"AutoCompleteCheckboxSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,a.designWidth,a),overflow:"auto"},value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(console.log("_kw",e),!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))})},Vr=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)([]),{media:a}=(0,m.useContext)(f.A.Context);return m.createElement(h.A.AutoCompleteCustomCheckboxSelect,{placeholder:"AutoCompleteCustomCheckboxSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,a.designWidth,a),overflow:"auto"},value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r,onChange:n,checked:t,disabled:a}=e;return m.createElement($.A,{key:null==r?void 0:r.value,span:4},m.createElement(h.A,(0,Y.A)({},null!=r?r:{},{checked:t,disabled:a,onChange:e=>{n(e,r.value)}}),null==r?void 0:r.label))})))))},Rr=()=>{const[e,r]=(0,m.useState)([]),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(h.A.CheckAllCheckboxSelect,{placeholder:"A-Z",className:ur.A.Wrapper,dropdownStyle:{maxHeight:u.A.pxToRem(300,n.designWidth,n),overflowY:"auto"},value:e,onChange:r,options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))})},Or=()=>{const[e,r]=(0,m.useState)([]),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(h.A.CheckAllCustomCheckboxSelect,{className:ur.A.Wrapper,dropdownStyle:{maxHeight:u.A.pxToRem(300,n.designWidth,n),overflowY:"auto"},placeholder:"A-Z",value:e,onChange:r,options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r,onChange:n,checked:t,disabled:a}=e;return m.createElement($.A,{key:null==r?void 0:r.value,span:4},m.createElement(h.A,(0,Y.A)({},null!=r?r:{},{checked:t,disabled:a,onChange:e=>{n(e,r.value)}}),null==r?void 0:r.label))})))))},Lr=()=>m.createElement(h.A,null,"男"),Fr=()=>{const[e,r]=(0,m.useState)([]),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(h.A.CheckboxSelect,{placeholder:"A-Z",className:ur.A.Wrapper,dropdownStyle:{maxHeight:u.A.pxToRem(300,n.designWidth,n),overflowY:"auto"},value:e,onChange:r,options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))})},Dr=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(h.A.CustomCheckAllCheckbox,{value:e,onChange:e=>{r(e)},options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r,onChange:n,checked:t,disabled:a}=e;return m.createElement($.A,{span:4,key:null==r?void 0:r.value},m.createElement(h.A,(0,Y.A)({},null!=r?r:{},{checked:t,disabled:a,onChange:e=>{n(e,r.value)}}),null==r?void 0:r.label))})))))},Mr=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(h.A.CustomCheckbox,{value:e,options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}})),onChange:r},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r,onChange:n,checked:t,disabled:a}=e;return m.createElement($.A,{span:4},m.createElement(h.A,(0,Y.A)({key:null==r?void 0:r.value},null!=r?r:{},{checked:t,disabled:a,onChange:e=>{n(e,r.value)}}),null==r?void 0:r.label))})))))},Hr=()=>{const[e,r]=(0,m.useState)([]),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(h.A.CustomCheckboxSelect,{className:ur.A.Wrapper,dropdownStyle:{maxHeight:u.A.pxToRem(300,n.designWidth,n),overflowY:"auto"},placeholder:"A-Z",value:e,onChange:r,options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r,onChange:n,...t}=e;return m.createElement($.A,{key:null==r?void 0:r.value,span:4},m.createElement(h.A,(0,Y.A)({},null!=r?r:{},t,{onChange:e=>{n(e,r.value)}}),null==r?void 0:r.label))})))))},Nr=()=>{const[e,r]=(0,m.useState)([]),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(h.A.CheckAllCheckboxSelect,{placeholder:"A-Z",className:ur.A.Wrapper,dropdownStyle:{maxHeight:u.A.pxToRem(300,n.designWidth,n),overflowY:"auto"},value:e,onChange:r,options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}})),render:(e,r)=>m.createElement("div",null,m.createElement("div",null,r),m.createElement("div",null,e))})},Wr=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(h.A.HorizontalCheckAllCheckbox,{value:e,onChange:r,options:[{label:"男",value:"2"},{label:"女",value:"1"}]})},_r=()=>m.createElement(h.A.HorizontalCheckbox,{options:[{label:"男",value:"2"},{label:"女",value:"1"}]}),qr=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(h.A.VerticalCheckAllCheckbox,{value:e,onChange:r,options:[{label:"男",value:"2"},{label:"女",value:"1"}]})},jr=()=>m.createElement(h.A.VerticalCheckbox,{onChange:e=>{console.log("v",e)},disabled:!0,options:[{label:"男",value:"2",disabled:!1},{label:"女",value:"1"}]});var Gr=n(34419),Br=n.n(Gr),Ur=n(55958),zr=n.n(Ur),Kr=n(65024),Zr=n.n(Kr),Jr=function(){return(Jr=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},$r=function(e,r){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var t=0,a=Object.getOwnPropertySymbols(e);t<a.length;t++)r.indexOf(a[t])<0&&Object.prototype.propertyIsEnumerable.call(e,a[t])&&(n[a[t]]=e[a[t]]);return n};Br().extend(Zr()),Br().extend(zr());const Yr=function(e){var r=e.defaultValue,n=e.value,t=e.onChange,a=$r(e,["defaultValue","value","onChange"]);function l(e){return null==e?e:Br()(e)}e=(0,m.useMemo)((function(){return l(n)}),[n]);var i=(0,m.useMemo)((function(){return l(r)}),[r]);return m.createElement(o.A,Jr({},a,{defaultValue:i,value:e,onChange:function(e,r){var n;null!=t&&t(e.format(null!=(n=a.format)?n:"L LTS"),r,e,{year:e.year(),quarter:e.quarter(),month:e.month(),week:e.week(),day:e.day(),date:e.date(),hour:e.hour(),minute:e.minute(),second:e.second()})}}))};var Qr=(0,y.B)(Yr,{});Qr.displayName="DatePickerFormatValueHOC";const Xr=Qr,en=()=>{const[e]=D.useForm();return(0,m.useEffect)((()=>{e.setFieldValue("birthDay2",Br()().format("YYYY-MM-DD"))}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"birthday",label:"生日",rules:[{required:!0,message:"请选择生日"}]},m.createElement(Xr,null)),m.createElement(D.Item,{name:"birthday1",label:"生日",rules:[{required:!0,message:"请选择生日"}]},m.createElement(Xr,{type:"seconds"})),m.createElement(D.Item,{name:"birthday2",label:"生日",rules:[{required:!0,message:"请选择生日"}]},m.createElement(Xr,null)),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var rn=function(){return(rn=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},nn=function(e,r){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var t=0,a=Object.getOwnPropertySymbols(e);t<a.length;t++)r.indexOf(a[t])<0&&Object.prototype.propertyIsEnumerable.call(e,a[t])&&(n[a[t]]=e[a[t]]);return n};Br().extend(Zr()),Br().extend(zr());const tn=function(e){var r=e.defaultValue,n=e.value,t=e.onChange,a=void 0===(l=e.type)?"milliseconds":l,l=nn(e,["defaultValue","value","onChange","type"]);function i(e){return null==e?e:"seconds"===a?Br().unix(e):Br()(e)}e=(0,m.useMemo)((function(){return i(n)}),[n]);var s=(0,m.useMemo)((function(){return i(r)}),[r]);return m.createElement(o.A,rn({},l,{defaultValue:s,value:e,onChange:function(e,r){var n;null!=t&&t((n=e.valueOf(),"seconds"===a?Math.round(n/1e3):n),r,e,{year:e.year(),quarter:e.quarter(),month:e.month(),week:e.week(),day:e.day(),date:e.date(),hour:e.hour(),minute:e.minute(),second:e.second()})}}))};var an=(0,y.B)(tn,{});an.displayName="DatePickerTimestampValueHOC";const ln=an,on=()=>{const[e]=D.useForm();return(0,m.useEffect)((()=>{e.setFieldValue("birthDay2",Br()().valueOf())}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"birthday",label:"生日",rules:[{required:!0,message:"请选择生日"}]},m.createElement(ln,null)),m.createElement(D.Item,{name:"birthday1",label:"生日",rules:[{required:!0,message:"请选择生日"}]},m.createElement(ln,{type:"seconds"})),m.createElement(D.Item,{name:"birthday2",label:"生日",rules:[{required:!0,message:"请选择生日"}]},m.createElement(ln,null)),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},sn=()=>{const[e]=D.useForm();return m.createElement("div",null,m.createElement(D,{form:e},m.createElement(D.Item,{name:"name",rules:[{required:!0,message:"请输入姓名"}],getErrorContainer:()=>document.getElementById("error")},m.createElement(Le,null))),m.createElement(j,{block:!0,onClick:()=>{e.validateFields().then((e=>{}))}},"Submit"),m.createElement("div",{id:"error",style:{color:"red",display:"none"}},"11111111111111111"))},cn=()=>{const[e]=D.useForm(),r=(0,m.useRef)(null),n=(0,m.useRef)(),t=(0,m.useRef)();function a(){return r.current||(r.current=new Map),r.current}return(0,m.useEffect)((()=>{e.setFieldsValue(JSON.parse('{"name":"1","obj1":{"a":"2","b":{"b.1":"3","b.2":"4"}}}'))}),[]),m.createElement("div",null,m.createElement(D,{form:e},m.createElement(D.Item,{name:"name",label:"姓名",rules:[{required:!0,message:"请输入姓名"}]},m.createElement(Le,{placeholder:"name"})),m.createElement(D.Item,{name:"obj1",rules:[{validator:()=>n.current.validateFields()}]},m.createElement(D.NestingFormItem,{ref:n},m.createElement(D.Item,{name:"a",label:"a",rules:[{required:!0,message:"请输入a"}]},m.createElement(Le,{placeholder:"a"})),m.createElement(D.Item,{name:"b",rules:[{validator:()=>t.current.validateFields()}]},m.createElement(D.NestingFormItem,{ref:t},m.createElement(D.Item,{name:"b.1",label:"b.1",rules:[{required:!0,message:"请输入b.1"}]},m.createElement(Le,{placeholder:"b.1"})),m.createElement(D.Item,{name:"b.2",label:"b.2",rules:[{required:!0,message:"请输入b.2"}]},m.createElement(Le,{placeholder:"b.2"})))))),m.createElement(D.List,{name:"array"},((e,r,n)=>{let{add:t,remove:l}=r,{errors:o}=n;return m.createElement(m.Fragment,null,m.createElement(j,{onClick:()=>{t()}},"Add"),e.map((e=>m.createElement(D.Item,(0,Y.A)({key:e.key},e,{rules:[{validator:()=>a().get(e.key).validateFields()}]}),m.createElement(D.NestingFormItem,{ref:r=>{const n=a();r?n.set(e.key,r):n.delete(e.key)}},m.createElement(i.A,{direction:"horizontal"},m.createElement(i.A.Auto,null,m.createElement(D.Item,{name:"key1",label:"key1",rules:[{required:!0,message:"请输入key1"}]},m.createElement(Le,null)),m.createElement(D.Item,{name:"key2",label:"key2",rules:[{required:!0,message:"请输入key2"}]},m.createElement(Le,null))),m.createElement(i.A.Fixed,null,m.createElement(j,{onClick:()=>{l(e.name)}},"删除"))))))),m.createElement(D.ErrorList,{errors:o}))}))),m.createElement("div",null,m.createElement(j,{block:!0,onClick:()=>{e.validateFields().then((e=>{})).catch((e=>{}))}},"Submit")))};var mn=n(35696),dn=n(93266),un=n.n(dn);const{Label:pn,Value:hn}=mn.A;function fn(e,r){const[n]=D.useForm();return(0,m.useImperativeHandle)(r,(()=>({validateAndGetValues:()=>n.validateFields()}))),m.createElement(D,{name:"userForm",form:n},m.createElement(mn.A,{data:[{name:"g1",width:"100%",columnCount:1,colgroup:[200,"auto"],data:[{key:"phone",require:!0,label:m.createElement(pn,null,"电话："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"phone",rules:[{required:!0,message:"请输入电话"},D.ValidatorRules.isSIMCard({invalidMessage:"请输入正确的电话号码"})]},m.createElement(Le,{placeholder:"请输入电话"})))},{key:"idCard",require:!0,label:m.createElement(pn,null,"身份证号："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"idCard",rules:[{required:!0,message:"请输入身份证号"},D.ValidatorRules.isIdentityCard({invalidMessage:"请输入正确的身份证",params:["zh-CN"]})]},m.createElement(Le,{placeholder:"身份证号"})))},{key:"email",require:!0,label:m.createElement(pn,null,"邮箱："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"email",rules:[{required:!0,message:"请输入邮箱"},{type:"email",message:"请输入正确的邮箱"}]},m.createElement(Le,{placeholder:"请输入邮箱"})))},{key:"ipv4",require:!0,label:m.createElement(pn,null,"ipv4："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"ipv4",rules:[{required:!0,message:"请输入ipv4"},D.ValidatorRules.isIP({params:[4],invalidMessage:"请输入正确的ipv4"})]},m.createElement(Le,{placeholder:"请输入ipv4"})))},{key:"ipv6",require:!0,label:m.createElement(pn,null,"ipv6："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"ipv6",rules:[{required:!0,message:"请输入ipv6"},D.ValidatorRules.isIP({params:[6],invalidMessage:"请输入正确的ipv6"})]},m.createElement(Le,{placeholder:"请输入ipv6"})))},{key:"SemVer",require:!0,label:m.createElement(pn,null,"版本号(SemVer)："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"semVer",rules:[{required:!0,message:"请输入版本号"},D.ValidatorRules.isSemVer({params:[6],invalidMessage:"请输入正确的版本号"})]},m.createElement(Le,{placeholder:"请输入版本号"})))},{key:"URL",require:!0,label:m.createElement(pn,null,"URL："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"URL",rules:[{required:!0,message:"请输入URL"},D.ValidatorRules.isURL({invalidMessage:"请输入正确的URL"})]},m.createElement(Le,{placeholder:"请输入URL"})))},{key:"taxID",require:!0,label:m.createElement(pn,null,"税号："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"taxID",rules:[{required:!0,message:"请输入税号"},D.ValidatorRules.isTaxID({invalidMessage:"请输入正确的税号"})]},m.createElement(Le,{placeholder:"请输入税号"})))},{key:"postalCode",require:!0,label:m.createElement(pn,null,"邮政编码："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"postalCode",rules:[{required:!0,message:"请输入邮政编码"},D.ValidatorRules.isPostalCode({params:["CN"],invalidMessage:"请输入正确的邮政编码"})]},m.createElement(Le,{placeholder:"请输入邮政编码"})))},{key:"passportNumber",require:!0,label:m.createElement(pn,null,"护照号："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"passportNumber",rules:[{required:!0,message:"请输入护照号"},D.ValidatorRules.isPassportNumber({params:["CN"],invalidMessage:"请输入正确的护照号"})]},m.createElement(Le,{placeholder:"请输入护照号"})))},{key:"licensePlate",require:!0,label:m.createElement(pn,null,"车牌："),value:m.createElement(hn,null,m.createElement(D.Item,{name:"licensePlate",rules:[{required:!0,message:"请输入车牌"},D.ValidatorRules.isLicensePlate({params:["any"],invalidMessage:"请输入正确的车牌"})]},m.createElement(Le,{placeholder:"请输入车牌"})))}]}]}))}fn.defaultProps={defaultData:{}},fn.propTypes={defaultData:un().shape({})};const gn=(0,m.forwardRef)(fn);var Cn=n(83718),yn=n(12719),vn=n(31934),bn=n.n(vn),An=n(24902),kn=n(6940),xn=n(2382),Sn=n(59418),Pn=function(){return(Pn=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},En=function(e,r,n){if(n||2===arguments.length)for(var t,a=0,l=r.length;a<l;a++)!t&&a in r||((t=t||Array.prototype.slice.call(r,0,a))[a]=r[a]);return e.concat(t||Array.prototype.slice.call(r))},Tn="adhere-ui-anthoc-input-multiple",In=kn.A.usePropToState;const wn=function(e){var r=e.className,n=e.style,t=e.tagWrapperClassName,a=e.tagWrapperStyle,l=e.inputProps,o=e.tagProps,i=e.renderAdd,s=e.renderClear,c=e.direction,d=e.isCheckAll,u=e.options,p=e.value,h=e.onChange,f=(e=(0,m.useState)(""))[0],g=e[1],C=(e=In(u))[0],y=e[1],v=(e=(u=In(p))[0],u[1]),b=(p=(0,m.useMemo)((function(){return null!=o?o:{}}),[o]),(0,m.useMemo)((function(){return null!=c?c:"horizontal"}),[c])),A=(0,m.useMemo)((function(){return!!d}),[d]),k=(u=(0,m.useMemo)((function(){return(null!=C?C:[]).map((function(e){return{value:e.value,children:e.label}}))}),[C]),(0,m.useMemo)((function(){return"vertical"===b?A?me.A.VerticalCheckAllCheckableTagGroup:me.A.VerticalCheckableTagGroup:"horizontal"===b&&A?me.A.HorizontalCheckAllCheckableTagGroup:me.A.HorizontalCheckableTagGroup}),[b,A]));return m.createElement("div",{className:bn()(Tn,r),style:null!=n?n:{}},m.createElement(An.A,{direction:"horizontal"},m.createElement(xn.A.Group,{direction:"horizontal",size:10},m.createElement(An.A.Auto,null,m.createElement(Le,Pn({placeholder:Sn.Ay.v("请输入关键字"),showCount:!1,allowClear:!1},null!=l?l:{},{value:f,onChange:function(e){g(e.target.value)}}))),m.createElement(An.A.Fixed,{fit:!0},m.createElement("div",{onClick:function(){var e=f.trim();e&&!(null!=C?C:[]).find((function(r){return r.value===e}))&&y((function(e){return En(En([],null!=e?e:[],!0),[{label:f,value:f}],!1)}))},className:"".concat(Tn,"-btn-wrapper")},null!=(r=null==i?void 0:i())?r:m.createElement(yn.A,{className:"".concat(Tn,"-btn")}))),m.createElement(An.A.Fixed,{fit:!0},m.createElement("div",{onClick:function(){y([]),g(""),v([]),null!=h&&h([])},className:"".concat(Tn,"-btn-wrapper")},null!=(n=null==s?void 0:s())?n:m.createElement(Cn.A,{className:"".concat(Tn,"-btn")}))))),m.createElement("div",{className:bn()("".concat(Tn,"-tag-wrapper"),null!=t?t:""),style:null!=a?a:{}},m.createElement(k,Pn({mode:"multiple"},p,{wrap:!0,options:null!=u?u:[],value:e,onChange:function(e){v(e),null!=h&&h(e)}}))))};var Vn=(0,y.B)(wn,{});Vn.displayName="InputMultiple";const Rn=Vn;var On=n(61444),Ln=function(){return(Ln=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},Fn=function(e,r){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var t=0,a=Object.getOwnPropertySymbols(e);t<a.length;t++)r.indexOf(a[t])<0&&Object.prototype.propertyIsEnumerable.call(e,a[t])&&(n[a[t]]=e[a[t]]);return n},Dn=function(e,r,n){if(n||2===arguments.length)for(var t,a=0,l=r.length;a<l;a++)!t&&a in r||((t=t||Array.prototype.slice.call(r,0,a))[a]=r[a]);return e.concat(t||Array.prototype.slice.call(r))},Mn=On.A.usePropToState;const Hn=function(e){var r=e.selectProps,n=Fn(e,["selectProps"]),t=(e=Mn(n.value))[0],a=e[1],l=(e=(0,m.useMemo)((function(){return null!=r?r:{}}),[r]),(0,m.useMemo)((function(){var e;return Array.from(new Set(Dn(Dn([],null!=(e=n.options)?e:[],!0),null!=(e=n.value)?e:[],!0))).map((function(e){return{label:e,value:e}}))}),[null==n?void 0:n.options,null==n?void 0:n.value])),o=(0,m.useCallback)((function(){return m.createElement(Rn,Ln({},n,{options:l}))}),[n,l]);return m.createElement("div",{className:"adhere-ui-anthoc-input-multiple-select"},m.createElement(ne.A,Ln({mode:"multiple"},e,{value:t,onChange:function(e){var r;a(e),null!=(r=null==n?void 0:n.onChange)&&r.call(n,e)},options:l,dropdownRender:o})))};Rn.Select=Hn;const Nn=Rn,Wn=()=>{const[e,r]=(0,m.useState)([]);return m.createElement("div",{style:{padding:20}},m.createElement(Nn.Select,{value:e,onChange:r,isCheckAll:!0,selectProps:{style:{width:300}}}))},_n=()=>{const[e]=D.useForm();return(0,m.useEffect)((()=>{e.setFieldValue("inputMultiple",["111","222"])}),[]),m.createElement(D,{form:e,onFinish:e=>{alert(e)}},m.createElement(D.Item,{name:"inputMultiple",label:"多关键字输入",rules:[{required:!0,message:"请选择多关键字"}]},m.createElement(Nn.Select,{isCheckAll:!0,selectProps:{style:{width:300}}})),m.createElement(D.Item,null,m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"Submit")))},qn=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)([]),{media:a}=(0,m.useContext)(f.A.Context);return m.createElement(G.A.AutoCompleteCheckAllListSelect,{placeholder:"AutoCompleteCheckAllListSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,a.designWidth,a),overflow:"auto"},value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)})),listProps:{itemLayout:"horizontal",renderItem:e=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{title:e.title,description:e.label}))}})},jn=Array.from({length:100}).map((()=>{const e=ae().mock("@cname"),r=ae().mock("@guid");return{label:e,value:r,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}})),Gn=()=>{const[e,r]=(0,m.useState)([]),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(G.A.AutoCompleteListPagingSelect,{mode:"multiple",placeholder:"AutoCompleteListPagingSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,n.designWidth,n),overflow:"auto"},value:e,onChange:r,pagingProps:{loadData:function(e,r,n){return new Promise((t=>{const a=n?jn.filter((e=>{let{label:r}=e;return-1!==r.indexOf(n)})):[];t({totalCount:a.length,data:a.slice((e-1)*r,e*r)})}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:e=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{title:e.title,description:e.label}))}})},Bn=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)(void 0),{media:a}=(0,m.useContext)(f.A.Context);return m.createElement(G.A.AutoCompleteListSelect,{placeholder:"AutoCompleteListSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,a.designWidth,a),overflow:"auto"},value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(console.log("_kw",e),!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)})),listProps:{itemLayout:"horizontal",renderItem:e=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{title:e.title,description:e.label}))}})},Un=[{title:"Ant Design Title 1"},{title:"Ant Design Title 2"},{title:"Ant Design Title 3"},{title:"Ant Design Title 4"}].map((e=>{let{title:r}=e;return{title:r,label:r,value:r}})),zn=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(G.A.CheckAllListSelect,{className:Er,placeholder:"List",value:e,onChange:r,options:Un,listProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(B.A,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},Kn=Array.from({length:100}).map((()=>{const e=ae().mock("@cname"),r=ae().mock("@guid");return{label:e,value:r,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}})),Zn=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(G.A.ListPaging,{mode:"multiple",value:e,onChange:r,isSuspenseAsync:!1,pagingProps:{loadData:function(e,r){return new Promise((n=>{n({totalCount:Kn.length,data:Kn.slice((e-1)*r,e*r)})}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:e.avatar}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},Jn=Array.from({length:100}).map((()=>{const e=ae().mock("@cname"),r=ae().mock("@guid");return{label:e,value:r,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}})),$n=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(G.A.ListPagingSelect,{mode:"multiple",className:Er,placeholder:"CheckboxListPagingSelect",value:e,onChange:r,pagingProps:{loadData:function(e,r){return new Promise((n=>{n({totalCount:Jn.length,data:Jn.slice((e-1)*r,e*r)})}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:e.avatar}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},Yn=[{title:"Ant Design Title 1"},{title:"Ant Design Title 2"},{title:"Ant Design Title 3"},{title:"Ant Design Title 4"}].map((e=>{let{title:r}=e;return{title:r,label:r,value:r}})),Qn=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(G.A.ListSelect,{mode:"multiple",className:Er,placeholder:"List",value:e,onChange:r,options:Yn,listProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},Xn=[{title:"Ant Design Title 1"},{title:"Ant Design Title 2"},{title:"Ant Design Title 3"},{title:"Ant Design Title 4"}],et=()=>m.createElement(G.A,{itemLayout:"horizontal",dataSource:Xn,renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}),rt=Array.from({length:100}).map((()=>{const e=ae().mock("@cname"),r=ae().mock("@guid");return{label:e,value:r,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}})),nt=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(G.A.ListPaging,{value:e,onChange:e=>{console.log(e),r(e)},isSuspenseAsync:!1,pagingProps:{loadData:function(e,r){return console.log("paging",e,r),new Promise((n=>{n({totalCount:rt.length,data:rt.slice((e-1)*r,e*r)})}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:e.avatar}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},tt=Array.from({length:100}).map((()=>{const e=ae().mock("@cname"),r=ae().mock("@guid");return{label:e,value:r,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}})),at=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(G.A.ListPagingSelect,{className:Er,placeholder:"RadioListPagingSelect",value:e,onChange:r,pagingProps:{loadData:function(e,r){return console.log("paging",e,r),new Promise((n=>{n({totalCount:tt.length,data:tt.slice((e-1)*r,e*r)})}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:e.avatar}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},lt=[{title:"Ant Design Title 1"},{title:"Ant Design Title 2"},{title:"Ant Design Title 3"},{title:"Ant Design Title 4"}].map((e=>{let{title:r}=e;return{title:r,label:r,value:r}})),ot=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(G.A.ListSelect,{className:Er,placeholder:"List",value:e,onChange:r,options:lt,listProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})},it=Array.from({length:100}).map((()=>{const e=ae().mock("@cname"),r=ae().mock("@guid");return{label:e,value:r,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}})),st=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(G.A.ListPaging,{mode:"multiple",value:e,onChange:r,pagingProps:{loadData:function(e,r){return new Promise((n=>{setTimeout((()=>{n({totalCount:it.length,data:it.slice((e-1)*r,e*r)})}),1e3)}))},defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(z,{src:e.avatar}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}})};var ct=n(2460),mt=function(){return(mt=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},dt=(0,m.memo)((function(e){var r,n,t=(o=(0,m.useState)([]))[0],a=o[1],l=(0,m.useRef)(new Map),o=(0,m.useMemo)((function(){return e.pagingPropsPath||["pagingProps"]}),[e.pagingPropsPath]),i=(0,m.cloneElement)(e.children,mt(mt({},null!=(r=null==(r=null==e?void 0:e.children)?void 0:r.props)?r:{}),(r={},n=null==(i=null==e?void 0:e.children)?void 0:i.props,o.reduce((function(e,r){var t;return e[r]=mt({},null!=(t=null==n?void 0:n[r])?t:{}),n=null==n?void 0:n[r],e[r]}),r).onDataSourceChange=function(r,n){var t=null!=(t=null==(t=null==e?void 0:e.getOptionsByDataSource)?void 0:t.call(e,n))?t:n;l.current.set(r,t),a(Array.from(l.current.values()).flat())},r)));return(0,ct.A)(mt(mt({},e),{children:i,options:t}))}));const ut=dt;var pt=(0,y.B)(ut,{});pt.displayName="PagingEntityValueHOC";const ht=pt,ft=Array.from({length:100}).map((()=>{const e=ae().mock("@cname"),r=ae().mock("@guid");return{label:e,value:r,title:e,avatar:"https://xsgames.co/randomusers/avatar.php?g=pixel&key=".concat(r)}})),gt=()=>{const[e]=D.useForm();function r(e,r){return console.log("paging",e,r),new Promise((n=>{n({totalCount:ft.length,data:ft.slice((e-1)*r,e*r)})}))}const{media:n}=(0,m.useContext)(f.A.Context);return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ht,null,m.createElement(G.A.ListPaging,{isSuspenseAsync:!1,pagingProps:{loadData:r,defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(B.A,{src:e.avatar}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),m.createElement(D.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ht,null,m.createElement(G.A.ListPagingSelect,{placeholder:"RadioListPagingSelect",pagingProps:{loadData:r,defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(B.A,{src:e.avatar}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),m.createElement(D.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ht,null,m.createElement(G.A.ListPaging,{mode:"multiple",isSuspenseAsync:!1,pagingProps:{loadData:r,defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(B.A,{src:e.avatar}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),m.createElement(D.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ht,null,m.createElement(G.A.ListPagingSelect,{mode:"multiple",placeholder:"CheckboxListPagingSelect",pagingProps:{loadData:r,defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:(e,r)=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{avatar:m.createElement(B.A,{src:e.avatar}),title:m.createElement("a",{href:"https://ant.design"},e.title),description:"Ant Design, a design language for background applications, is refined by Ant UED Team"}))}}))),m.createElement(D.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ht,null,m.createElement(G.A.AutoCompleteListPagingSelect,{mode:"multiple",placeholder:"AutoCompleteListPagingSelect",dropdownStyle:{maxHeight:u.A.pxToRem(300,n.designWidth,n),overflow:"auto"},pagingProps:{loadData:r,defaultLimit:5},listPagingProps:{itemLayout:"horizontal",renderItem:e=>m.createElement(G.A.Item,null,m.createElement(G.A.Item.Meta,{title:e.title,description:e.label}))}}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},Ct=Array.from({length:100}).map((()=>{const e=ae().mock("@name"),r=ae().mock("@guid");return{id:r,name:e,address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city"),label:e,value:r}})),yt=[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}],vt=()=>{const[e]=D.useForm(),{media:r}=(0,m.useContext)(f.A.Context);function n(e,r){return console.log("paging",e,r),new Promise((n=>{n({totalCount:Ct.length,data:Ct.slice((e-1)*r,e*r)})}))}return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ht,null,m.createElement(ie.A.TablePaging,{isSuspenseAsync:!1,pagingProps:{loadData:n,defaultLimit:5},tablePagingProps:{rowKey:"id",columns:yt}}))),m.createElement(D.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ht,null,m.createElement(ie.A.TablePagingSelect,{placeholder:"RadioPagingList",pagingProps:{loadData:n,defaultLimit:5},tablePagingProps:{rowKey:"id",columns:yt}}))),m.createElement(D.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ht,null,m.createElement(ie.A.TablePaging,{mode:"multiple",isSuspenseAsync:!1,pagingProps:{loadData:n,defaultLimit:5},tablePagingProps:{rowKey:"id",columns:yt}}))),m.createElement(D.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ht,null,m.createElement(ie.A.TablePagingSelect,{mode:"multiple",placeholder:"RadioPagingList",pagingProps:{loadData:n,defaultLimit:5},tablePagingProps:{rowKey:"id",columns:yt}}))),m.createElement(D.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(ht,null,m.createElement(ie.A.AutoCompleteTablePagingSelect,{mode:"multiple",placeholder:"AutoCompleteTablePagingSelect",dropdownStyle:{maxHeight:u.A.pxToRem(300,r.designWidth,r),overflow:"auto"},pagingProps:{loadData:n,defaultLimit:5},tablePagingProps:{rowKey:"id",columns:yt}}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},bt=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)(void 0),{media:a}=(0,m.useContext)(f.A.Context);return m.createElement(Q.A.AutoCompleteButtonRadioSelect,{placeholder:"AutoCompleteButtonRadioSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,a.designWidth,a),overflow:"auto"},value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))})},At=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)(void 0),{media:a}=(0,m.useContext)(f.A.Context);return m.createElement(Q.A.AutoCompleteCustomRadioSelect,{placeholder:"AutoCompleteCustomRadioSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,a.designWidth,a),overflow:"auto"},value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r}=e;return m.createElement($.A,{span:4},m.createElement(Q.A,(0,Y.A)({key:null==r?void 0:r.value},null!=r?r:{}),null==r?void 0:r.label))})))))},kt=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)(void 0);return m.createElement(Q.A.AutoCompleteRadioSelect,{placeholder:"AutoCompleteRadioSelect",className:Er,value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))})},xt=()=>m.createElement(Q.A.ButtonRadio,{options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))}),St=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(Q.A.ButtonRadioSelect,{className:ur.A.Wrapper1,placeholder:"A-Z",value:e,onChange:r,options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))})},Pt=()=>m.createElement(Q.A.CustomRadio,{options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r}=e;return m.createElement($.A,{span:4},m.createElement(Q.A,(0,Y.A)({key:null==r?void 0:r.value},null!=r?r:{}),null==r?void 0:r.label))}))))),Et=()=>{const[e,r]=(0,m.useState)(void 0),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(Q.A.CustomRadioSelect,{className:ur.A.Wrapper1,dropdownStyle:{maxHeight:u.A.pxToRem(300,n.designWidth,n),overflowY:"auto"},placeholder:"A-Z",value:e,onChange:r,options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))},(e=>m.createElement(J.A,{gutter:[16,24]},e.map((e=>{let{data:r}=e;return m.createElement($.A,{span:4},m.createElement(Q.A,(0,Y.A)({key:null==r?void 0:r.value},null!=r?r:{}),null==r?void 0:r.label))})))))},Tt=()=>m.createElement(Q.A.HorizontalRadio,{options:[{label:"男",value:2},{label:"女",value:1}]}),It=()=>m.createElement(Q.A.Group,{options:[{label:"男",value:2},{label:"女",value:1}]}),wt=()=>{const[e,r]=(0,m.useState)(void 0),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(Q.A.RadioSelect,{placeholder:"A-Z",className:ur.A.Wrapper,dropdownStyle:{maxHeight:u.A.pxToRem(300,n.designWidth,n),overflowY:"auto"},value:e,onChange:r,options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))})},Vt=()=>m.createElement(Q.A.VerticalRadio,{options:[{label:"男",value:2},{label:"女",value:1}]});var Rt=function(){return(Rt=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},Ot=function(e,r){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var t=0,a=Object.getOwnPropertySymbols(e);t<a.length;t++)r.indexOf(a[t])<0&&Object.prototype.propertyIsEnumerable.call(e,a[t])&&(n[a[t]]=e[a[t]]);return n};Br().extend(Zr()),Br().extend(zr());const Lt=function(e){var r=e.defaultValue,n=e.value,t=e.onChange,a=Ot(e,["defaultValue","value","onChange"]);function o(e){return null==e?e:Array.isArray(e)?e.length?[Br()(e[0]),Br()(e[1])]:[]:null}function i(e){return{year:e.year(),quarter:e.quarter(),month:e.month(),week:e.week(),day:e.day(),date:e.date(),hour:e.hour(),minute:e.minute(),second:e.second()}}e=(0,m.useMemo)((function(){return o(n)}),[n]);var s=(0,m.useMemo)((function(){return o(r)}),[r]);return m.createElement(l.A,Rt({},a,{defaultValue:s,value:e,onChange:function(e,r){var n;null!=t&&t(e&&e.length?[e[0].format(null!=(n=a.format)?n:"L LTS"),e[1].format(null!=(n=a.format)?n:"L LTS")]:e,r,e,e&&e.length?[i(e[0]),i(e[1])]:null)}}))};var Ft=(0,y.B)(Lt,{});Ft.displayName="RangePickerFormatValueHOC";const Dt=Ft,Mt=()=>{const[e]=D.useForm();return(0,m.useEffect)((()=>{e.setFieldValue("createTime",["2023-12-12: 23:45:23","2026-12-12: 23:45:23"])}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"createTime",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},m.createElement(Dt,null)),m.createElement(D.Item,{name:"createTime1",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},m.createElement(Dt,{type:["seconds","seconds"]})),m.createElement(D.Item,{name:"createTime2",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},m.createElement(Dt,{type:["seconds","milliseconds"]})),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var Ht=function(){return(Ht=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},Nt=function(e,r){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var t=0,a=Object.getOwnPropertySymbols(e);t<a.length;t++)r.indexOf(a[t])<0&&Object.prototype.propertyIsEnumerable.call(e,a[t])&&(n[a[t]]=e[a[t]]);return n};Br().extend(Zr()),Br().extend(zr());var Wt=["milliseconds","milliseconds"];const _t=function(e){var r=e.defaultValue,n=e.value,t=e.onChange,a=void 0===(o=e.type)?Wt:o,o=Nt(e,["defaultValue","value","onChange","type"]);function i(e){if(null==e)return e;if(!Array.isArray(e))return null;if(!e.length)return[];for(var r=Array.isArray(null!=a?a:Wt)?(null!=a?a:Wt).slice(0,2):Wt,n=0;n<2;n++)["seconds","milliseconds"].includes(r[n])||(r[n]="milliseconds");return r.join()===["seconds","seconds"].join()||r.join()===["seconds","seconds"].join()?[Br().unix(e[0]),Br().unix(e[1])]:r.join()===["seconds","milliseconds"].join()?[Br().unix(e[0]),Br()(e[1])]:r.join()===["milliseconds","seconds"].join()?[Br()(e[0]),Br().unix(e[1])]:[Br()(e[0]),Br()(e[1])]}function s(e){return Math.round(e/1e3)}function c(e){return{year:e.year(),quarter:e.quarter(),month:e.month(),week:e.week(),day:e.day(),date:e.date(),hour:e.hour(),minute:e.minute(),second:e.second()}}e=(0,m.useMemo)((function(){return i(n)}),[n]);var d=(0,m.useMemo)((function(){return i(r)}),[r]);return m.createElement(l.A,Ht({},o,{defaultValue:d,value:e,onChange:function(e,r){var n;null!=t&&t(e&&e.length?(n=[e[0].valueOf(),e[1].valueOf()],!a||!Array.isArray(a)||a.length<2?n:"milliseconds"===a[0]&&"seconds"===a[1]?[n[0],s(n[1])]:"seconds"===a[0]&&"milliseconds"===a[1]?[s(n[0]),n[1]]:"seconds"===a[0]&&"seconds"===a[1]?[s(n[0]),s(n[1])]:n):e,r,e,e&&e.length?[c(e[0]),c(e[1])]:null)}}))};var qt=(0,y.B)(_t,{});qt.displayName="RangePickerTimestampValueHOC";const jt=qt,Gt=()=>{const[e]=D.useForm();return(0,m.useEffect)((()=>{e.setFieldValue("createTime",[Br()().valueOf(),Br()().valueOf()])}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"createTime",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},m.createElement(jt,null)),m.createElement(D.Item,{name:"createTime1",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},m.createElement(jt,{type:["seconds","seconds"]})),m.createElement(D.Item,{name:"createTime2",label:"创建时间",rules:[{required:!0,message:"请选择创建时间"}]},m.createElement(jt,{type:["seconds","milliseconds"]})),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},Bt=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)([]);return m.createElement(re.A.AutoCompleteCheckAllMultipleSelect,{className:Er,placeholder:"AutoCompleteCheckAllMultipleSelect",value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))},(e=>{let{originNode:r,value:n,onChange:t,options:a}=e;return m.createElement(h.A.Group,{value:n,onChange:t,options:a})}))},Ut=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)([]);return m.createElement(re.A.AutoCompleteMultipleSelect,{className:Er,placeholder:"AutoCompleteMultipleSelect",value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))})},zt=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)(void 0);return m.createElement(ne.A.AutoCompleteSelect,{className:Er,placeholder:"AutoCompleteSelect",value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))})},Kt=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(re.A.CheckAllSelect,{placeholder:"Select",value:e,onChange:r,className:ur.A.Wrapper,options:[{label:"男",value:"2"},{label:"女",value:"1"}]},(e=>{let{originNode:r,value:n,onChange:t,options:a}=e;return m.createElement(h.A.Group,{value:n,onChange:t,options:a})}))},Zt=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(ne.A.DropdownRenderSelect,{placeholder:"Select",mode:"multiple",value:e,onChange:r,className:ur.A.Wrapper,options:[{label:"男",value:"2"},{label:"女",value:"1"}]},(e=>{let{originNode:r,value:n,onChange:t,options:a}=e;return m.createElement(h.A.Group,{value:n,onChange:t,options:a})}))},Jt=()=>m.createElement(re.A,{placeholder:"Select",className:ur.A.Wrapper,options:[{label:"男",value:"2"},{label:"女",value:"1"}]}),$t=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(re.A.CheckAllSelect,{placeholder:"Select",value:e,onChange:r,className:ur.A.Wrapper,options:[{label:"男",value:"2"},{label:"女",value:"1"}],render:(e,r)=>m.createElement("div",{style:{display:"flex"}},m.createElement("div",{style:{flexShrink:0,marginRight:10,alignSelf:"flex-start"}},e),m.createElement("div",{style:{flex:"1",minWidth:0}},r))},(e=>{let{originNode:r,value:n,onChange:t,options:a}=e;return m.createElement(h.A.Group,{value:n,onChange:t,options:a})}))},Yt=()=>m.createElement(ne.A,{placeholder:"Select",className:ur.A.Wrapper,options:[{label:"男",value:"2"},{label:"女",value:"1"}]}),Qt=Array.from({length:100}).map((()=>{const e=ae().mock("@name"),r=ae().mock("@guid");return{id:r,name:e,address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city"),label:e,value:r}})),Xt=()=>{const[e,r]=(0,m.useState)([]),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(ie.A.AutoCompleteTablePagingSelect,{mode:"multiple",placeholder:"AutoCompleteTablePagingSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,n.designWidth,n),overflow:"auto"},value:e,onChange:r,pagingProps:{loadData:function(e,r,n){return console.log(e,r,n),new Promise((t=>{const a=n?Qt.filter((e=>{let{label:r}=e;return-1!==r.indexOf(n)})):[];t({totalCount:a.length,data:a.slice((e-1)*r,e*r)})}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},ea=Array.from({length:100}).map((()=>{const e=ae().mock("@name"),r=ae().mock("@guid");return{id:r,name:e,address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city"),label:e,value:r}})),ra=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)(void 0),{media:a}=(0,m.useContext)(f.A.Context);return m.createElement(ie.A.AutoCompleteTableSelect,{placeholder:"AutoCompleteTableSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,a.designWidth,a),overflow:"auto"},value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...ea].filter((r=>-1!==r.label.indexOf(e)));r(t),n()}),500)})),tableProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}],pagination:!1}})},na=Array.from({length:100}).map((()=>{const e=ae().mock("@name"),r=ae().mock("@guid");return{id:r,name:e,address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city"),label:e,value:r}})),ta=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(ie.A.TablePaging,{mode:"multiple",value:e,onChange:r,isSuspenseAsync:!1,pagingProps:{loadData:function(e,r){return console.log("paging",e,r),new Promise((n=>{n({totalCount:na.length,data:na.slice((e-1)*r,e*r)})}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},aa=Array.from({length:100}).map((()=>{const e=ae().mock("@name"),r=ae().mock("@guid");return{id:r,name:e,address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city"),label:e,value:r}})),la=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(ie.A.TablePagingSelect,{mode:"multiple",className:Er,placeholder:"RadioPagingList",value:e,onChange:r,pagingProps:{loadData:function(e,r){return console.log("paging",e,r),new Promise((n=>{n({totalCount:aa.length,data:aa.slice((e-1)*r,e*r)})}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},oa=Array.from({length:100}).map((()=>{const e=ae().mock("@name"),r=ae().mock("@guid");return{id:r,name:e,address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city"),label:e,value:r}})),ia=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(ie.A.TablePaging,{value:e,onChange:r,isSuspenseAsync:!1,pagingProps:{loadData:function(e,r){return console.log("paging",e,r),new Promise((n=>{n({totalCount:oa.length,data:oa.slice((e-1)*r,e*r)})}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},sa=Array.from({length:100}).map((()=>{const e=ae().mock("@name"),r=ae().mock("@guid");return{id:r,name:e,address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city"),label:e,value:r}})),ca=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(ie.A.TablePagingSelect,{className:Er,placeholder:"RadioPagingList",value:e,onChange:r,pagingProps:{loadData:function(e,r){return console.log("paging",e,r),new Promise((n=>{n({totalCount:sa.length,data:sa.slice((e-1)*r,e*r)})}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},ma=Array.from({length:100}).map((()=>{const e=ae().mock("@name"),r=ae().mock("@guid");return{id:r,name:e,address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city"),label:e,value:r}})),da=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(ie.A.TableSelect,{className:Er,placeholder:"TableSelect",value:e,onChange:r,options:ma,tableProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},ua=Array.from({length:100}).map((()=>{const e=ae().mock("@name"),r=ae().mock("@guid");return{id:r,name:e,address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city"),label:e,value:r}})),pa=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(ie.A.TablePaging,{mode:"multiple",value:e,onChange:r,pagingProps:{loadData:function(e,r){return console.log("paging",e,r),new Promise((n=>{setTimeout((()=>{n({totalCount:ua.length,data:ua.slice((e-1)*r,e*r)})}),2e3)}))},defaultLimit:5},tablePagingProps:{rowKey:"id",columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}]}})},ha=Array.from({length:100}).map((()=>({id:ae().mock("@guid"),name:ae().mock("@name"),address:ae().mock("@region"),height:ae().mock("@integer(60, 100)"),width:ae().mock("@integer(60, 100)"),nativePlace:ae().mock("@city")}))),fa=()=>m.createElement(ie.A,{columns:[{title:"名称",key:"name",dataIndex:"name"},{title:"地址",key:"address",dataIndex:"address"},{title:"籍贯",key:"nativePlace",dataIndex:"nativePlace"},{title:"身高",key:"height",dataIndex:"height"},{title:"体重",key:"width",dataIndex:"width"}],dataSource:ha}),ga=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)([]);return m.createElement(me.A.AutoCompleteCheckAllTagSelect,{placeholder:"AutoCompleteCheckAllTagSelect",className:Er,value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id,children:e.t})));r(t),n()}),500)}))})},Ca=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)([]);return m.createElement(me.A.AutoCompleteTagSelect,{placeholder:"AutoCompleteTagSelect",mode:"multiple",className:Er,value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id,children:e.t})));r(t),n()}),500)}))})},ya=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(me.A.CheckAllTagSelect,{className:ur.A.Wrapper,placeholder:"A-Z",value:e,onChange:e=>{r(e)},options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{value:n,label:n,children:n}}))})},va=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(me.A.CheckAllTagSelect,{className:ur.A.Wrapper,placeholder:"A-Z",value:e,onChange:e=>{r(e)},options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{value:n,label:n,children:n}})),render:(e,r)=>m.createElement("div",null,m.createElement("div",null,r),m.createElement("div",null,e))})},ba=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(me.A.HorizontalCheckAllCheckableTagGroup,{value:e,onChange:e=>{r(e)},options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{value:n,children:n}}))})},Aa=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(me.A.HorizontalCheckableTagGroup,{mode:"multiple",value:e,onChange:e=>{r(e)},options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{value:n,children:n}}))})},ka=()=>m.createElement(me.A.HorizontalTagGroup,{options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{value:n,children:n}}))}),xa=()=>m.createElement(me.A,null,"Tag 1"),Sa=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(me.A.TagSelect,{mode:"multiple",className:ur.A.Wrapper,placeholder:"A-Z",value:e,onChange:e=>{r(e)},options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{value:n,label:n,children:n}}))})},Pa=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(me.A.VerticalCheckAllCheckableTagGroup,{value:e,onChange:e=>{r(e)},options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{value:n,children:n}}))})},Ea=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(me.A.VerticalCheckableTagGroup,{mode:"multiple",value:e,onChange:e=>{r(e)},options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{value:n,children:n}}))})},Ta=()=>m.createElement(me.A.VerticalTagGroup,{options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{value:n,children:n}}))});var Ia=function(){return(Ia=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},wa=function(e,r){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var t=0,a=Object.getOwnPropertySymbols(e);t<a.length;t++)r.indexOf(a[t])<0&&Object.prototype.propertyIsEnumerable.call(e,a[t])&&(n[a[t]]=e[a[t]]);return n};Br().extend(Zr()),Br().extend(zr());const Va=function(e){var r=e.defaultValue,n=e.value,t=e.onChange,l=wa(e,["defaultValue","value","onChange"]);function o(e){var r;return null==e?e:(r=Br()().format("L"),Br()("".concat(r," ").concat(e)))}e=(0,m.useMemo)((function(){return o(n)}),[n]);var i=(0,m.useMemo)((function(){return o(r)}),[r]);return m.createElement(a.A,Ia({},l,{defaultValue:i,value:e,onChange:function(e,r){var n;null!=t&&t(e.format(null!=(n=l.format)?n:"LTS"),r,e,{hour:e.hour(),minute:e.minute(),second:e.second()})}}))};var Ra=(0,y.B)(Va,{});Ra.displayName="TimePickerFormatValueHOC";const Oa=Ra,La=()=>{const[e]=D.useForm();return(0,m.useEffect)((()=>{e.setFieldValue("createTime","23:59:59")}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"createTime",label:"开店时间",rules:[{required:!0,message:"请选择开店时间"}]},m.createElement(Oa,null)),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))};var Fa=function(){return(Fa=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var a in r=arguments[n])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},Da=function(e,r){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var t=0,a=Object.getOwnPropertySymbols(e);t<a.length;t++)r.indexOf(a[t])<0&&Object.prototype.propertyIsEnumerable.call(e,a[t])&&(n[a[t]]=e[a[t]]);return n};const Ma=function(e){var r=e.defaultValue,n=e.value,t=e.onChange,l=void 0===(o=e.type)?"milliseconds":o,o=Da(e,["defaultValue","value","onChange","type"]);function i(e){return null==e?e:"seconds"===l?Br().unix(e):Br()(e)}e=(0,m.useMemo)((function(){return i(n)}),[n]);var s=(0,m.useMemo)((function(){return i(r)}),[r]);return m.createElement(a.A,Fa({},o,{defaultValue:s,value:e,onChange:function(e,r){var n;null!=t&&t((n=e.valueOf(),"seconds"===l?Math.round(n/1e3):n),r,e,{hour:e.hour(),minute:e.minute(),second:e.second()})}}))};var Ha=(0,y.B)(Ma,{});Ha.displayName="TimePickerTimestampValueHOC";const Na=Ha,Wa=()=>{const[e]=D.useForm();return(0,m.useEffect)((()=>{e.setFieldValue("birthDay2",Br()().valueOf())}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"birthday",label:"生日",rules:[{required:!0,message:"请选择生日"}]},m.createElement(Na,null)),m.createElement(D.Item,{name:"birthday1",label:"生日",rules:[{required:!0,message:"请选择生日"}]},m.createElement(Na,{type:"seconds"})),m.createElement(D.Item,{name:"birthday2",label:"生日",rules:[{required:!0,message:"请选择生日"}]},m.createElement(Na,null)),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},_a=()=>{const[e,r]=(0,m.useState)([]),[n,t]=(0,m.useState)([]),{media:a}=(0,m.useContext)(f.A.Context);return m.createElement(pe.A.AutoCompleteTransferSelect,{placeholder:"AutoCompleteTransferSelect",className:Er,dropdownStyle:{maxHeight:u.A.pxToRem(300,a.designWidth,a),overflow:"auto"},value:n,options:e,onChange:t,loadData:e=>new Promise((n=>{if(console.log("_kw",e),!e)return r([]),void n();setTimeout((()=>{const t=[...N.A].filter((r=>-1!==r.t.indexOf(e))).map((e=>({label:e.t,value:e.id})));r(t),n()}),500)}))})},qa=Array.from({length:20}).map(((e,r)=>({key:r.toString(),title:"content".concat(r+1),description:"description of content".concat(r+1)}))),ja=qa.filter((e=>Number(e.key)>10)).map((e=>e.key)),Ga=()=>{const[e,r]=(0,m.useState)(ja),[n,t]=(0,m.useState)([]);return m.createElement(pe.A,{dataSource:qa,titles:["Source","Target"],targetKeys:e,selectedKeys:n,onChange:(e,n,t)=>{console.log("targetKeys:",e),console.log("direction:",n),console.log("moveKeys:",t),r(e)},onSelectChange:(e,r)=>{console.log("sourceSelectedKeys:",e),console.log("targetSelectedKeys:",r),t([...e,...r])},onScroll:(e,r)=>{console.log("direction:",e),console.log("target:",r.target)},render:e=>e.title})},Ba=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(pe.A.TransferSelect,{placeholder:"A-Z",className:ur.A.Wrapper2,value:e,onChange:r,options:Array.from({length:26}).map(((e,r)=>{const n=String.fromCharCode(97+r).toUpperCase();return{label:n,value:n}}))})};var Ua=n(93919);const za=[{value:"zhejiang",label:"Zhejiang",children:[{value:"hangzhou",label:"Hangzhou",children:[{value:"xihu",label:"West Lake"}]}]},{value:"jiangsu",label:"Jiangsu",children:[{value:"nanjing",label:"Nanjing",children:[{value:"zhonghuamen",label:"Zhong Hua Men"}]}]}],Ka=[...ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,isLeaf:!1,pId:0}))),...Object.keys(ve.Wj).map((e=>ve.Wj[e].map((r=>({title:r.name,label:r.name,value:r.id,id:r.id,isLeaf:!1,pId:"".concat(e)}))))).flat(),...Object.keys(ve.Vb).map((e=>ve.Vb[e].map((r=>({title:r.name,label:r.name,value:r.id,id:r.id,isLeaf:!0,pId:e}))))).flat()],Za=()=>{const[e]=D.useForm();return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,{treeDataProp:"options"},m.createElement(ye.A,{placeholder:"Please select",options:za}))),m.createElement(D.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,{treeDataProp:"options"},m.createElement(ye.A.CascaderMulti,{placeholder:"Please select",options:za}))),m.createElement(D.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,{treeDataProp:"options"},m.createElement(ye.A.CascaderChangeOnSelect,{placeholder:"Please select",options:za}))),m.createElement(D.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,{treeDataProp:"options"},m.createElement(ye.A.CascaderShowChild,{placeholder:"Please select",options:za}))),m.createElement(D.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,{treeDataProp:"options"},m.createElement(ye.A.CascaderMulti,{placeholder:"Please select",options:Ka,treeDataSimpleMode:!0}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},Ja=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:m.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],$a=[...ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,isLeaf:!1,pId:0}))),...Object.keys(ve.Wj).map((e=>ve.Wj[e].map((r=>({title:r.name,label:r.name,value:r.id,id:r.id,isLeaf:!1,pId:"".concat(e)}))))).flat(),...Object.keys(ve.Vb).map((e=>ve.Vb[e].map((r=>({title:r.name,label:r.name,value:r.id,id:r.id,isLeaf:!0,pId:e}))))).flat()],Ya=()=>{const[e]=D.useForm(),{media:r}=(0,m.useContext)(f.A.Context);return(0,m.useEffect)((()=>{}),[]),m.createElement(D,{form:e,labelAlign:"right",labelCol:{span:3},wrapperCol:{span:21},onFinish:e=>{console.log("values",e),alert(JSON.stringify(e))}},m.createElement(D.Item,{name:"sex",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,null,m.createElement(ke.A,{dropdownStyle:{maxHeight:u.A.pxToRem(400,r.designWidth,r),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:Ja}))),m.createElement(D.Item,{name:"sex1",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,null,m.createElement(ke.A.TreeMultiSelect,{dropdownStyle:{maxHeight:u.A.pxToRem(400,r.designWidth,r),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:Ja}))),m.createElement(D.Item,{name:"sex2",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,null,m.createElement(ke.A.TreeCheckedShowParentSelect,{dropdownStyle:{maxHeight:u.A.pxToRem(400,r.designWidth,r),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:Ja}))),m.createElement(D.Item,{name:"sex3",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,null,m.createElement(ke.A.TreeCheckedShowChildSelect,{dropdownStyle:{maxHeight:u.A.pxToRem(400,r.designWidth,r),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:Ja}))),m.createElement(D.Item,{name:"sex4",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,null,m.createElement(ke.A.TreeCheckedShowAllSelect,{dropdownStyle:{maxHeight:u.A.pxToRem(400,r.designWidth,r),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:Ja}))),m.createElement(D.Item,{name:"sex5",label:"性别",rules:[{required:!0,message:"请选择性别"}]},m.createElement(Ua.A,null,m.createElement(ke.A,{dropdownStyle:{maxHeight:u.A.pxToRem(400,r.designWidth,r),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,treeData:$a,treeDataSimpleMode:!0}))),m.createElement(D.Item,{wrapperCol:{span:24}},m.createElement(M.Ay,{htmlType:"submit",block:!0,type:"primary"},"提交")))},Qa=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(ke.A.AsyncTreeCheckedShowAllSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeCheckedShowAllSelect",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},Xa=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(ke.A.AsyncTreeCheckedShowChildSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeCheckedShowChildSelect",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},el=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(ke.A.AsyncTreeCheckedShowParentSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeCheckedShowParentSelect",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},rl=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(ke.A.AsyncTreeLeafSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeLeafSelect",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},nl=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(ke.A.AsyncTreeMultiLeafSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeMultiLeafSelect",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},tl=()=>{const[e,r]=(0,m.useState)(["230102000000","210102000000"]);return m.createElement(ke.A.AsyncTreeMultiLeafSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeMultiLeafSelectEcho",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)},fetchBranch:function(e,r){return Promise.resolve([{title:"辽宁省",value:"210000000000",isLeaf:!1,children:[{title:"沈阳市",value:"210100000000",isLeaf:!1,children:[{title:"和平区",value:"210102000000",isLeaf:!0}]}]},{title:"黑龙江省",value:"230000000000",isLeaf:!1,children:[{title:"哈尔滨市",value:"230100000000",isLeaf:!1,children:[{title:"道里区",value:"230102000000",isLeaf:!0}]}]}])}})},al=()=>{const[e,r]=(0,m.useState)([]);return m.createElement(ke.A.AsyncTreeMultiSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeMultiSelect",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},ll=()=>{const[e,r]=(0,m.useState)(["230102000000","210102000000"]);return m.createElement(ke.A.AsyncTreeMultiSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeMultiSelectEcho",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)},fetchBranch:function(e,r){return Promise.resolve([{title:"辽宁省",value:"210000000000",isLeaf:!1,children:[{title:"沈阳市",value:"210100000000",isLeaf:!1,children:[{title:"和平区",value:"210102000000",isLeaf:!0}]}]},{title:"黑龙江省",value:"230000000000",isLeaf:!1,children:[{title:"哈尔滨市",value:"230100000000",isLeaf:!1,children:[{title:"道里区",value:"230102000000",isLeaf:!0}]}]}])}})},ol=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(ke.A.AsyncTreeSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeSelect",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)}})},il=()=>{const[e,r]=(0,m.useState)("210102000000");return m.createElement(ke.A.AsyncTreeSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeSelectEcho",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)},fetchBranch:function(e,r){return Promise.resolve([{title:"辽宁省",value:"210000000000",isLeaf:!1,children:[{title:"沈阳市",value:"210100000000",isLeaf:!1,children:[{title:"和平区",value:"210102000000",isLeaf:!0}]}]}])}})},sl=()=>{const[e,r]=(0,m.useState)(["210102000000"]);return m.createElement(ke.A.AsyncTreeMultiSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeMultiSelect",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)},fetchBranch:function(e,r){return Promise.resolve([{title:"辽宁省",value:"210000000000",id:"210000000000",pId:0,isLeaf:!1},{title:"沈阳市",value:"210100000000",id:"210100000000",pId:"210000000000",isLeaf:!1},{title:"和平区",value:"210102000000",id:"210102000000",pId:"210100000000",isLeaf:!0}])},treeDataSimpleMode:!0})},cl=()=>{const[e,r]=(0,m.useState)(void 0);return m.createElement(ke.A.AsyncTreeSelect,{className:ur.A.Wrapper,placeholder:"AsyncTreeSelect",value:e,onChange:r,fetchData:function(e,r){var n,t;if(!e)return Promise.resolve(ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,pId:0,isLeaf:!1}))));const a=Object.keys(ve.Vb).map((e=>ve.Vb[e])).flat().map((e=>e.id)),l=null===(n={...ve.Wj,...ve.Vb}[e])||void 0===n||null===(t=n.map)||void 0===t?void 0:t.call(n,(r=>({title:r.name,label:r.name,value:r.id,id:r.id,pId:e,isLeaf:a.includes(r.id)})));return Promise.resolve(l)},treeDataSimpleMode:!0})},ml=[...ve.lg.map((e=>({title:e.name,label:e.name,value:e.id,id:e.id,isLeaf:!1,pId:0}))),...Object.keys(ve.Wj).map((e=>ve.Wj[e].map((r=>({title:r.name,label:r.name,value:r.id,id:r.id,isLeaf:!1,pId:"".concat(e)}))))).flat(),...Object.keys(ve.Vb).map((e=>ve.Vb[e].map((r=>({title:r.name,label:r.name,value:r.id,id:r.id,isLeaf:!0,pId:e}))))).flat()],dl=()=>{const[e,r]=(0,m.useState)(),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(ke.A,{className:ur.A.Wrapper,dropdownStyle:{maxHeight:u.A.pxToRem(400,n.designWidth,n),overflow:"auto"},value:e,placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{r(e)},treeData:ml,treeDataSimpleMode:!0})},ul=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:m.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],pl=()=>{const[e,r]=(0,m.useState)(),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(ke.A.TreeCheckedShowAllSelect,{value:e,className:ur.A.Wrapper1,dropdownStyle:{maxHeight:u.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{r(e)},treeData:ul})},hl=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:m.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],fl=()=>{const[e,r]=(0,m.useState)(),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(ke.A.TreeCheckedShowChildSelect,{value:e,className:ur.A.Wrapper1,dropdownStyle:{maxHeight:u.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{r(e)},treeData:hl})},gl=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:m.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],Cl=()=>{const[e,r]=(0,m.useState)(),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(ke.A.TreeCheckedShowParentSelect,{value:e,className:ur.A.Wrapper1,dropdownStyle:{maxHeight:u.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{r(e)},treeData:gl})},yl=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:m.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],vl=()=>{const[e,r]=(0,m.useState)(),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(ke.A.TreeLeafSelect,{value:e,className:ur.A.Wrapper1,dropdownStyle:{maxHeight:u.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{r(e)},treeData:yl})},bl=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:m.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],Al=()=>{const[e,r]=(0,m.useState)(),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(ke.A.TreeMultiLeafSelect,{value:e,className:ur.A.Wrapper1,dropdownStyle:{maxHeight:u.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{r(e)},treeData:bl})},kl=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:m.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],xl=()=>{const[e,r]=(0,m.useState)(),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(ke.A.TreeMultiSelect,{value:e,className:ur.A.Wrapper1,dropdownStyle:{maxHeight:u.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{r(e)},treeData:kl})},Sl=[{value:"parent 1",title:"parent 1",children:[{value:"parent 1-0",title:"parent 1-0",children:[{value:"leaf1",title:"leaf1"},{value:"leaf2",title:"leaf2"}]},{value:"parent 1-1",title:"parent 1-1",children:[{value:"leaf3",title:m.createElement("b",{style:{color:"#08c"}},"leaf3")}]}]}],Pl=()=>{const[e,r]=(0,m.useState)(),{media:n}=(0,m.useContext)(f.A.Context);return m.createElement(ke.A,{value:e,className:ur.A.Wrapper1,dropdownStyle:{maxHeight:u.A.pxToRem(400,n.designWidth,n),overflow:"auto"},placeholder:"Please select",treeDefaultExpandAll:!0,onChange:e=>{r(e)},treeData:Sl})},El="ClrPgP4TwKNSOwDjYrdj",Tl="G1o43OKmaP8SCW8K7_27",{ScrollLayout:Il}=i.A,wl=()=>m.createElement(d.Ay,null,m.createElement(d.wn,{title:"AntHOC"},m.createElement("p",null,"Antd组件HOC和增强"),m.createElement("ul",null,m.createElement("li",null,"对antd一些组件进行HOC处理同时对有些组件在HOC的同时进行增强处理"))),m.createElement(d.Wc,{title:"BasicHOC",config:[{id:"Input",name:"Input",mode:"code",scope:{React:m},cardProps:{description:{title:"Input",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Input } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => <Input placeholder=\"请输入\" className={styles.Wrapper} />;\r\n",renderChildren:()=>m.createElement(De,null)},{id:"TextArea",name:"TextArea",mode:"code",scope:{React:m},cardProps:{description:{title:"TextArea",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { TextArea } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => <TextArea placeholder=\"请输入\" className={styles.Wrapper} />;\r\n",renderChildren:()=>m.createElement(lr,null)},{id:"InputNumberDecimal1",name:"InputNumberDecimal1",mode:"code",scope:{React:m},cardProps:{description:{title:"InputNumberDecimal1",info:"只能输入一位小数"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { InputNumberDecimal1 } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => <InputNumberDecimal1 placeholder=\"请输入\" className={styles.Wrapper} />;\r\n",renderChildren:()=>m.createElement(He,null)},{id:"InputNumberDecimal2",name:"InputNumberDecimal2",mode:"code",scope:{React:m},cardProps:{description:{title:"InputNumberDecimal2",info:"只能输入两位小数"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { InputNumberDecimal2 } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => <InputNumberDecimal2 placeholder=\"请输入\" className={styles.Wrapper} />;\r\n",renderChildren:()=>m.createElement(We,null)},{id:"InputNumberInteger",name:"InputNumberInteger",mode:"code",scope:{React:m},cardProps:{description:{title:"InputNumberInteger",info:"只能输入整数"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { InputNumberInteger } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => <InputNumberInteger placeholder=\"请输入\" className={styles.Wrapper} />;\r\n",renderChildren:()=>m.createElement(qe,null)},{id:"Modal",name:"Modal",mode:"code",scope:{React:m},cardProps:{description:{title:"Modal",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Button, Modal } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}\r\n      >\r\n        Open Modal\r\n      </Button>\r\n      <Modal\r\n        title=\"Basic Modal\"\r\n        open={isModalOpen}\r\n        onOk={() => {\r\n          setIsModalOpen(false);\r\n        }}\r\n        onCancel={() => {\r\n          setIsModalOpen(false);\r\n        }}\r\n      >\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ue,null)},{id:"DatePicker",name:"DatePicker",mode:"code",scope:{React:m},cardProps:{description:{title:"DatePicker",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { DatePicker } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => (\r\n  <DatePicker\r\n    // style={{\r\n    //   width: 200,\r\n    // }}\r\n    className={styles.Wrapper}\r\n    showTime\r\n    onChange={(value, dateString) => {\r\n      console.log(value, dateString);\r\n    }}\r\n  />\r\n);\r\n",renderChildren:()=>m.createElement(Ve,null)},{id:"RangePicker",name:"RangePicker",mode:"code",scope:{React:m},cardProps:{description:{title:"RangePicker",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { RangePicker } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => <RangePicker className={styles.Wrapper} />;\r\n",renderChildren:()=>m.createElement($e,null)},{id:"TimePicker",name:"TimePicker",mode:"code",scope:{React:m},cardProps:{description:{title:"TimePicker",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { TimePicker } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => <TimePicker className={styles.Wrapper} />;\r\n",renderChildren:()=>m.createElement(or,null)},{id:"Upload",name:"Upload",mode:"code",scope:{React:m},cardProps:{description:{title:"Upload",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, Upload } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Upload\r\n    {...{\r\n      name: 'file',\r\n      action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n      headers: {\r\n        authorization: 'authorization-text',\r\n      },\r\n      onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n          console.log(info.file, info.fileList);\r\n        }\r\n        if (info.file.status === 'done') {\r\n          message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    }}\r\n  >\r\n    <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n  </Upload>\r\n);\r\n",renderChildren:()=>m.createElement(dr,null)},{id:"Pagination",name:"Pagination",mode:"code",scope:{React:m},cardProps:{description:{title:"Pagination",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Pagination } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => <Pagination defaultCurrent={1} total={50} />;\r\n",renderChildren:()=>m.createElement(Je,null)},{id:"SubmitButton",name:"SubmitButton",mode:"code",scope:{React:m},cardProps:{description:{title:"SubmitButton",info:"提交按钮"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { SubmitButton } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => (\r\n  <SubmitButton\r\n    className={styles.Wrapper}\r\n    type=\"primary\"\r\n    onClick={() => new Promise((resolve) => setTimeout(resolve, 3000))}\r\n  >\r\n    提交\r\n  </SubmitButton>\r\n);\r\n",renderChildren:()=>m.createElement(rr,null)},{id:"Form",name:"Form",mode:"code",scope:{React:m},cardProps:{description:{title:"Form",info:"使用了默认配置"}},type:"PlayGround",codeText:'import React from \'react\';\r\n\r\nimport { Space } from \'@baifendian/adhere\';\r\nimport { Form, Input } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nexport default () => (\r\n  <div>\r\n    <p>\r\n      对Form的Rules进行增强(\r\n      <a target="_blank" href="/adhere/component/util/validator">\r\n        使用adhere-util-validator\r\n      </a>\r\n      )\r\n    </p>\r\n\r\n    <Form labelCol={{ span: 3 }} wrapperCol={{ span: 21 }}>\r\n      <ul>\r\n        <Space.Group direction="vertical">\r\n          <li>\r\n            <Form.Item\r\n              name="email"\r\n              label="email"\r\n              rules={[Form.ValidatorRules.isEmail({ invalidMessage: \'email格式错误\' })]}\r\n            >\r\n              <Input placeholder="email" />\r\n            </Form.Item>\r\n          </li>\r\n          <li>\r\n            <Form.Item\r\n              name="mime"\r\n              label="mime"\r\n              rules={[\r\n                Form.ValidatorRules.isMimeType({\r\n                  invalidMessage: \'MimeType格式错误\',\r\n                }),\r\n              ]}\r\n            >\r\n              <Input placeholder="mime" />\r\n            </Form.Item>\r\n          </li>\r\n          <li>\r\n            <Form.Item\r\n              name="hex"\r\n              label="hex"\r\n              rules={[\r\n                Form.ValidatorRules.isHexColor({\r\n                  invalidMessage: \'hex值格式错误\',\r\n                }),\r\n              ]}\r\n            >\r\n              <Input placeholder="hex" />\r\n            </Form.Item>\r\n          </li>\r\n          <li>\r\n            <Form.Item\r\n              name="ip"\r\n              label="ip"\r\n              rules={[\r\n                Form.ValidatorRules.isIP({\r\n                  invalidMessage: \'ip地址格式错误\',\r\n                }),\r\n              ]}\r\n            >\r\n              <Input placeholder="ip" />\r\n            </Form.Item>\r\n          </li>\r\n          <li>\r\n            <Form.Item\r\n              name="chinaPhoneNumber"\r\n              label="手机卡 + 数据卡 + 上网卡"\r\n              rules={[\r\n                Form.ValidatorRules.isAllChinaPhoneNumber({\r\n                  invalidMessage: \'手机卡或数据卡或上网卡格式错误\',\r\n                }),\r\n              ]}\r\n            >\r\n              <Input placeholder="手机卡 + 数据卡 + 上网卡" />\r\n            </Form.Item>\r\n          </li>\r\n        </Space.Group>\r\n      </ul>\r\n    </Form>\r\n  </div>\r\n);\r\n',renderChildren:()=>m.createElement(Fe,null)}]}),m.createElement(d.Wc,{title:"TransferHOC",config:[{id:"Transfer",name:"Transfer",mode:"code",scope:{React:m},cardProps:{description:{title:"Transfer",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Transfer } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst mockData = Array.from({\r\n  length: 20,\r\n}).map((_, i) => ({\r\n  key: i.toString(),\r\n  title: `content${i + 1}`,\r\n  description: `description of content${i + 1}`,\r\n}));\r\nconst initialTargetKeys = mockData.filter((item) => Number(item.key) > 10).map((item) => item.key);\r\n\r\nexport default () => {\r\n  const [targetKeys, setTargetKeys] = useState(initialTargetKeys);\r\n  const [selectedKeys, setSelectedKeys] = useState([]);\r\n  const onChange = (nextTargetKeys, direction, moveKeys) => {\r\n    console.log('targetKeys:', nextTargetKeys);\r\n    console.log('direction:', direction);\r\n    console.log('moveKeys:', moveKeys);\r\n    setTargetKeys(nextTargetKeys);\r\n  };\r\n  const onSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n    console.log('sourceSelectedKeys:', sourceSelectedKeys);\r\n    console.log('targetSelectedKeys:', targetSelectedKeys);\r\n    setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\r\n  };\r\n  const onScroll = (direction, e) => {\r\n    console.log('direction:', direction);\r\n    console.log('target:', e.target);\r\n  };\r\n\r\n  return (\r\n    <Transfer\r\n      dataSource={mockData}\r\n      titles={['Source', 'Target']}\r\n      targetKeys={targetKeys}\r\n      selectedKeys={selectedKeys}\r\n      onChange={onChange}\r\n      onSelectChange={onSelectChange}\r\n      onScroll={onScroll}\r\n      render={(item) => item.title}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ga,null)},{id:"TransferSelect",name:"TransferSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"TransferSelect",info:"穿梭框的Select形式"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Transfer } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Transfer.TransferSelect\r\n      placeholder=\"A-Z\"\r\n      className={styles.Wrapper2}\r\n      value={value}\r\n      onChange={setValue}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ba,null)},{id:"AutoCompleteTransferSelect",name:"AutoCompleteTransferSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteTransferSelect",info:"穿梭框的自动补全形式"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Transfer } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Transfer.AutoCompleteTransferSelect\r\n      placeholder=\"AutoCompleteTransferSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          console.log('_kw', _kw);\r\n\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(_a,null)}]}),m.createElement(d.Wc,{title:"SelectHOC",config:[{id:"Select",name:"Select",mode:"code",scope:{React:m},cardProps:{description:{title:"Select",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Select } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  return (\r\n    <Select\r\n      placeholder=\"Select\"\r\n      className={styles.Wrapper}\r\n      options={[\r\n        {\r\n          label: '男',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '女',\r\n          value: '1',\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Yt,null)},{id:"MultipleSelect",name:"MultipleSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"MultipleSelect",info:"多选"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { MultipleSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  return (\r\n    <MultipleSelect\r\n      placeholder=\"Select\"\r\n      className={styles.Wrapper}\r\n      options={[\r\n        {\r\n          label: '男',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '女',\r\n          value: '1',\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Jt,null)},{id:"CheckAllMultipleSelect",name:"CheckAllMultipleSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckAllMultipleSelect",info:"带有全选的多选"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox, MultipleSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <MultipleSelect.CheckAllSelect\r\n      placeholder=\"Select\"\r\n      value={value}\r\n      onChange={setValue}\r\n      className={styles.Wrapper}\r\n      options={[\r\n        {\r\n          label: '男',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '女',\r\n          value: '1',\r\n        },\r\n      ]}\r\n    >\r\n      {({ originNode, value, onChange, options }) => {\r\n        // return originNode;\r\n        return <Checkbox.Group value={value} onChange={onChange} options={options} />;\r\n      }}\r\n    </MultipleSelect.CheckAllSelect>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Kt,null)},{id:"RenderCheckAllMultipleSelect",name:"RenderCheckAllMultipleSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"RenderCheckAllMultipleSelect",info:"可以自定义全选按钮的位置"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox, MultipleSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <MultipleSelect.CheckAllSelect\r\n      placeholder=\"Select\"\r\n      value={value}\r\n      onChange={setValue}\r\n      className={styles.Wrapper}\r\n      options={[\r\n        {\r\n          label: '男',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '女',\r\n          value: '1',\r\n        },\r\n      ]}\r\n      render={(checkAllOrigin, children) => (\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ flexShrink: 0, marginRight: 10, alignSelf: 'flex-start' }}>\r\n            {checkAllOrigin}\r\n          </div>\r\n          <div style={{ flex: '1', minWidth: 0 }}>{children}</div>\r\n        </div>\r\n      )}\r\n    >\r\n      {({ originNode, value, onChange, options }) => {\r\n        return <Checkbox.Group value={value} onChange={onChange} options={options} />;\r\n      }}\r\n    </MultipleSelect.CheckAllSelect>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement($t,null)},{id:"DropdownRenderSelect",name:"DropdownRenderSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"DropdownRenderSelect",info:"可以自定义渲染的Select"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox, Select } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Select.DropdownRenderSelect\r\n      placeholder=\"Select\"\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={setValue}\r\n      className={styles.Wrapper}\r\n      options={[\r\n        {\r\n          label: '男',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '女',\r\n          value: '1',\r\n        },\r\n      ]}\r\n    >\r\n      {({ originNode, value, onChange, options }) => {\r\n        return <Checkbox.Group value={value} onChange={onChange} options={options} />;\r\n      }}\r\n    </Select.DropdownRenderSelect>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Zt,null)},{id:"AutoCompleteSelect",name:"AutoCompleteSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteSelect",info:"自动补全的Select"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Select } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  return (\r\n    <Select.AutoCompleteSelect\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"AutoCompleteSelect\"\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(zt,null)},{id:"AutoCompleteMultipleSelect",name:"AutoCompleteMultipleSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteMultipleSelect",info:"自动补全的多选Select"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { MultipleSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <MultipleSelect.AutoCompleteMultipleSelect\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"AutoCompleteMultipleSelect\"\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ut,null)},{id:"AutoCompleteCheckAllMultipleSelect",name:"AutoCompleteCheckAllMultipleSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteCheckAllMultipleSelect",info:"自动补全的多选且带全选的Select"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox, MultipleSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <MultipleSelect.AutoCompleteCheckAllMultipleSelect\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"AutoCompleteCheckAllMultipleSelect\"\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    >\r\n      {({ originNode, value, onChange, options }) => {\r\n        // return originNode;\r\n        return <Checkbox.Group value={value} onChange={onChange} options={options} />;\r\n      }}\r\n    </MultipleSelect.AutoCompleteCheckAllMultipleSelect>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Bt,null)}]}),m.createElement(d.Wc,{title:"RadioHOC",config:[{id:"Radio",name:"Radio",mode:"code",scope:{React:m},cardProps:{description:{title:"Radio",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\n// export default () => <Radio>男</Radio>;\r\n\r\nexport default () => (\r\n  <Radio.Group\r\n    options={[\r\n      {\r\n        label: '男',\r\n        value: 2,\r\n      },\r\n      {\r\n        label: '女',\r\n        value: 1,\r\n      },\r\n    ]}\r\n  />\r\n);\r\n",renderChildren:()=>m.createElement(It,null)},{id:"VerticalRadio",name:"VerticalRadio",mode:"code",scope:{React:m},cardProps:{description:{title:"VerticalRadio",info:"竖向的RadioGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Radio.VerticalRadio\r\n    options={[\r\n      {\r\n        label: '男',\r\n        value: 2,\r\n      },\r\n      {\r\n        label: '女',\r\n        value: 1,\r\n      },\r\n    ]}\r\n  />\r\n);\r\n",renderChildren:()=>m.createElement(Vt,null)},{id:"HorizontalRadio",name:"HorizontalRadio",mode:"code",scope:{React:m},cardProps:{description:{title:"HorizontalRadio",info:"横向的RadioGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Radio.HorizontalRadio\r\n    options={[\r\n      {\r\n        label: '男',\r\n        value: 2,\r\n      },\r\n      {\r\n        label: '女',\r\n        value: 1,\r\n      },\r\n    ]}\r\n  />\r\n);\r\n",renderChildren:()=>m.createElement(Tt,null)},{id:"CustomRadio",name:"CustomRadio",mode:"code",scope:{React:m},cardProps:{description:{title:"CustomRadio",info:"自定义的RadioGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Col, Radio, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Radio.CustomRadio\r\n    options={Array.from({ length: 26 }).map((t, _index) => {\r\n      const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n      return {\r\n        label: letter,\r\n        value: letter,\r\n      };\r\n    })}\r\n  >\r\n    {(options) => (\r\n      <Row gutter={[16, 24]}>\r\n        {options.map(({ data }) => (\r\n          <Col span={4}>\r\n            <Radio key={data?.value} {...(data ?? {})}>\r\n              {data?.label}\r\n            </Radio>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    )}\r\n  </Radio.CustomRadio>\r\n);\r\n",renderChildren:()=>m.createElement(Pt,null)},{id:"ButtonRadio",name:"ButtonRadio",mode:"code",scope:{React:m},cardProps:{description:{title:"ButtonRadio",info:"Button的RadioGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Radio.ButtonRadio\r\n    options={Array.from({ length: 26 }).map((t, _index) => {\r\n      const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n      return {\r\n        label: letter,\r\n        value: letter,\r\n      };\r\n    })}\r\n  />\r\n);\r\n",renderChildren:()=>m.createElement(xt,null)},{id:"RadioSelect",name:"RadioSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"RadioSelect",info:"Radio的Select"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Radio.RadioSelect\r\n      placeholder=\"A-Z\"\r\n      className={styles.Wrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\r\n      value={value}\r\n      onChange={setValue}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(wt,null)},{id:"CustomRadioSelect",name:"CustomRadioSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CustomRadioSelect",info:"自定义Radio的Select"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Col, Radio, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Radio.CustomRadioSelect\r\n      className={styles.Wrapper1}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\r\n      placeholder=\"A-Z\"\r\n      value={value}\r\n      onChange={setValue}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n    >\r\n      {(options) => (\r\n        <Row gutter={[16, 24]}>\r\n          {options.map(({ data }) => (\r\n            <Col span={4}>\r\n              <Radio key={data?.value} {...(data ?? {})}>\r\n                {data?.label}\r\n              </Radio>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Radio.CustomRadioSelect>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Et,null)},{id:"ButtonRadioSelect",name:"ButtonRadioSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"ButtonRadioSelect",info:"ButtonRadioSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  return (\r\n    <Radio.ButtonRadioSelect\r\n      className={styles.Wrapper1}\r\n      placeholder=\"A-Z\"\r\n      value={value}\r\n      onChange={setValue}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(St,null)},{id:"AutoCompleteRadioSelect",name:"AutoCompleteRadioSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteRadioSelect",info:"AutoCompleteRadioSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  return (\r\n    <Radio.AutoCompleteRadioSelect\r\n      placeholder=\"AutoCompleteRadioSelect\"\r\n      className={styles.FieldWrapper}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(kt,null)},{id:"AutoCompleteCustomRadioSelect",name:"AutoCompleteCustomRadioSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteCustomRadioSelect",info:"AutoCompleteCustomRadioSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Col, Radio, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Radio.AutoCompleteCustomRadioSelect\r\n      placeholder=\"AutoCompleteCustomRadioSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    >\r\n      {(options) => (\r\n        <Row gutter={[16, 24]}>\r\n          {options.map(({ data }) => (\r\n            <Col span={4}>\r\n              <Radio key={data?.value} {...(data ?? {})}>\r\n                {data?.label}\r\n              </Radio>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Radio.AutoCompleteCustomRadioSelect>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(At,null)},{id:"AutoCompleteButtonRadioSelect",name:"AutoCompleteButtonRadioSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteButtonRadioSelect",info:"AutoCompleteButtonRadioSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Radio } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Radio.AutoCompleteButtonRadioSelect\r\n      placeholder=\"AutoCompleteButtonRadioSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(bt,null)}]}),m.createElement(d.Wc,{title:"CheckboxHOC",config:[{id:"Checkbox",name:"Checkbox",mode:"code",scope:{React:m},cardProps:{description:{title:"Checkbox",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => <Checkbox>男</Checkbox>;\r\n",renderChildren:()=>m.createElement(Lr,null)},{id:"CheckboxSelect",name:"CheckboxSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckboxSelect",info:"CheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Checkbox.CheckboxSelect\r\n      placeholder=\"A-Z\"\r\n      className={styles.Wrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\r\n      value={value}\r\n      onChange={setValue}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Fr,null)},{id:"CustomCheckbox",name:"CustomCheckbox",mode:"code",scope:{React:m},cardProps:{description:{title:"CustomCheckbox",info:"自定义的Checkbox"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Checkbox.CustomCheckbox\r\n      value={value}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n      onChange={setValue}\r\n    >\r\n      {(options) => (\r\n        <Row gutter={[16, 24]}>\r\n          {options.map(({ data, onChange, checked, disabled }) => (\r\n            <Col span={4}>\r\n              <Checkbox\r\n                key={data?.value}\r\n                {...(data ?? {})}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={(e) => {\r\n                  onChange(e, data.value);\r\n                }}\r\n              >\r\n                {data?.label}\r\n              </Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Checkbox.CustomCheckbox>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Mr,null)},{id:"CustomCheckAllCheckbox",name:"CustomCheckAllCheckbox",mode:"code",scope:{React:m},cardProps:{description:{title:"CustomCheckAllCheckbox",info:"CustomCheckAllCheckbox"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Checkbox.CustomCheckAllCheckbox\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n    >\r\n      {(options) => (\r\n        <Row gutter={[16, 24]}>\r\n          {options.map(({ data, onChange, checked, disabled }) => (\r\n            <Col span={4} key={data?.value}>\r\n              <Checkbox\r\n                {...(data ?? {})}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={(v) => {\r\n                  onChange(v, data.value);\r\n                }}\r\n              >\r\n                {data?.label}\r\n              </Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Checkbox.CustomCheckAllCheckbox>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Dr,null)},{id:"CustomCheckboxSelect",name:"CustomCheckboxSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CustomCheckboxSelect",info:"CustomCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Checkbox.CustomCheckboxSelect\r\n      className={styles.Wrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\r\n      placeholder=\"A-Z\"\r\n      value={value}\r\n      onChange={setValue}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n    >\r\n      {(options) => (\r\n        <Row gutter={[16, 24]}>\r\n          {options.map(({ data, onChange, ...rest }) => (\r\n            <Col key={data?.value} span={4}>\r\n              <Checkbox\r\n                {...(data ?? {})}\r\n                {...rest}\r\n                onChange={(e) => {\r\n                  onChange(e, data.value);\r\n                }}\r\n              >\r\n                {data?.label}\r\n              </Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Checkbox.CustomCheckboxSelect>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Hr,null)},{id:"HorizontalCheckbox",name:"HorizontalCheckbox",mode:"code",scope:{React:m},cardProps:{description:{title:"HorizontalCheckbox",info:"横向的Checkbox"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Checkbox.HorizontalCheckbox\r\n    options={[\r\n      {\r\n        label: '男',\r\n        value: '2',\r\n      },\r\n      {\r\n        label: '女',\r\n        value: '1',\r\n      },\r\n    ]}\r\n  />\r\n);\r\n",renderChildren:()=>m.createElement(_r,null)},{id:"HorizontalCheckAllCheckbox",name:"HorizontalCheckAllCheckbox",mode:"code",scope:{React:m},cardProps:{description:{title:"HorizontalCheckAllCheckbox",info:"HorizontalCheckAllCheckbox"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Checkbox.HorizontalCheckAllCheckbox\r\n      value={value}\r\n      onChange={setValue}\r\n      options={[\r\n        {\r\n          label: '男',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '女',\r\n          value: '1',\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Wr,null)},{id:"VerticalCheckbox",name:"VerticalCheckbox",mode:"code",scope:{React:m},cardProps:{description:{title:"VerticalCheckbox",info:"竖向的Checkbox"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => (\r\n  <Checkbox.VerticalCheckbox\r\n    onChange={(v) => {\r\n      console.log('v', v);\r\n    }}\r\n    disabled\r\n    options={[\r\n      {\r\n        label: '男',\r\n        value: '2',\r\n        disabled: false,\r\n      },\r\n      {\r\n        label: '女',\r\n        value: '1',\r\n      },\r\n    ]}\r\n  />\r\n);\r\n",renderChildren:()=>m.createElement(jr,null)},{id:"VerticalCheckAllCheckbox",name:"VerticalCheckAllCheckbox",mode:"code",scope:{React:m},cardProps:{description:{title:"VerticalCheckAllCheckbox",info:"VerticalCheckAllCheckbox"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Checkbox.VerticalCheckAllCheckbox\r\n      value={value}\r\n      onChange={setValue}\r\n      options={[\r\n        {\r\n          label: '男',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '女',\r\n          value: '1',\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(qr,null)},{id:"AutoCompleteCheckAllCheckboxSelect",name:"AutoCompleteCheckAllCheckboxSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteCheckAllCheckboxSelect",info:"AutoCompleteCheckAllCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Checkbox.AutoCompleteCheckAllCheckboxSelect\r\n      placeholder=\"AutoCompleteCheckAllCheckboxSelect111\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Tr,null)},{id:"AutoCompleteCheckAllCustomCheckboxSelect",name:"AutoCompleteCheckAllCustomCheckboxSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteCheckAllCustomCheckboxSelect",info:"AutoCompleteCheckAllCustomCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Checkbox.AutoCompleteCheckAllCustomCheckboxSelect\r\n      placeholder=\"AutoCompleteCheckAllCustomCheckboxSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    >\r\n      {(options) => (\r\n        <Row gutter={[16, 24]}>\r\n          {options.map(({ data, onChange, checked, disabled }) => (\r\n            <Col span={4} key={data?.value}>\r\n              <Checkbox\r\n                {...(data ?? {})}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={(e) => {\r\n                  onChange(e, data.value);\r\n                }}\r\n              >\r\n                {data?.label}\r\n              </Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Checkbox.AutoCompleteCheckAllCustomCheckboxSelect>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ir,null)},{id:"AutoCompleteCheckboxSelect",name:"AutoCompleteCheckboxSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteCheckboxSelect",info:"AutoCompleteCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Checkbox.AutoCompleteCheckboxSelect\r\n      placeholder=\"AutoCompleteCheckboxSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          console.log('_kw', _kw);\r\n\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(wr,null)},{id:"AutoCompleteCustomCheckboxSelect",name:"AutoCompleteCustomCheckboxSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteCustomCheckboxSelect",info:"AutoCompleteCustomCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Checkbox.AutoCompleteCustomCheckboxSelect\r\n      placeholder=\"AutoCompleteCustomCheckboxSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    >\r\n      {(options) => (\r\n        <Row gutter={[16, 24]}>\r\n          {options.map(({ data, onChange, checked, disabled }) => (\r\n            <Col key={data?.value} span={4}>\r\n              <Checkbox\r\n                {...(data ?? {})}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={(e) => {\r\n                  onChange(e, data.value);\r\n                }}\r\n              >\r\n                {data?.label}\r\n              </Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Checkbox.AutoCompleteCustomCheckboxSelect>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Vr,null)},{id:"CheckAllCheckboxSelect",name:"CheckAllCheckboxSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckAllCheckboxSelect",info:"CheckAllCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Checkbox.CheckAllCheckboxSelect\r\n      placeholder=\"A-Z\"\r\n      className={styles.Wrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\r\n      value={value}\r\n      onChange={setValue}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Rr,null)},{id:"CheckAllCustomCheckboxSelect",name:"CheckAllCustomCheckboxSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckAllCustomCheckboxSelect",info:"CheckAllCustomCheckboxSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Checkbox, Col, Row } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Checkbox.CheckAllCustomCheckboxSelect\r\n      className={styles.Wrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\r\n      placeholder=\"A-Z\"\r\n      value={value}\r\n      onChange={setValue}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n    >\r\n      {(options) => (\r\n        <Row gutter={[16, 24]}>\r\n          {options.map(({ data, onChange, checked, disabled }) => (\r\n            <Col key={data?.value} span={4}>\r\n              <Checkbox\r\n                {...(data ?? {})}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={(v) => {\r\n                  onChange(v, data.value);\r\n                }}\r\n              >\r\n                {data?.label}\r\n              </Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Checkbox.CheckAllCustomCheckboxSelect>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Or,null)},{id:"CustomRenderCheckboxCheckAllPosition",name:"CustomRenderCheckboxCheckAllPosition",mode:"code",scope:{React:m},cardProps:{description:{title:"CustomRenderCheckboxCheckAllPosition",info:"自定义全选的位置，所有CheckAll都有render属性"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Checkbox } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Checkbox.CheckAllCheckboxSelect\r\n      placeholder=\"A-Z\"\r\n      className={styles.Wrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflowY: 'auto' }}\r\n      value={value}\r\n      onChange={setValue}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: letter,\r\n        };\r\n      })}\r\n      render={(checkAllOrigin, children) => (\r\n        <div>\r\n          <div>{children}</div>\r\n          <div>{checkAllOrigin}</div>\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Nr,null)}]}),m.createElement(d.Wc,{title:"TagHOC",config:[{id:"Tag",name:"Tag",mode:"code",scope:{React:m},cardProps:{description:{title:"Tag",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => <Tag>Tag 1</Tag>;\r\n",renderChildren:()=>m.createElement(xa,null)},{id:"VerticalTagGroup",name:"VerticalTagGroup",mode:"code",scope:{React:m},cardProps:{description:{title:"VerticalTagGroup",info:"VerticalTagGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  return (\r\n    <Tag.VerticalTagGroup\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ta,null)},{id:"VerticalCheckableTagGroup",name:"VerticalCheckableTagGroup",mode:"code",scope:{React:m},cardProps:{description:{title:"VerticalCheckableTagGroup",info:"VerticalCheckableTagGroup"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.VerticalCheckableTagGroup\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ea,null)},{id:"VerticalCheckAllCheckableTagGroup",name:"VerticalCheckAllCheckableTagGroup",mode:"code",scope:{React:m},cardProps:{description:{title:"VerticalCheckAllCheckableTagGroup",info:"VerticalCheckAllCheckableTagGroup"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  return (\r\n    <Tag.VerticalCheckAllCheckableTagGroup\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Pa,null)},{id:"HorizontalTagGroup",name:"HorizontalTagGroup",mode:"code",scope:{React:m},cardProps:{description:{title:"HorizontalTagGroup",info:"HorizontalTagGroup"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  return (\r\n    <Tag.HorizontalTagGroup\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ka,null)},{id:"HorizontalCheckableTagGroup",name:"HorizontalCheckableTagGroup",mode:"code",scope:{React:m},cardProps:{description:{title:"HorizontalCheckableTagGroup",info:"HorizontalCheckableTagGroup"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.HorizontalCheckableTagGroup\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Aa,null)},{id:"HorizontalCheckAllCheckableTagGroup",name:"HorizontalCheckAllCheckableTagGroup",mode:"code",scope:{React:m},cardProps:{description:{title:"HorizontalCheckAllCheckableTagGroup",info:"HorizontalCheckAllCheckableTagGroup"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.HorizontalCheckAllCheckableTagGroup\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ba,null)},{id:"TagSelect",name:"TagSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"TagSelect",info:"TagSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.TagSelect\r\n      mode=\"multiple\"\r\n      className={styles.Wrapper}\r\n      placeholder=\"A-Z\"\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          label: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Sa,null)},{id:"CheckAllTagSelect",name:"CheckAllTagSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckAllTagSelect",info:"CheckAllTagSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.CheckAllTagSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"A-Z\"\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          label: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ya,null)},{id:"AutoCompleteTagSelect",name:"AutoCompleteTagSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteTagSelect",info:"AutoCompleteTagSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.AutoCompleteTagSelect\r\n      placeholder=\"AutoCompleteTagSelect\"\r\n      mode=\"multiple\"\r\n      className={styles.FieldWrapper}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n                children: t.t,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n      // tagProps={{\r\n      //   mode: 'multiple',\r\n      // }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ca,null)},{id:"AutoCompleteCheckAllTagSelect",name:"AutoCompleteCheckAllTagSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteCheckAllTagSelect",info:"AutoCompleteCheckAllTagSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.AutoCompleteCheckAllTagSelect\r\n      placeholder=\"AutoCompleteCheckAllTagSelect\"\r\n      className={styles.FieldWrapper}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n                children: t.t,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ga,null)},{id:"CustomRenderTagCheckAllPosition",name:"CustomRenderTagCheckAllPosition",mode:"code",scope:{React:m},cardProps:{description:{title:"CustomRenderTagCheckAllPosition",info:"自定义全选的位置，所有CheckAll都有render属性"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Tag } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <Tag.CheckAllTagSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"A-Z\"\r\n      value={value}\r\n      onChange={(v) => {\r\n        setValue(v);\r\n      }}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          value: letter,\r\n          label: letter,\r\n          children: letter,\r\n        };\r\n      })}\r\n      render={(checkAllOrigin, children) => (\r\n        <div>\r\n          <div>{children}</div>\r\n          <div>{checkAllOrigin}</div>\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(va,null)}]}),m.createElement(d.Wc,{title:"ListHOC",config:[{id:"List",name:"List",mode:"code",scope:{React:m},cardProps:{description:{title:"List",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst data = [\r\n  {\r\n    title: 'Ant Design Title 1',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 2',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 3',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 4',\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  return (\r\n    <List\r\n      itemLayout=\"horizontal\"\r\n      dataSource={data}\r\n      renderItem={(item, index) => (\r\n        <List.Item>\r\n          <List.Item.Meta\r\n            avatar={\r\n              <Avatar src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`} />\r\n            }\r\n            title={<a href=\"https://ant.design\">{item.title}</a>}\r\n            description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n          />\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(et,null)},{id:"RadioListSelect",name:"RadioListSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"RadioListSelect",info:"RadioListSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst data = [\r\n  {\r\n    title: 'Ant Design Title 1',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 2',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 3',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 4',\r\n  },\r\n].map(({ title }) => ({\r\n  title,\r\n  label: title,\r\n  value: title,\r\n}));\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  return (\r\n    <List.ListSelect\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"List\"\r\n      value={value}\r\n      onChange={setValue}\r\n      options={data}\r\n      listProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={\r\n                <Avatar src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`} />\r\n              }\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ot,null)},{id:"RadioListPaging",name:"RadioListPaging",mode:"code",scope:{React:m},cardProps:{description:{title:"RadioListPaging",info:"RadioListPaging"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst data = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@cname');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n    title: label,\r\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: data.length,\r\n        data: data.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <List.ListPaging\r\n      value={value}\r\n      onChange={(_value) => {\r\n        console.log(_value);\r\n        setValue(_value);\r\n      }}\r\n      isSuspenseAsync={false}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      listPagingProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={<Avatar src={item.avatar} />}\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(nt,null)},{id:"RadioListPagingSelect",name:"RadioListPagingSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"RadioListPagingSelect",info:"RadioListPagingSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst data = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@cname');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n    title: label,\r\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: data.length,\r\n        data: data.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <List.ListPagingSelect\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"RadioListPagingSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      listPagingProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={<Avatar src={item.avatar} />}\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(at,null)},{id:"SuspenseListPaging",name:"SuspenseListPaging",mode:"code",scope:{React:m},cardProps:{description:{title:"SuspenseListPaging",info:"SuspenseListPaging"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst data = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@cname');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n    title: label,\r\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  function loadData(page, limit) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          totalCount: data.length,\r\n          data: data.slice((page - 1) * limit, page * limit),\r\n        });\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <List.ListPaging\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={setValue}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      listPagingProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={<Avatar src={item.avatar} />}\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(st,null)},{id:"CheckboxListSelect",name:"CheckboxListSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckboxListSelect",info:"CheckboxListSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst data = [\r\n  {\r\n    title: 'Ant Design Title 1',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 2',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 3',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 4',\r\n  },\r\n].map(({ title }) => ({\r\n  title,\r\n  label: title,\r\n  value: title,\r\n}));\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <List.ListSelect\r\n      mode=\"multiple\"\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"List\"\r\n      value={value}\r\n      onChange={setValue}\r\n      options={data}\r\n      listProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={\r\n                <Avatar src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`} />\r\n              }\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Qn,null)},{id:"CheckAllListSelect",name:"CheckAllListSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckAllListSelect",info:"CheckAllListSelect"}},type:"PlayGround",codeText:"import { Avatar } from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\nimport { List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst data = [\r\n  {\r\n    title: 'Ant Design Title 1',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 2',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 3',\r\n  },\r\n  {\r\n    title: 'Ant Design Title 4',\r\n  },\r\n].map(({ title }) => ({\r\n  title,\r\n  label: title,\r\n  value: title,\r\n}));\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <List.CheckAllListSelect\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"List\"\r\n      value={value}\r\n      onChange={setValue}\r\n      options={data}\r\n      listProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={\r\n                <Avatar src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`} />\r\n              }\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(zn,null)},{id:"CheckboxListPaging",name:"CheckboxListPaging",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckboxListPaging",info:"CheckboxListPaging"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst data = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@cname');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n    title: label,\r\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  function loadData(page, limit) {\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: data.length,\r\n        data: data.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <List.ListPaging\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={setValue}\r\n      isSuspenseAsync={false}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      listPagingProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={<Avatar src={item.avatar} />}\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Zn,null)},{id:"CheckboxListPagingSelect",name:"CheckboxListPagingSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckboxListPagingSelect",info:"CheckboxListPagingSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Avatar, List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst data = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@cname');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n    title: label,\r\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  function loadData(page, limit) {\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: data.length,\r\n        data: data.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <List.ListPagingSelect\r\n      mode=\"multiple\"\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"CheckboxListPagingSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      listPagingProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              avatar={<Avatar src={item.avatar} />}\r\n              title={<a href=\"https://ant.design\">{item.title}</a>}\r\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n            />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement($n,null)},{id:"AutoCompleteCheckAllListSelect",name:"AutoCompleteCheckAllListSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteCheckAllListSelect",info:"AutoCompleteCheckAllListSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <List.AutoCompleteCheckAllListSelect\r\n      placeholder=\"AutoCompleteCheckAllListSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n      listProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item) => (\r\n          <List.Item>\r\n            <List.Item.Meta title={item.title} description={item.label} />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(qn,null)},{id:"AutoCompleteListPagingSelect",name:"AutoCompleteListPagingSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteListPagingSelect",info:"AutoCompleteListPagingSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst data = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@cname');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n    title: label,\r\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  function loadData(page, limit, _kw) {\r\n    return new Promise((resolve) => {\r\n      const result = !_kw ? [] : data.filter(({ label }) => label.indexOf(_kw) !== -1);\r\n\r\n      resolve({\r\n        totalCount: result.length,\r\n        data: result.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <List.AutoCompleteListPagingSelect\r\n      mode=\"multiple\"\r\n      placeholder=\"AutoCompleteListPagingSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      onChange={setValue}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      listPagingProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item) => (\r\n          <List.Item>\r\n            <List.Item.Meta title={item.title} description={item.label} />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Gn,null)},{id:"AutoCompleteListSelect",name:"AutoCompleteListSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteListSelect",info:"AutoCompleteListSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { List } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nimport styles from '../examples.less';\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <List.AutoCompleteListSelect\r\n      placeholder=\"AutoCompleteListSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          console.log('_kw', _kw);\r\n\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...Book]\r\n              .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n              .map((t) => ({\r\n                label: t.t,\r\n                value: t.id,\r\n              }));\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n      listProps={{\r\n        itemLayout: 'horizontal',\r\n        renderItem: (item) => (\r\n          <List.Item>\r\n            <List.Item.Meta title={item.title} description={item.label} />\r\n          </List.Item>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Bn,null)}]}),m.createElement(d.Wc,{title:"TableHOC",config:[{id:"Table",name:"Table",mode:"code",scope:{React:m},cardProps:{description:{title:"Table",info:"使用了默认配置"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => ({\r\n  id: Mock.mock('@guid'),\r\n  name: Mock.mock('@name'),\r\n  address: Mock.mock('@region'),\r\n  height: Mock.mock('@integer(60, 100)'),\r\n  width: Mock.mock('@integer(60, 100)'),\r\n  nativePlace: Mock.mock('@city'),\r\n}));\r\n\r\nexport default () => {\r\n  return (\r\n    <Table\r\n      columns={[\r\n        {\r\n          title: '名称',\r\n          key: 'name',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: '地址',\r\n          key: 'address',\r\n          dataIndex: 'address',\r\n        },\r\n        {\r\n          title: '籍贯',\r\n          key: 'nativePlace',\r\n          dataIndex: 'nativePlace',\r\n        },\r\n        {\r\n          title: '身高',\r\n          key: 'height',\r\n          dataIndex: 'height',\r\n        },\r\n        {\r\n          title: '体重',\r\n          key: 'width',\r\n          dataIndex: 'width',\r\n        },\r\n      ]}\r\n      dataSource={dataSource}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(fa,null)},{id:"SuspenseTablePaging",name:"SuspenseTablePaging",mode:"code",scope:{React:m},cardProps:{description:{title:"SuspenseTablePaging",info:"SuspenseTablePaging"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          totalCount: dataSource.length,\r\n          data: dataSource.slice((page - 1) * limit, page * limit),\r\n        });\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table.TablePaging\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={setValue}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      tablePagingProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(pa,null)},{id:"RadioTableSelect",name:"RadioTableSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"RadioTableSelect",info:"RadioTableSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  return (\r\n    <Table.TableSelect\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"TableSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      options={dataSource}\r\n      tableProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(da,null)},{id:"RadioTablePagingSelect",name:"RadioTablePagingSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"RadioTablePagingSelect",info:"RadioTablePagingSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: dataSource.length,\r\n        data: dataSource.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table.TablePagingSelect\r\n      className={styles.FieldWrapper}\r\n      placeholder=\"RadioPagingList\"\r\n      value={value}\r\n      onChange={setValue}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      tablePagingProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ca,null)},{id:"RadioTablePaging",name:"RadioTablePaging",mode:"code",scope:{React:m},cardProps:{description:{title:"RadioTablePaging",info:"RadioTablePaging"}},type:"PlayGround",codeText:c,renderChildren:()=>m.createElement(ia,null)},{id:"RadioTablePaging",name:"RadioTablePaging",mode:"code",scope:{React:m},cardProps:{description:{title:"RadioTablePaging",info:"RadioTablePaging"}},type:"PlayGround",codeText:c,renderChildren:()=>m.createElement(ia,null)},{id:"CheckboxTableSelect",name:"CheckboxTableSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckboxTableSelect",info:"CheckboxTableSelect"}},type:"PlayGround",codeText:s,renderChildren:()=>m.createElement(la,null)},{id:"CheckboxTablePagingSelect",name:"CheckboxTablePagingSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckboxTablePagingSelect",info:"CheckboxTablePagingSelect"}},type:"PlayGround",codeText:s,renderChildren:()=>m.createElement(la,null)},{id:"CheckboxTablePaging",name:"CheckboxTablePaging",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckboxTablePaging",info:"CheckboxTablePaging"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: dataSource.length,\r\n        data: dataSource.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table.TablePaging\r\n      mode=\"multiple\"\r\n      value={value}\r\n      onChange={setValue}\r\n      isSuspenseAsync={false}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      tablePagingProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ta,null)},{id:"AutoCompleteTableSelect",name:"AutoCompleteTableSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteTableSelect",info:"AutoCompleteTableSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  return (\r\n    <Table.AutoCompleteTableSelect\r\n      // mode=\"multiple\"\r\n      placeholder=\"AutoCompleteTableSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      options={options}\r\n      onChange={setValue}\r\n      loadData={(_kw) =>\r\n        new Promise((resolve) => {\r\n          if (!_kw) {\r\n            setOptions([]);\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          setTimeout(() => {\r\n            const result = [...dataSource].filter((_record) => _record.label.indexOf(_kw) !== -1);\r\n\r\n            setOptions(result);\r\n\r\n            resolve();\r\n          }, 500);\r\n        })\r\n      }\r\n      tableProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n        pagination: false,\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ra,null)},{id:"AutoCompleteTablePagingSelect",name:"AutoCompleteTablePagingSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteTablePagingSelect",info:"AutoCompleteTablePagingSelect"}},type:"PlayGround",codeText:"import Mock from 'mockjs';\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../examples.less';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  function loadData(page, limit, _kw) {\r\n    console.log(page, limit, _kw);\r\n    return new Promise((resolve) => {\r\n      const result = !_kw ? [] : dataSource.filter(({ label }) => label.indexOf(_kw) !== -1);\r\n\r\n      resolve({\r\n        totalCount: result.length,\r\n        data: result.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table.AutoCompleteTablePagingSelect\r\n      mode=\"multiple\"\r\n      placeholder=\"AutoCompleteTablePagingSelect\"\r\n      className={styles.FieldWrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(300, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      onChange={setValue}\r\n      pagingProps={{\r\n        loadData,\r\n        defaultLimit: 5,\r\n      }}\r\n      tablePagingProps={{\r\n        rowKey: 'id',\r\n        columns: [\r\n          {\r\n            title: '名称',\r\n            key: 'name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: '地址',\r\n            key: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: '籍贯',\r\n            key: 'nativePlace',\r\n            dataIndex: 'nativePlace',\r\n          },\r\n          {\r\n            title: '身高',\r\n            key: 'height',\r\n            dataIndex: 'height',\r\n          },\r\n          {\r\n            title: '体重',\r\n            key: 'width',\r\n            dataIndex: 'width',\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Xt,null)}]}),m.createElement(d.Wc,{title:"TreeSelectHOC",config:[{id:"TreeSelect",name:"TreeSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"TreeSelect",info:"使用了默认配置"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nconst treeData = [\r\n  {\r\n    value: 'parent 1',\r\n    title: 'parent 1',\r\n    children: [\r\n      {\r\n        value: 'parent 1-0',\r\n        title: 'parent 1-0',\r\n        children: [\r\n          {\r\n            value: 'leaf1',\r\n            title: 'leaf1',\r\n          },\r\n          {\r\n            value: 'leaf2',\r\n            title: 'leaf2',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'parent 1-1',\r\n        title: 'parent 1-1',\r\n        children: [\r\n          {\r\n            value: 'leaf3',\r\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState();\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  const onChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <TreeSelect\r\n      value={value}\r\n      className={styles.Wrapper1}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\r\n      placeholder=\"Please select\"\r\n      treeDefaultExpandAll\r\n      onChange={onChange}\r\n      treeData={treeData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Pl,null)},{id:"TreeMultiSelect",name:"TreeMultiSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"TreeMultiSelect",info:"TreeMultiSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nconst treeData = [\r\n  {\r\n    value: 'parent 1',\r\n    title: 'parent 1',\r\n    children: [\r\n      {\r\n        value: 'parent 1-0',\r\n        title: 'parent 1-0',\r\n        children: [\r\n          {\r\n            value: 'leaf1',\r\n            title: 'leaf1',\r\n          },\r\n          {\r\n            value: 'leaf2',\r\n            title: 'leaf2',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'parent 1-1',\r\n        title: 'parent 1-1',\r\n        children: [\r\n          {\r\n            value: 'leaf3',\r\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState();\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  const onChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <TreeSelect.TreeMultiSelect\r\n      value={value}\r\n      className={styles.Wrapper1}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\r\n      placeholder=\"Please select\"\r\n      treeDefaultExpandAll\r\n      onChange={onChange}\r\n      treeData={treeData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(xl,null)},{id:"TreeMultiLeafSelect",name:"TreeMultiLeafSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"TreeMultiLeafSelect",info:"TreeMultiLeafSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nconst treeData = [\r\n  {\r\n    value: 'parent 1',\r\n    title: 'parent 1',\r\n    children: [\r\n      {\r\n        value: 'parent 1-0',\r\n        title: 'parent 1-0',\r\n        children: [\r\n          {\r\n            value: 'leaf1',\r\n            title: 'leaf1',\r\n          },\r\n          {\r\n            value: 'leaf2',\r\n            title: 'leaf2',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'parent 1-1',\r\n        title: 'parent 1-1',\r\n        children: [\r\n          {\r\n            value: 'leaf3',\r\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState();\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  const onChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <TreeSelect.TreeMultiLeafSelect\r\n      value={value}\r\n      className={styles.Wrapper1}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\r\n      placeholder=\"Please select\"\r\n      treeDefaultExpandAll\r\n      onChange={onChange}\r\n      treeData={treeData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Al,null)},{id:"TreeLeafSelect",name:"TreeLeafSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"TreeLeafSelect",info:"TreeLeafSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nconst treeData = [\r\n  {\r\n    value: 'parent 1',\r\n    title: 'parent 1',\r\n    children: [\r\n      {\r\n        value: 'parent 1-0',\r\n        title: 'parent 1-0',\r\n        children: [\r\n          {\r\n            value: 'leaf1',\r\n            title: 'leaf1',\r\n          },\r\n          {\r\n            value: 'leaf2',\r\n            title: 'leaf2',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'parent 1-1',\r\n        title: 'parent 1-1',\r\n        children: [\r\n          {\r\n            value: 'leaf3',\r\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState();\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  const onChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <TreeSelect.TreeLeafSelect\r\n      value={value}\r\n      className={styles.Wrapper1}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\r\n      placeholder=\"Please select\"\r\n      treeDefaultExpandAll\r\n      onChange={onChange}\r\n      treeData={treeData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(vl,null)},{id:"TreeCheckedShowParentSelect",name:"TreeCheckedShowParentSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"TreeCheckedShowParentSelect",info:"TreeCheckedShowParentSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nconst treeData = [\r\n  {\r\n    value: 'parent 1',\r\n    title: 'parent 1',\r\n    children: [\r\n      {\r\n        value: 'parent 1-0',\r\n        title: 'parent 1-0',\r\n        children: [\r\n          {\r\n            value: 'leaf1',\r\n            title: 'leaf1',\r\n          },\r\n          {\r\n            value: 'leaf2',\r\n            title: 'leaf2',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'parent 1-1',\r\n        title: 'parent 1-1',\r\n        children: [\r\n          {\r\n            value: 'leaf3',\r\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState();\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  const onChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <TreeSelect.TreeCheckedShowParentSelect\r\n      value={value}\r\n      className={styles.Wrapper1}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\r\n      placeholder=\"Please select\"\r\n      treeDefaultExpandAll\r\n      onChange={onChange}\r\n      treeData={treeData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Cl,null)},{id:"TreeCheckedShowChildSelect",name:"TreeCheckedShowChildSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"TreeCheckedShowChildSelect",info:"TreeCheckedShowChildSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nconst treeData = [\r\n  {\r\n    value: 'parent 1',\r\n    title: 'parent 1',\r\n    children: [\r\n      {\r\n        value: 'parent 1-0',\r\n        title: 'parent 1-0',\r\n        children: [\r\n          {\r\n            value: 'leaf1',\r\n            title: 'leaf1',\r\n          },\r\n          {\r\n            value: 'leaf2',\r\n            title: 'leaf2',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'parent 1-1',\r\n        title: 'parent 1-1',\r\n        children: [\r\n          {\r\n            value: 'leaf3',\r\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState();\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  const onChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <TreeSelect.TreeCheckedShowChildSelect\r\n      value={value}\r\n      className={styles.Wrapper1}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\r\n      placeholder=\"Please select\"\r\n      treeDefaultExpandAll\r\n      onChange={onChange}\r\n      treeData={treeData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(fl,null)},{id:"TreeCheckedShowAllSelect",name:"TreeCheckedShowAllSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"TreeCheckedShowAllSelect",info:"TreeCheckedShowAllSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nconst treeData = [\r\n  {\r\n    value: 'parent 1',\r\n    title: 'parent 1',\r\n    children: [\r\n      {\r\n        value: 'parent 1-0',\r\n        title: 'parent 1-0',\r\n        children: [\r\n          {\r\n            value: 'leaf1',\r\n            title: 'leaf1',\r\n          },\r\n          {\r\n            value: 'leaf2',\r\n            title: 'leaf2',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'parent 1-1',\r\n        title: 'parent 1-1',\r\n        children: [\r\n          {\r\n            value: 'leaf3',\r\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState();\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  const onChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <TreeSelect.TreeCheckedShowAllSelect\r\n      value={value}\r\n      className={styles.Wrapper1}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\r\n      placeholder=\"Please select\"\r\n      treeDefaultExpandAll\r\n      onChange={onChange}\r\n      treeData={treeData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(pl,null)},{id:"FlatTreeSelect",name:"FlatTreeSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"FlatTreeSelect",info:"FlatTreeSelect"}},type:"PlayGround",codeText:"import React, { useContext, useState } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nconst treeData = [\r\n  ...Province.map((t) => ({\r\n    title: t.name,\r\n    label: t.name,\r\n    value: t.id,\r\n    id: t.id,\r\n    isLeaf: false,\r\n    pId: 0,\r\n  })),\r\n  ...Object.keys(City)\r\n    .map((key) =>\r\n      City[key].map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        isLeaf: false,\r\n        pId: `${key}`,\r\n      })),\r\n    )\r\n    .flat(),\r\n  ...Object.keys(County)\r\n    .map((key) =>\r\n      County[key].map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        isLeaf: true,\r\n        pId: key,\r\n      })),\r\n    )\r\n    .flat(),\r\n];\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState();\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  const onChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <TreeSelect\r\n      className={styles.Wrapper}\r\n      dropdownStyle={{ maxHeight: Util.pxToRem(400, media.designWidth, media), overflow: 'auto' }}\r\n      value={value}\r\n      placeholder=\"Please select\"\r\n      treeDefaultExpandAll\r\n      onChange={onChange}\r\n      treeData={treeData}\r\n      treeDataSimpleMode\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(dl,null)},{id:"FlatAsyncTreeSelect",name:"FlatAsyncTreeSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"FlatAsyncTreeSelect",info:"FlatAsyncTreeSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n      treeDataSimpleMode\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(cl,null)},{id:"FlatAsyncTreeMultiSelectEcho",name:"FlatAsyncTreeMultiSelectEcho",mode:"code",scope:{React:m},cardProps:{description:{title:"FlatAsyncTreeMultiSelectEcho",info:"FlatAsyncTreeMultiSelectEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(['210102000000']);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  function fetchBranch(value, cascadeParams) {\r\n    return Promise.resolve([\r\n      {\r\n        title: '辽宁省',\r\n        value: '210000000000',\r\n        id: '210000000000',\r\n        pId: 0,\r\n        isLeaf: false,\r\n      },\r\n      {\r\n        title: '沈阳市',\r\n        value: '210100000000',\r\n        id: '210100000000',\r\n        pId: '210000000000',\r\n        isLeaf: false,\r\n      },\r\n      {\r\n        title: '和平区',\r\n        value: '210102000000',\r\n        id: '210102000000',\r\n        pId: '210100000000',\r\n        isLeaf: true,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeMultiSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeMultiSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n      fetchBranch={fetchBranch}\r\n      treeDataSimpleMode\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(sl,null)},{id:"AsyncTreeSelectEcho",name:"AsyncTreeSelectEcho",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeSelectEcho",info:"AsyncTreeSelectEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState('210102000000');\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  /**\r\n   * fetchBranch\r\n   * @description 初始化回显\r\n   * @param value\r\n   * @param cascadeParams\r\n   */\r\n  function fetchBranch(value, cascadeParams) {\r\n    return Promise.resolve([\r\n      {\r\n        title: '辽宁省',\r\n        value: '210000000000',\r\n        isLeaf: false,\r\n        children: [\r\n          {\r\n            title: '沈阳市',\r\n            value: '210100000000',\r\n            isLeaf: false,\r\n            children: [\r\n              {\r\n                title: '和平区',\r\n                value: '210102000000',\r\n                isLeaf: true,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeSelectEcho\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n      fetchBranch={fetchBranch}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(il,null)},{id:"AsyncTreeSelect",name:"AsyncTreeSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeSelect",info:"AsyncTreeSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ol,null)},{id:"AsyncTreeMultiSelectEcho",name:"AsyncTreeMultiSelectEcho",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeMultiSelectEcho",info:"AsyncTreeMultiSelectEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(['230102000000', '210102000000']);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  /**\r\n   * fetchBranch\r\n   * @description 初始化回显\r\n   * @param value\r\n   * @param cascadeParams\r\n   */\r\n  function fetchBranch(value, cascadeParams) {\r\n    return Promise.resolve([\r\n      {\r\n        title: '辽宁省',\r\n        value: '210000000000',\r\n        isLeaf: false,\r\n        children: [\r\n          {\r\n            title: '沈阳市',\r\n            value: '210100000000',\r\n            isLeaf: false,\r\n            children: [\r\n              {\r\n                title: '和平区',\r\n                value: '210102000000',\r\n                isLeaf: true,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: '黑龙江省',\r\n        value: '230000000000',\r\n        isLeaf: false,\r\n        children: [\r\n          {\r\n            title: '哈尔滨市',\r\n            value: '230100000000',\r\n            isLeaf: false,\r\n            children: [\r\n              {\r\n                title: '道里区',\r\n                value: '230102000000',\r\n                isLeaf: true,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeMultiSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeMultiSelectEcho\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n      fetchBranch={fetchBranch}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ll,null)},{id:"AsyncTreeMultiSelect",name:"AsyncTreeMultiSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeMultiSelect",info:"AsyncTreeMultiSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeMultiSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeMultiSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(al,null)},{id:"AsyncTreeMultiLeafSelectEcho",name:"AsyncTreeMultiLeafSelectEcho",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeMultiLeafSelectEcho",info:"AsyncTreeMultiLeafSelectEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(['230102000000', '210102000000']);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  /**\r\n   * fetchBranch\r\n   * @description 初始化回显\r\n   * @param value\r\n   * @param cascadeParams\r\n   */\r\n  function fetchBranch(value, cascadeParams) {\r\n    return Promise.resolve([\r\n      {\r\n        title: '辽宁省',\r\n        value: '210000000000',\r\n        isLeaf: false,\r\n        children: [\r\n          {\r\n            title: '沈阳市',\r\n            value: '210100000000',\r\n            isLeaf: false,\r\n            children: [\r\n              {\r\n                title: '和平区',\r\n                value: '210102000000',\r\n                isLeaf: true,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: '黑龙江省',\r\n        value: '230000000000',\r\n        isLeaf: false,\r\n        children: [\r\n          {\r\n            title: '哈尔滨市',\r\n            value: '230100000000',\r\n            isLeaf: false,\r\n            children: [\r\n              {\r\n                title: '道里区',\r\n                value: '230102000000',\r\n                isLeaf: true,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeMultiLeafSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeMultiLeafSelectEcho\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n      fetchBranch={fetchBranch}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(tl,null)},{id:"AsyncTreeMultiLeafSelect",name:"AsyncTreeMultiLeafSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeMultiLeafSelect",info:"AsyncTreeMultiLeafSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeMultiLeafSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeMultiLeafSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(nl,null)},{id:"AsyncTreeLeafSelect",name:"AsyncTreeLeafSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeLeafSelect",info:"AsyncTreeLeafSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeLeafSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeLeafSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(rl,null)},{id:"AsyncTreeCheckedShowParentSelect",name:"AsyncTreeCheckedShowParentSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeCheckedShowParentSelect",info:"AsyncTreeCheckedShowParentSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeCheckedShowParentSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeCheckedShowParentSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(el,null)},{id:"AsyncTreeCheckedShowChildSelect",name:"AsyncTreeCheckedShowChildSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeCheckedShowChildSelect",info:"AsyncTreeCheckedShowChildSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeCheckedShowChildSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeCheckedShowChildSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Xa,null)},{id:"AsyncTreeCheckedShowAllSelect",name:"AsyncTreeCheckedShowAllSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeCheckedShowAllSelect",info:"AsyncTreeCheckedShowAllSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from '../Cascader/index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          title: t.name,\r\n          label: t.name,\r\n          value: t.id,\r\n          id: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      title: t.name,\r\n      label: t.name,\r\n      value: t.id,\r\n      id: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  return (\r\n    <TreeSelect.AsyncTreeCheckedShowAllSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncTreeCheckedShowAllSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Qa,null)}]}),m.createElement(d.Wc,{title:"CascaderHOC",config:[{id:"Cascader",name:"Cascader",mode:"code",scope:{React:m},cardProps:{description:{title:"Cascader",info:"Cascader"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const options = [\r\n    {\r\n      value: 'zhejiang',\r\n      label: 'Zhejiang',\r\n      children: [\r\n        {\r\n          value: 'hangzhou',\r\n          label: 'Hangzhou',\r\n          children: [\r\n            {\r\n              value: 'xihu',\r\n              label: 'West Lake',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      value: 'jiangsu',\r\n      label: 'Jiangsu',\r\n      children: [\r\n        {\r\n          value: 'nanjing',\r\n          label: 'Nanjing',\r\n          children: [\r\n            {\r\n              value: 'zhonghuamen',\r\n              label: 'Zhong Hua Men',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const onChange = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return <Cascader placeholder=\"Please select\" options={options} onChange={onChange} />;\r\n};\r\n",renderChildren:()=>m.createElement(vr,null)},{id:"AsyncCascader",name:"AsyncCascader",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncCascader",info:"AsyncCascader"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    console.log('pid', pid);\r\n\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          label: t.name,\r\n          value: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      label: t.name,\r\n      value: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  console.log('value', value);\r\n\r\n  return (\r\n    <Cascader.AsyncCascader\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncCascader\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(pr,null)},{id:"AsyncCascaderChangeOnSelect",name:"AsyncCascaderChangeOnSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncCascaderChangeOnSelect",info:"AsyncCascaderChangeOnSelect"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          label: t.name,\r\n          value: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      label: t.name,\r\n      value: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  console.log('value', value);\r\n\r\n  return (\r\n    <Cascader.AsyncCascaderChangeOnSelect\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncCascaderChangeOnSelect\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(hr,null)},{id:"AsyncCascaderEcho",name:"AsyncCascaderEcho",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncCascaderEcho",info:"AsyncCascaderEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(['210000000000', '210100000000', '210102000000']);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          label: t.name,\r\n          value: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      label: t.name,\r\n      value: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  console.log('value', value);\r\n\r\n  return (\r\n    <Cascader.AsyncCascader\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncCascader\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n      fetchBranch={(value, cascadeParams) => {\r\n        return Promise.resolve([\r\n          {\r\n            label: '辽宁省',\r\n            value: '210000000000',\r\n            isLeaf: false,\r\n            children: [\r\n              {\r\n                label: '沈阳市',\r\n                value: '210100000000',\r\n                isLeaf: false,\r\n                children: [\r\n                  {\r\n                    label: '和平区',\r\n                    value: '210102000000',\r\n                    isLeaf: true,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ]);\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(fr,null)},{id:"AsyncCascaderMulti",name:"AsyncCascaderMulti",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncCascaderMulti",info:"AsyncCascaderMulti"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          label: t.name,\r\n          value: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      label: t.name,\r\n      value: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  console.log('value', value);\r\n\r\n  return (\r\n    <Cascader.AsyncCascaderMulti\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncCascaderMulti\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(gr,null)},{id:"AsyncCascaderMultiEcho",name:"AsyncCascaderMultiEcho",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncCascaderMultiEcho",info:"AsyncCascaderMultiEcho"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([\r\n    ['210000000000', '210100000000', '210102000000'],\r\n    ['230000000000', '230100000000', '230102000000'],\r\n  ]);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          label: t.name,\r\n          value: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      label: t.name,\r\n      value: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  console.log('value', value);\r\n\r\n  return (\r\n    <Cascader.AsyncCascaderShowChild\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncCascaderMulti\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n      fetchBranch={(value, cascadeParams) => {\r\n        return Promise.resolve([\r\n          {\r\n            label: '辽宁省',\r\n            value: '210000000000',\r\n            isLeaf: false,\r\n            children: [\r\n              {\r\n                label: '沈阳市',\r\n                value: '210100000000',\r\n                isLeaf: false,\r\n                children: [\r\n                  {\r\n                    label: '和平区',\r\n                    value: '210102000000',\r\n                    isLeaf: true,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: '黑龙江省',\r\n            value: '230000000000',\r\n            isLeaf: false,\r\n            children: [\r\n              {\r\n                label: '哈尔滨市',\r\n                value: '230100000000',\r\n                isLeaf: false,\r\n                children: [\r\n                  {\r\n                    label: '道里区',\r\n                    value: '230102000000',\r\n                    isLeaf: true,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ]);\r\n      }}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Cr,null)},{id:"AsyncCascaderShowChild",name:"AsyncCascaderShowChild",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncCascaderShowChild",info:"AsyncCascaderShowChild"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          label: t.name,\r\n          value: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      label: t.name,\r\n      value: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  console.log('value', value);\r\n\r\n  return (\r\n    <Cascader.AsyncCascaderShowChild\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncCascaderShowChild\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(yr,null)},{id:"CascaderChangeOnSelect",name:"CascaderChangeOnSelect",mode:"code",scope:{React:m},cardProps:{description:{title:"CascaderChangeOnSelect",info:"CascaderChangeOnSelect"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const options = [\r\n    {\r\n      value: 'zhejiang',\r\n      label: 'Zhejiang',\r\n      children: [\r\n        {\r\n          value: 'hangzhou',\r\n          label: 'Hangzhou',\r\n          children: [\r\n            {\r\n              value: 'xihu',\r\n              label: 'West Lake',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      value: 'jiangsu',\r\n      label: 'Jiangsu',\r\n      children: [\r\n        {\r\n          value: 'nanjing',\r\n          label: 'Nanjing',\r\n          children: [\r\n            {\r\n              value: 'zhonghuamen',\r\n              label: 'Zhong Hua Men',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const onChange = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <Cascader.CascaderChangeOnSelect\r\n      placeholder=\"Please select\"\r\n      options={options}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(br,null)},{id:"CascaderMulti",name:"CascaderMulti",mode:"code",scope:{React:m},cardProps:{description:{title:"CascaderMulti",info:"CascaderMulti"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const options = [\r\n    {\r\n      label: 'Light',\r\n      value: 'light',\r\n      children: new Array(20).fill(null).map((_, index) => ({\r\n        label: `Number ${index}`,\r\n        value: index,\r\n      })),\r\n    },\r\n    {\r\n      label: 'Bamboo',\r\n      value: 'bamboo',\r\n      children: [\r\n        {\r\n          label: 'Little',\r\n          value: 'little',\r\n          children: [\r\n            {\r\n              label: 'Toy Fish',\r\n              value: 'fish',\r\n              disableCheckbox: true,\r\n            },\r\n            {\r\n              label: 'Toy Cards',\r\n              value: 'cards',\r\n            },\r\n            {\r\n              label: 'Toy Bird',\r\n              value: 'bird',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const onChange = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <Cascader.CascaderMulti placeholder=\"Please select\" options={options} onChange={onChange} />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ar,null)},{id:"CascaderShowChild",name:"CascaderShowChild",mode:"code",scope:{React:m},cardProps:{description:{title:"CascaderShowChild",info:"CascaderShowChild"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => {\r\n  const options = [\r\n    {\r\n      label: 'Light',\r\n      value: 'light',\r\n      children: new Array(20).fill(null).map((_, index) => ({\r\n        label: `Number ${index}`,\r\n        value: index,\r\n      })),\r\n    },\r\n    {\r\n      label: 'Bamboo',\r\n      value: 'bamboo',\r\n      children: [\r\n        {\r\n          label: 'Little',\r\n          value: 'little',\r\n          children: [\r\n            {\r\n              label: 'Toy Fish',\r\n              value: 'fish',\r\n              disableCheckbox: true,\r\n            },\r\n            {\r\n              label: 'Toy Cards',\r\n              value: 'cards',\r\n            },\r\n            {\r\n              label: 'Toy Bird',\r\n              value: 'bird',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const onChange = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <Cascader.CascaderShowChild\r\n      className={styles.Wrapper1}\r\n      placeholder=\"Please select\"\r\n      options={options}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(kr,null)},{id:"FlatAsyncCascader",name:"FlatAsyncCascader",mode:"code",scope:{React:m},cardProps:{description:{title:"FlatAsyncCascader",info:"FlatAsyncCascader"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  /**\r\n   * fetchData\r\n   * @param pid\r\n   * @param cascadeParams\r\n   */\r\n  function fetchData(pid, cascadeParams) {\r\n    if (!pid) {\r\n      return Promise.resolve(\r\n        Province.map((t) => ({\r\n          label: t.name,\r\n          value: t.id,\r\n          pId: 0,\r\n          isLeaf: false,\r\n        })),\r\n      );\r\n    }\r\n\r\n    const countyIds = Object.keys(County)\r\n      .map((key) => County[key])\r\n      .flat()\r\n      .map((t) => t.id);\r\n\r\n    const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n      label: t.name,\r\n      value: t.id,\r\n      pId: pid,\r\n      isLeaf: countyIds.includes(t.id),\r\n    }));\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  return (\r\n    <Cascader.AsyncCascader\r\n      className={styles.Wrapper}\r\n      placeholder=\"AsyncCascader\"\r\n      value={value}\r\n      onChange={setValue}\r\n      fetchData={fetchData}\r\n      treeDataSimpleMode\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(xr,null)},{id:"FlatCascader",name:"FlatCascader",mode:"code",scope:{React:m},cardProps:{description:{title:"FlatCascader",info:"FlatCascader"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { Cascader } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nimport styles from './index.less';\r\n\r\nconst treeData = [\r\n  ...Province.map((t) => ({\r\n    title: t.name,\r\n    label: t.name,\r\n    value: t.id,\r\n    id: t.id,\r\n    isLeaf: false,\r\n    pId: 0,\r\n  })),\r\n  ...Object.keys(City)\r\n    .map((key) =>\r\n      City[key].map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        isLeaf: false,\r\n        pId: `${key}`,\r\n      })),\r\n    )\r\n    .flat(),\r\n  ...Object.keys(County)\r\n    .map((key) =>\r\n      County[key].map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        isLeaf: true,\r\n        pId: key,\r\n      })),\r\n    )\r\n    .flat(),\r\n];\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState();\r\n\r\n  const onChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Cascader.CascaderMulti\r\n      className={styles.Wrapper}\r\n      value={value}\r\n      placeholder=\"Please select\"\r\n      onChange={onChange}\r\n      options={treeData}\r\n      treeDataSimpleMode\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Pr,null)}]}),m.createElement(d.Wc,{title:"AutoCompleteHOC",config:[{id:"AutoComplete",name:"AutoComplete",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoComplete",info:"AutoComplete"}},type:"PlayGround",codeText:"import React from 'react';\r\n\r\nimport { AutoComplete } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => (\r\n  <AutoComplete\r\n    // value={value}\r\n    options={Array.from({ length: 26 }).map((t, _index) => {\r\n      const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n      return {\r\n        label: letter,\r\n        value: 97 + _index,\r\n      };\r\n    })}\r\n    // style={{ width: 200 }}\r\n    className={styles.Wrapper}\r\n    onSelect={(v) => {\r\n      console.log('onSelect', v);\r\n    }}\r\n    onSearch={(v) => {\r\n      console.log('onSearch', v);\r\n    }}\r\n    onChange={(v) => {\r\n      console.log('onChange', v);\r\n    }}\r\n    placeholder=\"control mode\"\r\n  />\r\n);\r\n",renderChildren:()=>m.createElement(Te,null)},{id:"AutoCompleteSelectInput",name:"AutoCompleteSelectInput",mode:"code",scope:{React:m},cardProps:{description:{title:"AutoCompleteSelectInput",info:"AutoCompleteSelectInput"}},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { AutoComplete } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport styles from './index.less';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState({\r\n    inputValue: '',\r\n    selectValue: '',\r\n  });\r\n\r\n  return (\r\n    <AutoComplete.AutoCompleteSelectInput\r\n      placeholder=\"control mode\"\r\n      // style={{ width: 200 }}\r\n      className={styles.Wrapper}\r\n      value={value}\r\n      options={Array.from({ length: 26 }).map((t, _index) => {\r\n        const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n        return {\r\n          label: letter,\r\n          value: `${97 + _index}`,\r\n        };\r\n      })}\r\n      onChange={setValue}\r\n    />\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ie,null)}]}),m.createElement(d.Wc,{title:"ArrayEntityValueHOC",config:[{id:"SelectEntityValueHOC",name:"SelectEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"SelectEntityValueHOC",info:"Select获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport Mock from \'mockjs\';\r\nimport React, { useEffect } from \'react\';\r\nimport { useImmer } from \'use-immer\';\r\n\r\nimport {\r\n  ArrayEntityValueHOC,\r\n  Checkbox,\r\n  Form,\r\n  MultipleSelect,\r\n  Select,\r\n} from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport Book from \'@/mock/book\';\r\n\r\nconst options = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock(\'@name\');\r\n  const value = Mock.mock(\'@guid\');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [value3, setValue3] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const [value4, setValue4] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const [value5, setValue5] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    // 可以使用两种方式进行赋初值\r\n    form.setFieldValue(\'user\', [options[0], options[1].value]);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="user"\r\n        label="人员"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择人员\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Select placeholder="请选择人员" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="users1"\r\n        label="参与者1"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择参与者1\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <MultipleSelect placeholder="请选择参与者1" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="users2"\r\n        label="参与者2"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择参与者2\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <MultipleSelect.CheckAllSelect placeholder="请选择参与者2" options={options}>\r\n            {(props) => <Checkbox.Group {...props} />}\r\n          </MultipleSelect.CheckAllSelect>\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="users3"\r\n        label="参与者3"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择参与者3\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Select.AutoCompleteSelect\r\n            placeholder="请选择参与者3"\r\n            value={value3.value}\r\n            options={value3.options}\r\n            onChange={(_value) => {\r\n              setValue3((draft) => {\r\n                draft.value = _value;\r\n              });\r\n            }}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue3((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue3((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="users4"\r\n        label="参与者4"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择参与者4\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <MultipleSelect.AutoCompleteMultipleSelect\r\n            placeholder="请选择参与者4"\r\n            value={value4.value}\r\n            options={value4.options}\r\n            onChange={(_value) => {\r\n              setValue4((draft) => {\r\n                draft.value = _value;\r\n              });\r\n            }}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue4((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue4((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="users5"\r\n        label="参与者5"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择参与者5\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <MultipleSelect.AutoCompleteCheckAllMultipleSelect\r\n            placeholder="请选择参与者5"\r\n            value={value5.value}\r\n            options={value5.options}\r\n            onChange={(_value) => {\r\n              setValue5((draft) => {\r\n                draft.value = _value;\r\n              });\r\n            }}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue5((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue5((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          >\r\n            {(props) => <Checkbox.Group {...props} />}\r\n          </MultipleSelect.AutoCompleteCheckAllMultipleSelect>\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(oe,null)},{id:"RadioEntityValueHOC",name:"RadioEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"RadioEntityValueHOC",info:"Radio获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport React, { useContext, useEffect } from \'react\';\r\nimport { useImmer } from \'use-immer\';\r\n\r\nimport { ConfigProvider, Util } from \'@baifendian/adhere\';\r\nimport { ArrayEntityValueHOC, Col, Form, Radio, Row } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport Book from \'@/mock/book\';\r\n\r\nconst options = Array.from({ length: 26 }).map((t, _index) => {\r\n  const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n  return {\r\n    label: letter,\r\n    value: letter,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [value5, setValue5] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const [value6, setValue6] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const [value7, setValue7] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Radio.HorizontalRadio\r\n            options={[\r\n              {\r\n                label: \'男\',\r\n                value: 2,\r\n              },\r\n              {\r\n                label: \'女\',\r\n                value: 1,\r\n              },\r\n            ]}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="letter"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择a-z\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Radio.RadioSelect placeholder="A-Z" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="letter1"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择a-z\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Radio.CustomRadio options={options}>\r\n            {(options) => (\r\n              <Row gutter={[16, 24]}>\r\n                {options.map(({ data }) => (\r\n                  <Col span={4}>\r\n                    <Radio key={data?.value} {...(data ?? {})}>\r\n                      {data?.label}\r\n                    </Radio>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            )}\r\n          </Radio.CustomRadio>\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="letter2"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择a-z\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Radio.CustomRadioSelect\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\r\n              overflow: \'auto\',\r\n            }}\r\n            placeholder="A-Z"\r\n            options={options}\r\n          >\r\n            {(options) => (\r\n              <Row gutter={[16, 24]}>\r\n                {options.map(({ data }) => (\r\n                  <Col span={4}>\r\n                    <Radio key={data?.value} {...(data ?? {})}>\r\n                      {data?.label}\r\n                    </Radio>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            )}\r\n          </Radio.CustomRadioSelect>\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="letter3"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择a-z\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Radio.ButtonRadio options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="letter4"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择a-z\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Radio.ButtonRadioSelect placeholder="A-Z" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="letter5"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择a-z\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Radio.AutoCompleteRadioSelect\r\n            placeholder="AutoCompleteRadioSelect"\r\n            options={value5.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue5((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue5((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="letter6"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择a-z\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Radio.AutoCompleteCustomRadioSelect\r\n            placeholder="AutoCompleteCustomRadioSelect"\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\r\n              overflow: \'auto\',\r\n            }}\r\n            options={value6.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue6((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue6((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          >\r\n            {(options) => (\r\n              <Row gutter={[16, 24]}>\r\n                {options.map(({ data }) => (\r\n                  <Col span={4}>\r\n                    <Radio key={data?.value} {...(data ?? {})}>\r\n                      {data?.label}\r\n                    </Radio>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            )}\r\n          </Radio.AutoCompleteCustomRadioSelect>\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="letter7"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择a-z\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Radio.AutoCompleteButtonRadioSelect\r\n            placeholder="AutoCompleteButtonRadioSelect"\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\r\n              overflow: \'auto\',\r\n            }}\r\n            options={value7.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue7((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue7((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(ee,null)},{id:"CheckboxEntityValueHOC",name:"CheckboxEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"CheckboxEntityValueHOC",info:"Checkbox获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { useImmer } from 'use-immer';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { ArrayEntityValueHOC, Checkbox, Form } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nconst options = Array.from({ length: 26 }).map((t, _index) => {\r\n  const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n  return {\r\n    label: letter,\r\n    value: letter,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [value, setValue] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"sex\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Checkbox.VerticalCheckAllCheckbox\r\n            options={[\r\n              {\r\n                label: '男',\r\n                value: '2',\r\n              },\r\n              {\r\n                label: '女',\r\n                value: '1',\r\n              },\r\n            ]}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex1\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Checkbox.HorizontalCheckAllCheckbox\r\n            options={[\r\n              {\r\n                label: '男',\r\n                value: '2',\r\n              },\r\n              {\r\n                label: '女',\r\n                value: '1',\r\n              },\r\n            ]}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"letter1\"\r\n        label=\"a-z\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择a-z',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Checkbox.CheckboxSelect placeholder=\"A-Z\" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"letter2\"\r\n        label=\"a-z\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择a-z',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Checkbox.CheckAllCheckboxSelect placeholder=\"A-Z\" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"book\"\r\n        label=\"book\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择a-z',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Checkbox.AutoCompleteCheckboxSelect\r\n            placeholder=\"AutoCompleteCheckboxSelect\"\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\r\n              overflow: 'auto',\r\n            }}\r\n            options={value.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(_,null)},{id:"TransferEntityValueHOC",name:"TransferEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"TransferEntityValueHOC",info:"Transfer获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useImmer } from 'use-immer';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { ArrayEntityValueHOC, Form, Transfer } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport Book from '@/mock/book';\r\n\r\nconst mockData = Array.from({\r\n  length: 20,\r\n}).map((_, i) => ({\r\n  key: i.toString(),\r\n  title: `content${i + 1}`,\r\n  description: `description of content${i + 1}`,\r\n}));\r\nconst initialTargetKeys = mockData.filter((item) => Number(item.key) > 10).map((item) => item.key);\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [value, setValue] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const [targetKeys, setTargetKeys] = useState([]);\r\n  const [selectedKeys, setSelectedKeys] = useState(initialTargetKeys);\r\n  const onChange = (nextTargetKeys, direction, moveKeys) => {\r\n    console.log('targetKeys:', nextTargetKeys);\r\n    console.log('direction:', direction);\r\n    console.log('moveKeys:', moveKeys);\r\n    setTargetKeys(nextTargetKeys);\r\n  };\r\n  const onSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n    console.log('sourceSelectedKeys:', sourceSelectedKeys);\r\n    console.log('targetSelectedKeys:', targetSelectedKeys);\r\n    setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\r\n  };\r\n  const onScroll = (direction, e) => {\r\n    console.log('direction:', direction);\r\n    console.log('target:', e.target);\r\n  };\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"sex\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Transfer\r\n            dataSource={mockData}\r\n            titles={['Source', 'Target']}\r\n            targetKeys={targetKeys}\r\n            selectedKeys={selectedKeys}\r\n            onChange={onChange}\r\n            onSelectChange={onSelectChange}\r\n            onScroll={onScroll}\r\n            render={(item) => item.title}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex1\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Transfer.TransferSelect\r\n            placeholder=\"A-Z\"\r\n            options={Array.from({ length: 26 }).map((t, _index) => {\r\n              const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n              return {\r\n                label: letter,\r\n                value: letter,\r\n              };\r\n            })}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex2\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Transfer.AutoCompleteTransferSelect\r\n            placeholder=\"AutoCompleteTransferSelect\"\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\r\n              overflow: 'auto',\r\n            }}\r\n            options={value.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                console.log('_kw', _kw);\r\n\r\n                if (!_kw) {\r\n                  setValue((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ge,null)},{id:"TagEntityValueHOC",name:"TagEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"TagEntityValueHOC",info:"Tag获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport React, { useEffect } from \'react\';\r\nimport { useImmer } from \'use-immer\';\r\n\r\nimport { ArrayEntityValueHOC, Form, Tag } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport Book from \'@/mock/book\';\r\n\r\nconst options = Array.from({ length: 26 }).map((t, _index) => {\r\n  const letter = String.fromCharCode(97 + _index).toUpperCase();\r\n\r\n  return {\r\n    value: letter,\r\n    label: letter,\r\n    children: letter,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [value6, setValue6] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const [value7, setValue7] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.TagSelect mode="multiple" placeholder="A-Z" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex1"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.VerticalCheckableTagGroup mode="multiple" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex2"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.VerticalCheckAllCheckableTagGroup options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex3"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.CheckAllTagSelect placeholder="A-Z" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex4"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.HorizontalCheckableTagGroup mode="multiple" options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex5"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.HorizontalCheckAllCheckableTagGroup options={options} />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex6"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.AutoCompleteTagSelect\r\n            placeholder="AutoCompleteTagSelect"\r\n            mode="multiple"\r\n            options={value6.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue6((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                      children: t.t,\r\n                    }));\r\n\r\n                  setValue6((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n            // tagProps={{\r\n            //   mode: \'multiple\',\r\n            // }}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex7"\r\n        label="a-z"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Tag.AutoCompleteCheckAllTagSelect\r\n            placeholder="AutoCompleteCheckAllTagSelect"\r\n            options={value7.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue7((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                      children: t.t,\r\n                    }));\r\n\r\n                  setValue7((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(ue,null)},{id:"ListEntityValueHOC",name:"ListEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"ListEntityValueHOC",info:"List获取实体数据"}},type:"PlayGround",codeText:'import React, { useContext, useEffect } from \'react\';\r\nimport { useImmer } from \'use-immer\';\r\n\r\nimport { ConfigProvider, Util } from \'@baifendian/adhere\';\r\nimport { ArrayEntityValueHOC, Avatar, Button, Form, List } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport Book from \'@/mock/book\';\r\n\r\nconst data = [\r\n  {\r\n    title: \'Ant Design Title 1\',\r\n  },\r\n  {\r\n    title: \'Ant Design Title 2\',\r\n  },\r\n  {\r\n    title: \'Ant Design Title 3\',\r\n  },\r\n  {\r\n    title: \'Ant Design Title 4\',\r\n  },\r\n].map(({ title }) => ({\r\n  title,\r\n  label: title,\r\n  value: title,\r\n}));\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [value3, setValue3] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const [value4, setValue4] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <List.ListSelect\r\n            placeholder="List"\r\n            options={data}\r\n            listProps={{\r\n              itemLayout: \'horizontal\',\r\n              renderItem: (item, index) => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Avatar\r\n                        src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`}\r\n                      />\r\n                    }\r\n                    title={<a href="https://ant.design">{item.title}</a>}\r\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\r\n                  />\r\n                </List.Item>\r\n              ),\r\n            }}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex1"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <List.ListSelect\r\n            mode="multiple"\r\n            placeholder="List"\r\n            options={data}\r\n            listProps={{\r\n              itemLayout: \'horizontal\',\r\n              renderItem: (item, index) => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Avatar\r\n                        src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`}\r\n                      />\r\n                    }\r\n                    title={<a href="https://ant.design">{item.title}</a>}\r\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\r\n                  />\r\n                </List.Item>\r\n              ),\r\n            }}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex2"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <List.CheckAllListSelect\r\n            placeholder="List"\r\n            options={data}\r\n            listProps={{\r\n              itemLayout: \'horizontal\',\r\n              renderItem: (item, index) => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Avatar\r\n                        src={`https://xsgames.co/randomusers/avatar.php?g=pixel&key=${index}`}\r\n                      />\r\n                    }\r\n                    title={<a href="https://ant.design">{item.title}</a>}\r\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\r\n                  />\r\n                </List.Item>\r\n              ),\r\n            }}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex3"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <List.AutoCompleteListSelect\r\n            placeholder="AutoCompleteListSelect"\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\r\n              overflow: \'auto\',\r\n            }}\r\n            options={value3.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                console.log(\'_kw\', _kw);\r\n\r\n                if (!_kw) {\r\n                  setValue3((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue3((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n            listProps={{\r\n              itemLayout: \'horizontal\',\r\n              renderItem: (item) => (\r\n                <List.Item>\r\n                  <List.Item.Meta title={item.title} description={item.label} />\r\n                </List.Item>\r\n              ),\r\n            }}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex4"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <List.AutoCompleteCheckAllListSelect\r\n            placeholder="AutoCompleteCheckAllListSelect"\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\r\n              overflow: \'auto\',\r\n            }}\r\n            options={value4.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue4((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...Book]\r\n                    .filter((_book) => _book.t.indexOf(_kw) !== -1)\r\n                    .map((t) => ({\r\n                      label: t.t,\r\n                      value: t.id,\r\n                    }));\r\n\r\n                  setValue4((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n            listProps={{\r\n              itemLayout: \'horizontal\',\r\n              renderItem: (item) => (\r\n                <List.Item>\r\n                  <List.Item.Meta title={item.title} description={item.label} />\r\n                </List.Item>\r\n              ),\r\n            }}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(Z,null)},{id:"TableEntityValueHOC",name:"TableEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"TableEntityValueHOC",info:"Table获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport Mock from 'mockjs';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { useImmer } from 'use-immer';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { ArrayEntityValueHOC, Form, Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [value, setValue] = useImmer({\r\n    options: [],\r\n    value: [],\r\n  });\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"sex\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Table.TableSelect\r\n            placeholder=\"TableSelect\"\r\n            options={dataSource}\r\n            tableProps={{\r\n              rowKey: 'id',\r\n              columns: [\r\n                {\r\n                  title: '名称',\r\n                  key: 'name',\r\n                  dataIndex: 'name',\r\n                },\r\n                {\r\n                  title: '地址',\r\n                  key: 'address',\r\n                  dataIndex: 'address',\r\n                },\r\n                {\r\n                  title: '籍贯',\r\n                  key: 'nativePlace',\r\n                  dataIndex: 'nativePlace',\r\n                },\r\n                {\r\n                  title: '身高',\r\n                  key: 'height',\r\n                  dataIndex: 'height',\r\n                },\r\n                {\r\n                  title: '体重',\r\n                  key: 'width',\r\n                  dataIndex: 'width',\r\n                },\r\n              ],\r\n            }}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex1\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Table.TableSelect\r\n            mode=\"multiple\"\r\n            placeholder=\"TableSelect\"\r\n            options={dataSource}\r\n            tableProps={{\r\n              rowKey: 'id',\r\n              columns: [\r\n                {\r\n                  title: '名称',\r\n                  key: 'name',\r\n                  dataIndex: 'name',\r\n                },\r\n                {\r\n                  title: '地址',\r\n                  key: 'address',\r\n                  dataIndex: 'address',\r\n                },\r\n                {\r\n                  title: '籍贯',\r\n                  key: 'nativePlace',\r\n                  dataIndex: 'nativePlace',\r\n                },\r\n                {\r\n                  title: '身高',\r\n                  key: 'height',\r\n                  dataIndex: 'height',\r\n                },\r\n                {\r\n                  title: '体重',\r\n                  key: 'width',\r\n                  dataIndex: 'width',\r\n                },\r\n              ],\r\n            }}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex2\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <ArrayEntityValueHOC>\r\n          <Table.AutoCompleteTableSelect\r\n            // mode=\"multiple\"\r\n            placeholder=\"AutoCompleteTableSelect\"\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\r\n              overflow: 'auto',\r\n            }}\r\n            options={value.options}\r\n            loadData={(_kw) =>\r\n              new Promise((resolve) => {\r\n                if (!_kw) {\r\n                  setValue((draft) => {\r\n                    draft.options = [];\r\n                  });\r\n                  resolve();\r\n                  return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                  const result = [...dataSource].filter(\r\n                    (_record) => _record.label.indexOf(_kw) !== -1,\r\n                  );\r\n\r\n                  setValue((draft) => {\r\n                    draft.options = result;\r\n                  });\r\n\r\n                  resolve();\r\n                }, 500);\r\n              })\r\n            }\r\n            tableProps={{\r\n              rowKey: 'id',\r\n              columns: [\r\n                {\r\n                  title: '名称',\r\n                  key: 'name',\r\n                  dataIndex: 'name',\r\n                },\r\n                {\r\n                  title: '地址',\r\n                  key: 'address',\r\n                  dataIndex: 'address',\r\n                },\r\n                {\r\n                  title: '籍贯',\r\n                  key: 'nativePlace',\r\n                  dataIndex: 'nativePlace',\r\n                },\r\n                {\r\n                  title: '身高',\r\n                  key: 'height',\r\n                  dataIndex: 'height',\r\n                },\r\n                {\r\n                  title: '体重',\r\n                  key: 'width',\r\n                  dataIndex: 'width',\r\n                },\r\n              ],\r\n              pagination: false,\r\n            }}\r\n          />\r\n        </ArrayEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(ce,null)}]}),m.createElement(d.Wc,{title:"PagingEntityValueHOC",config:[{id:"ListPagingEntityValueHOC",name:"ListPagingEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"ListPagingEntityValueHOC",info:"List分页获取实体数据"}},type:"PlayGround",codeText:'import { Avatar, Button } from \'antd\';\r\nimport Mock from \'mockjs\';\r\nimport React, { useContext, useEffect } from \'react\';\r\n\r\nimport { ConfigProvider, Util } from \'@baifendian/adhere\';\r\nimport { Form, List, PagingEntityValueHOC } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nconst data = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock(\'@cname\');\r\n  const value = Mock.mock(\'@guid\');\r\n\r\n  return {\r\n    label,\r\n    value,\r\n    title: label,\r\n    avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${value}`,\r\n  };\r\n});\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  function loadData(page, limit) {\r\n    console.log(\'paging\', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: data.length,\r\n        data: data.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <PagingEntityValueHOC>\r\n          <List.ListPaging\r\n            isSuspenseAsync={false}\r\n            pagingProps={{\r\n              loadData,\r\n              defaultLimit: 5,\r\n            }}\r\n            listPagingProps={{\r\n              itemLayout: \'horizontal\',\r\n              renderItem: (item, index) => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src={item.avatar} />}\r\n                    title={<a href="https://ant.design">{item.title}</a>}\r\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\r\n                  />\r\n                </List.Item>\r\n              ),\r\n            }}\r\n          />\r\n        </PagingEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex1"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <PagingEntityValueHOC>\r\n          <List.ListPagingSelect\r\n            placeholder="RadioListPagingSelect"\r\n            pagingProps={{\r\n              loadData,\r\n              defaultLimit: 5,\r\n            }}\r\n            listPagingProps={{\r\n              itemLayout: \'horizontal\',\r\n              renderItem: (item, index) => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src={item.avatar} />}\r\n                    title={<a href="https://ant.design">{item.title}</a>}\r\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\r\n                  />\r\n                </List.Item>\r\n              ),\r\n            }}\r\n          />\r\n        </PagingEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex2"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <PagingEntityValueHOC>\r\n          <List.ListPaging\r\n            mode="multiple"\r\n            isSuspenseAsync={false}\r\n            pagingProps={{\r\n              loadData,\r\n              defaultLimit: 5,\r\n            }}\r\n            listPagingProps={{\r\n              itemLayout: \'horizontal\',\r\n              renderItem: (item, index) => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src={item.avatar} />}\r\n                    title={<a href="https://ant.design">{item.title}</a>}\r\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\r\n                  />\r\n                </List.Item>\r\n              ),\r\n            }}\r\n          />\r\n        </PagingEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex3"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <PagingEntityValueHOC>\r\n          <List.ListPagingSelect\r\n            mode="multiple"\r\n            placeholder="CheckboxListPagingSelect"\r\n            pagingProps={{\r\n              loadData,\r\n              defaultLimit: 5,\r\n            }}\r\n            listPagingProps={{\r\n              itemLayout: \'horizontal\',\r\n              renderItem: (item, index) => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src={item.avatar} />}\r\n                    title={<a href="https://ant.design">{item.title}</a>}\r\n                    description="Ant Design, a design language for background applications, is refined by Ant UED Team"\r\n                  />\r\n                </List.Item>\r\n              ),\r\n            }}\r\n          />\r\n        </PagingEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex4"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <PagingEntityValueHOC>\r\n          <List.AutoCompleteListPagingSelect\r\n            mode="multiple"\r\n            placeholder="AutoCompleteListPagingSelect"\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\r\n              overflow: \'auto\',\r\n            }}\r\n            pagingProps={{\r\n              loadData,\r\n              defaultLimit: 5,\r\n            }}\r\n            listPagingProps={{\r\n              itemLayout: \'horizontal\',\r\n              renderItem: (item) => (\r\n                <List.Item>\r\n                  <List.Item.Meta title={item.title} description={item.label} />\r\n                </List.Item>\r\n              ),\r\n            }}\r\n          />\r\n        </PagingEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(gt,null)},{id:"TablePagingEntityValueHOC",name:"TablePagingEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"TablePagingEntityValueHOC",info:"Table分页获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport Mock from 'mockjs';\r\nimport React, { useContext, useEffect } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Form, PagingEntityValueHOC, Table } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst dataSource = Array.from({ length: 100 }).map(() => {\r\n  const label = Mock.mock('@name');\r\n  const value = Mock.mock('@guid');\r\n\r\n  return {\r\n    id: value,\r\n    name: label,\r\n    address: Mock.mock('@region'),\r\n    height: Mock.mock('@integer(60, 100)'),\r\n    width: Mock.mock('@integer(60, 100)'),\r\n    nativePlace: Mock.mock('@city'),\r\n    label,\r\n    value,\r\n  };\r\n});\r\n\r\nconst columns = [\r\n  {\r\n    title: '名称',\r\n    key: 'name',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '地址',\r\n    key: 'address',\r\n    dataIndex: 'address',\r\n  },\r\n  {\r\n    title: '籍贯',\r\n    key: 'nativePlace',\r\n    dataIndex: 'nativePlace',\r\n  },\r\n  {\r\n    title: '身高',\r\n    key: 'height',\r\n    dataIndex: 'height',\r\n  },\r\n  {\r\n    title: '体重',\r\n    key: 'width',\r\n    dataIndex: 'width',\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  function loadData(page, limit) {\r\n    console.log('paging', page, limit);\r\n\r\n    return new Promise((resolve) => {\r\n      resolve({\r\n        totalCount: dataSource.length,\r\n        data: dataSource.slice((page - 1) * limit, page * limit),\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"sex\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <PagingEntityValueHOC>\r\n          <Table.TablePaging\r\n            isSuspenseAsync={false}\r\n            pagingProps={{\r\n              loadData,\r\n              defaultLimit: 5,\r\n            }}\r\n            tablePagingProps={{\r\n              rowKey: 'id',\r\n              columns,\r\n            }}\r\n          />\r\n        </PagingEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex1\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <PagingEntityValueHOC>\r\n          <Table.TablePagingSelect\r\n            placeholder=\"RadioPagingList\"\r\n            pagingProps={{\r\n              loadData,\r\n              defaultLimit: 5,\r\n            }}\r\n            tablePagingProps={{\r\n              rowKey: 'id',\r\n              columns,\r\n            }}\r\n          />\r\n        </PagingEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex2\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <PagingEntityValueHOC>\r\n          <Table.TablePaging\r\n            mode=\"multiple\"\r\n            isSuspenseAsync={false}\r\n            pagingProps={{\r\n              loadData,\r\n              defaultLimit: 5,\r\n            }}\r\n            tablePagingProps={{\r\n              rowKey: 'id',\r\n              columns,\r\n            }}\r\n          />\r\n        </PagingEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex3\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <PagingEntityValueHOC>\r\n          <Table.TablePagingSelect\r\n            mode=\"multiple\"\r\n            placeholder=\"RadioPagingList\"\r\n            pagingProps={{\r\n              loadData,\r\n              defaultLimit: 5,\r\n            }}\r\n            tablePagingProps={{\r\n              rowKey: 'id',\r\n              columns,\r\n            }}\r\n          />\r\n        </PagingEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex4\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <PagingEntityValueHOC>\r\n          <Table.AutoCompleteTablePagingSelect\r\n            mode=\"multiple\"\r\n            placeholder=\"AutoCompleteTablePagingSelect\"\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(300, media.designWidth, media),\r\n              overflow: 'auto',\r\n            }}\r\n            pagingProps={{\r\n              loadData,\r\n              defaultLimit: 5,\r\n            }}\r\n            tablePagingProps={{\r\n              rowKey: 'id',\r\n              columns,\r\n            }}\r\n          />\r\n        </PagingEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(vt,null)}]}),m.createElement(d.Wc,{title:"TreeEntityValueHOC",config:[{id:"TreeEntityValueHOC",name:"TreeEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"TreeEntityValueHOC",info:"TreeSelect获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React, { useContext, useEffect } from 'react';\r\n\r\nimport { ConfigProvider, Util } from '@baifendian/adhere';\r\nimport { Form, TreeEntityValueHOC, TreeSelect } from '@baifendian/adhere-ui-anthoc';\r\n\r\nimport { City, County, Province } from '@/mock/pcc';\r\n\r\nconst treeData = [\r\n  {\r\n    value: 'parent 1',\r\n    title: 'parent 1',\r\n    children: [\r\n      {\r\n        value: 'parent 1-0',\r\n        title: 'parent 1-0',\r\n        children: [\r\n          {\r\n            value: 'leaf1',\r\n            title: 'leaf1',\r\n          },\r\n          {\r\n            value: 'leaf2',\r\n            title: 'leaf2',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'parent 1-1',\r\n        title: 'parent 1-1',\r\n        children: [\r\n          {\r\n            value: 'leaf3',\r\n            title: <b style={{ color: '#08c' }}>leaf3</b>,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst flatTreeData = [\r\n  ...Province.map((t) => ({\r\n    title: t.name,\r\n    label: t.name,\r\n    value: t.id,\r\n    id: t.id,\r\n    isLeaf: false,\r\n    pId: 0,\r\n  })),\r\n  ...Object.keys(City)\r\n    .map((key) =>\r\n      City[key].map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        isLeaf: false,\r\n        pId: `${key}`,\r\n      })),\r\n    )\r\n    .flat(),\r\n  ...Object.keys(County)\r\n    .map((key) =>\r\n      County[key].map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        isLeaf: true,\r\n        pId: key,\r\n      })),\r\n    )\r\n    .flat(),\r\n];\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const { media } = useContext(ConfigProvider.Context);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"sex\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC>\r\n          <TreeSelect\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\r\n              overflow: 'auto',\r\n            }}\r\n            placeholder=\"Please select\"\r\n            treeDefaultExpandAll\r\n            treeData={treeData}\r\n          />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex1\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC>\r\n          <TreeSelect.TreeMultiSelect\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\r\n              overflow: 'auto',\r\n            }}\r\n            placeholder=\"Please select\"\r\n            treeDefaultExpandAll\r\n            treeData={treeData}\r\n          />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex2\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC>\r\n          <TreeSelect.TreeCheckedShowParentSelect\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\r\n              overflow: 'auto',\r\n            }}\r\n            placeholder=\"Please select\"\r\n            treeDefaultExpandAll\r\n            treeData={treeData}\r\n          />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex3\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC>\r\n          <TreeSelect.TreeCheckedShowChildSelect\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\r\n              overflow: 'auto',\r\n            }}\r\n            placeholder=\"Please select\"\r\n            treeDefaultExpandAll\r\n            treeData={treeData}\r\n          />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex4\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC>\r\n          <TreeSelect.TreeCheckedShowAllSelect\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\r\n              overflow: 'auto',\r\n            }}\r\n            placeholder=\"Please select\"\r\n            treeDefaultExpandAll\r\n            treeData={treeData}\r\n          />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"sex5\"\r\n        label=\"性别\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择性别',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC>\r\n          <TreeSelect\r\n            dropdownStyle={{\r\n              maxHeight: Util.pxToRem(400, media.designWidth, media),\r\n              overflow: 'auto',\r\n            }}\r\n            placeholder=\"Please select\"\r\n            treeDefaultExpandAll\r\n            treeData={flatTreeData}\r\n            treeDataSimpleMode\r\n          />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Ya,null)},{id:"CascaderEntityValueHOC",name:"CascaderEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"CascaderEntityValueHOC",info:"Cascader获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport React, { useEffect } from \'react\';\r\n\r\nimport { Cascader, Form, TreeEntityValueHOC } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport { City, County, Province } from \'@/mock/pcc\';\r\n\r\nconst options = [\r\n  {\r\n    value: \'zhejiang\',\r\n    label: \'Zhejiang\',\r\n    children: [\r\n      {\r\n        value: \'hangzhou\',\r\n        label: \'Hangzhou\',\r\n        children: [\r\n          {\r\n            value: \'xihu\',\r\n            label: \'West Lake\',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: \'jiangsu\',\r\n    label: \'Jiangsu\',\r\n    children: [\r\n      {\r\n        value: \'nanjing\',\r\n        label: \'Nanjing\',\r\n        children: [\r\n          {\r\n            value: \'zhonghuamen\',\r\n            label: \'Zhong Hua Men\',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst treeData = [\r\n  ...Province.map((t) => ({\r\n    title: t.name,\r\n    label: t.name,\r\n    value: t.id,\r\n    id: t.id,\r\n    isLeaf: false,\r\n    pId: 0,\r\n  })),\r\n  ...Object.keys(City)\r\n    .map((key) =>\r\n      City[key].map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        isLeaf: false,\r\n        pId: `${key}`,\r\n      })),\r\n    )\r\n    .flat(),\r\n  ...Object.keys(County)\r\n    .map((key) =>\r\n      County[key].map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        isLeaf: true,\r\n        pId: key,\r\n      })),\r\n    )\r\n    .flat(),\r\n];\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC treeDataProp="options">\r\n          <Cascader placeholder="Please select" options={options} />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex1"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC treeDataProp="options">\r\n          <Cascader.CascaderMulti placeholder="Please select" options={options} />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex2"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC treeDataProp="options">\r\n          <Cascader.CascaderChangeOnSelect placeholder="Please select" options={options} />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex3"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC treeDataProp="options">\r\n          <Cascader.CascaderShowChild placeholder="Please select" options={options} />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex4"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeEntityValueHOC treeDataProp="options">\r\n          <Cascader.CascaderMulti\r\n            placeholder="Please select"\r\n            options={treeData}\r\n            treeDataSimpleMode\r\n          />\r\n        </TreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(Za,null)}]}),m.createElement(d.Wc,{title:"AsyncTreeEntityValueHOC",config:[{id:"AsyncTreeEntityValueHOC",name:"AsyncTreeEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncTreeEntityValueHOC",info:"AsyncTreeSelect获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport React, { useEffect } from \'react\';\r\n\r\nimport { AsyncTreeEntityValueHOC, Form, TreeSelect } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport { City, County, Province } from \'@/mock/pcc\';\r\n\r\n/**\r\n * fetchData\r\n * @param pid\r\n * @param cascadeParams\r\n */\r\nfunction fetchData(pid, cascadeParams) {\r\n  if (!pid) {\r\n    return Promise.resolve(\r\n      Province.map((t) => ({\r\n        title: t.name,\r\n        label: t.name,\r\n        value: t.id,\r\n        id: t.id,\r\n        pId: 0,\r\n        isLeaf: false,\r\n      })),\r\n    );\r\n  }\r\n\r\n  const countyIds = Object.keys(County)\r\n    .map((key) => County[key])\r\n    .flat()\r\n    .map((t) => t.id);\r\n\r\n  const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n    title: t.name,\r\n    label: t.name,\r\n    value: t.id,\r\n    id: t.id,\r\n    pId: pid,\r\n    isLeaf: countyIds.includes(t.id),\r\n  }));\r\n\r\n  return Promise.resolve(result);\r\n}\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <TreeSelect.AsyncTreeSelect placeholder="AsyncTreeSelect" fetchData={fetchData} />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex1"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <TreeSelect.AsyncTreeMultiSelect\r\n            placeholder="AsyncTreeMultiSelectEcho"\r\n            fetchData={fetchData}\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex2"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <TreeSelect.AsyncTreeCheckedShowParentSelect\r\n            placeholder="AsyncTreeCheckedShowParentSelect"\r\n            fetchData={fetchData}\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex3"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <TreeSelect.AsyncTreeCheckedShowAllSelect\r\n            placeholder="AsyncTreeCheckedShowAllSelect"\r\n            fetchData={fetchData}\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex4"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <TreeSelect.AsyncTreeCheckedShowChildSelect\r\n          placeholder="AsyncTreeCheckedShowChildSelect"\r\n          fetchData={fetchData}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex5"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <TreeSelect.AsyncTreeSelect\r\n            placeholder="AsyncTreeSelect"\r\n            fetchData={fetchData}\r\n            treeDataSimpleMode\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(Se,null)},{id:"AsyncCascaderEntityValueHOC",name:"AsyncCascaderEntityValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"AsyncCascaderEntityValueHOC",info:"AsyncCascader获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport React, { useEffect } from \'react\';\r\n\r\nimport { AsyncTreeEntityValueHOC, Cascader, Form } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nimport { City, County, Province } from \'@/mock/pcc\';\r\n\r\n/**\r\n * fetchData\r\n * @param pid\r\n * @param cascadeParams\r\n */\r\nfunction fetchData(pid, cascadeParams) {\r\n  console.log(\'pid\', pid);\r\n\r\n  if (!pid) {\r\n    return Promise.resolve(\r\n      Province.map((t) => ({\r\n        label: t.name,\r\n        value: t.id,\r\n        pId: 0,\r\n        isLeaf: false,\r\n      })),\r\n    );\r\n  }\r\n\r\n  const countyIds = Object.keys(County)\r\n    .map((key) => County[key])\r\n    .flat()\r\n    .map((t) => t.id);\r\n\r\n  const result = { ...City, ...County }[pid]?.map?.((t) => ({\r\n    label: t.name,\r\n    value: t.id,\r\n    pId: pid,\r\n    isLeaf: countyIds.includes(t.id),\r\n  }));\r\n\r\n  return Promise.resolve(result);\r\n}\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="sex"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <Cascader.AsyncCascader placeholder="AsyncCascader" fetchData={fetchData} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex1"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <Cascader.AsyncCascaderChangeOnSelect\r\n            placeholder="AsyncCascaderChangeOnSelect"\r\n            fetchData={fetchData}\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex2"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <Cascader.AsyncCascaderMulti placeholder="AsyncCascaderMulti" fetchData={fetchData} />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="sex3"\r\n        label="性别"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择性别\',\r\n          },\r\n        ]}\r\n      >\r\n        <AsyncTreeEntityValueHOC>\r\n          <Cascader.AsyncCascader\r\n            placeholder="AsyncCascader"\r\n            fetchData={fetchData}\r\n            treeDataSimpleMode\r\n          />\r\n        </AsyncTreeEntityValueHOC>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(Ae,null)}]}),m.createElement(d.Wc,{title:"DatePickerValueHOC",config:[{id:"DatePickerTimestampValueHOC",name:"DatePickerTimestampValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"DatePickerTimestampValueHOC",info:"DatePickerTimestamp获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport dayjs from \'dayjs\';\r\nimport React, { useEffect } from \'react\';\r\n\r\nimport { DatePickerTimestampValueHOC, Form } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue(\'birthDay2\', dayjs().valueOf());\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="birthday"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerTimestampValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="birthday1"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerTimestampValueHOC type="seconds" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="birthday2"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerTimestampValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(on,null)},{id:"DatePickerFormatValueHOC",name:"DatePickerFormatValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"DatePickerFormatValueHOC",info:"DatePickerFormat获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { DatePickerFormatValueHOC, Form } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue('birthDay2', dayjs().format('YYYY-MM-DD'));\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"birthday\"\r\n        label=\"生日\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择生日',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerFormatValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"birthday1\"\r\n        label=\"生日\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择生日',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerFormatValueHOC type=\"seconds\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"birthday2\"\r\n        label=\"生日\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择生日',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePickerFormatValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(en,null)}]}),m.createElement(d.Wc,{title:"RangePickerValueHOC",config:[{id:"RangePickerTimestampValueHOC",name:"RangePickerTimestampValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"RangePickerTimestampValueHOC",info:"RangePickerTimestamp获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { Form, RangePickerTimestampValueHOC } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue('createTime', [dayjs().valueOf(), dayjs().valueOf()]);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"createTime\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerTimestampValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"createTime1\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerTimestampValueHOC type={['seconds', 'seconds']} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"createTime2\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerTimestampValueHOC type={['seconds', 'milliseconds']} />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Gt,null)},{id:"RangePickerFormatValueHOC",name:"RangePickerFormatValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"RangePickerFormatValueHOC",info:"RangePickerFormat获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { Form, RangePickerFormatValueHOC } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue('createTime', ['2023-12-12: 23:45:23', '2026-12-12: 23:45:23']);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"createTime\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerFormatValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"createTime1\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerFormatValueHOC type={['seconds', 'seconds']} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"createTime2\"\r\n        label=\"创建时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择创建时间',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePickerFormatValueHOC type={['seconds', 'milliseconds']} />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(Mt,null)}]}),m.createElement(d.Wc,{title:"TimePickerValueHOC",config:[{id:"TimePickerTimestampValueHOC",name:"TimePickerTimestampValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"TimePickerTimestampValueHOC",info:"TimePickerTimestamp获取实体数据"}},type:"PlayGround",codeText:'import { Button } from \'antd\';\r\nimport dayjs from \'dayjs\';\r\nimport React, { useEffect } from \'react\';\r\n\r\nimport { Form, TimePickerTimestampValueHOC } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue(\'birthDay2\', dayjs().valueOf());\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign="right"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log(\'values\', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name="birthday"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <TimePickerTimestampValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="birthday1"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <TimePickerTimestampValueHOC type="seconds" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name="birthday2"\r\n        label="生日"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \'请选择生日\',\r\n          },\r\n        ]}\r\n      >\r\n        <TimePickerTimestampValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType="submit" block type="primary">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(Wa,null)},{id:"TimePickerFormatValueHOC",name:"TimePickerFormatValueHOC",mode:"code",scope:{React:m},cardProps:{description:{title:"TimePickerFormatValueHOC",info:"TimePickerFormat获取实体数据"}},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { Form, TimePickerFormatValueHOC } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue('createTime', '23:59:59');\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelAlign=\"right\"\r\n      labelCol={{ span: 3 }}\r\n      wrapperCol={{ span: 21 }}\r\n      onFinish={(values) => {\r\n        console.log('values', values);\r\n        alert(JSON.stringify(values));\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"createTime\"\r\n        label=\"开店时间\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择开店时间',\r\n          },\r\n        ]}\r\n      >\r\n        <TimePickerFormatValueHOC />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 24 }}>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(La,null)}]}),m.createElement(d.Wc,{title:"FormHOC",config:[{id:"NestingFormItem",name:"NestingFormItem",mode:"code",scope:{React:m},cardProps:{description:{title:"嵌套的FormItem",info:"嵌套的FormItem"}},type:"PlayGround",codeText:'import React, { useEffect, useRef } from \'react\';\r\n\r\nimport { FlexLayout } from \'@baifendian/adhere\';\r\nimport { Button, Form, Input } from \'@baifendian/adhere-ui-anthoc\';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n  const itemsRef = useRef(null);\r\n\r\n  const obj1Ref = useRef();\r\n  const obj2Ref = useRef();\r\n\r\n  function getMap() {\r\n    if (!itemsRef.current) {\r\n      // 首次运行时初始化 Map。\r\n      itemsRef.current = new Map();\r\n    }\r\n    return itemsRef.current;\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(JSON.parse(\'{"name":"1","obj1":{"a":"2","b":{"b.1":"3","b.2":"4"}}}\'));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Form form={form}>\r\n        <Form.Item\r\n          name="name"\r\n          label="姓名"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \'请输入姓名\',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder="name" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name="obj1"\r\n          rules={[\r\n            {\r\n              validator: () => {\r\n                return obj1Ref.current.validateFields();\r\n              },\r\n            },\r\n          ]}\r\n        >\r\n          <Form.NestingFormItem ref={obj1Ref}>\r\n            <Form.Item\r\n              name="a"\r\n              label="a"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \'请输入a\',\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder="a" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name="b"\r\n              rules={[\r\n                {\r\n                  validator: () => {\r\n                    return obj2Ref.current.validateFields();\r\n                  },\r\n                },\r\n              ]}\r\n            >\r\n              <Form.NestingFormItem ref={obj2Ref}>\r\n                <Form.Item\r\n                  name="b.1"\r\n                  label="b.1"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \'请输入b.1\',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder="b.1" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name="b.2"\r\n                  label="b.2"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \'请输入b.2\',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder="b.2" />\r\n                </Form.Item>\r\n              </Form.NestingFormItem>\r\n            </Form.Item>\r\n          </Form.NestingFormItem>\r\n        </Form.Item>\r\n\r\n        <Form.List name="array">\r\n          {(fields, { add, remove }, { errors }) => {\r\n            return (\r\n              <>\r\n                <Button\r\n                  onClick={() => {\r\n                    add();\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n                {fields.map((field) => {\r\n                  return (\r\n                    <Form.Item\r\n                      key={field.key}\r\n                      {...field}\r\n                      rules={[\r\n                        {\r\n                          validator: () => {\r\n                            const map = getMap();\r\n                            const ref = map.get(field.key);\r\n                            return ref.validateFields();\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Form.NestingFormItem\r\n                        ref={(node) => {\r\n                          const map = getMap();\r\n                          if (node) {\r\n                            map.set(field.key, node);\r\n                          } else {\r\n                            map.delete(field.key);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <FlexLayout direction="horizontal">\r\n                          <FlexLayout.Auto>\r\n                            <Form.Item\r\n                              name="key1"\r\n                              label="key1"\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: \'请输入key1\',\r\n                                },\r\n                              ]}\r\n                            >\r\n                              <Input />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                              name="key2"\r\n                              label="key2"\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: \'请输入key2\',\r\n                                },\r\n                              ]}\r\n                            >\r\n                              <Input />\r\n                            </Form.Item>\r\n                          </FlexLayout.Auto>\r\n\r\n                          <FlexLayout.Fixed>\r\n                            <Button\r\n                              onClick={() => {\r\n                                remove(field.name);\r\n                              }}\r\n                            >\r\n                              删除\r\n                            </Button>\r\n                          </FlexLayout.Fixed>\r\n                        </FlexLayout>\r\n                      </Form.NestingFormItem>\r\n                    </Form.Item>\r\n                  );\r\n                })}\r\n                <Form.ErrorList errors={errors} />\r\n              </>\r\n            );\r\n          }}\r\n        </Form.List>\r\n      </Form>\r\n\r\n      <div>\r\n        <Button\r\n          block\r\n          onClick={() => {\r\n            form\r\n              .validateFields()\r\n              .then((values) => {\r\n                debugger;\r\n              })\r\n              .catch((err) => {\r\n                debugger;\r\n              });\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n',renderChildren:()=>m.createElement(cn,null)},{id:"FormErrorContainer",name:"FormErrorContainer",mode:"code",scope:{React:m},cardProps:{description:{title:"自定义验证信息",info:"自定义验证信息"}},type:"PlayGround",codeText:"// import { Button, Form, Input } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { Button, Form, Input } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  return (\r\n    <div>\r\n      <Form form={form}>\r\n        <Form.Item\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入姓名',\r\n            },\r\n          ]}\r\n          getErrorContainer={() => {\r\n            return document.getElementById('error');\r\n          }}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <Button\r\n        block\r\n        onClick={() => {\r\n          form.validateFields().then((values) => {});\r\n        }}\r\n      >\r\n        Submit\r\n      </Button>\r\n\r\n      <div id=\"error\" style={{ color: 'red', display: 'none' }}>\r\n        11111111111111111\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",renderChildren:()=>m.createElement(sn,null)},{id:"ValidatorRules",name:"ValidatorRules",mode:"code",scope:{React:m},cardProps:{description:{title:"结合adhere-util-browsersniff生成rules",info:"结合adhere-util-browsersniff生成rules"}},type:"PlayGround",codeText:"import PropTypes from 'prop-types';\r\nimport React, { forwardRef, useImperativeHandle } from 'react';\r\n\r\nimport { Intl, TableGridLayout } from '@baifendian/adhere';\r\nimport { Form, Input } from '@baifendian/adhere-ui-anthoc';\r\n\r\nconst { Label, Value } = TableGridLayout;\r\n\r\n/**\r\n * SaveOrUpdate\r\n * @param props\r\n * @param ref\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nfunction SaveOrUpdate(props, ref) {\r\n  const [form] = Form.useForm();\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validateAndGetValues: () => {\r\n      return form.validateFields();\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Form name=\"userForm\" form={form}>\r\n      <TableGridLayout\r\n        data={[\r\n          {\r\n            name: 'g1',\r\n            width: '100%',\r\n            columnCount: 1,\r\n            colgroup: [200, 'auto'],\r\n            data: [\r\n              {\r\n                key: 'phone',\r\n                require: true,\r\n                label: <Label>电话：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"phone\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入电话',\r\n                        },\r\n                        Form.ValidatorRules.isSIMCard({\r\n                          invalidMessage: '请输入正确的电话号码',\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入电话\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'idCard',\r\n                require: true,\r\n                label: <Label>身份证号：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"idCard\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入身份证号',\r\n                        },\r\n                        Form.ValidatorRules.isIdentityCard({\r\n                          invalidMessage: '请输入正确的身份证',\r\n                          params: ['zh-CN'],\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"身份证号\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n              {\r\n                key: 'email',\r\n                require: true,\r\n                label: <Label>邮箱：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入邮箱',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: '请输入正确的邮箱',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入邮箱\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n              // ipv4\r\n              {\r\n                key: 'ipv4',\r\n                require: true,\r\n                label: <Label>ipv4：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"ipv4\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入ipv4',\r\n                        },\r\n                        Form.ValidatorRules.isIP({\r\n                          params: [4],\r\n                          invalidMessage: '请输入正确的ipv4',\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入ipv4\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n              // ipv6\r\n              {\r\n                key: 'ipv6',\r\n                require: true,\r\n                label: <Label>ipv6：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"ipv6\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入ipv6',\r\n                        },\r\n                        Form.ValidatorRules.isIP({\r\n                          params: [6],\r\n                          invalidMessage: '请输入正确的ipv6',\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入ipv6\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n              // 版本号(SemVer)\r\n              {\r\n                key: 'SemVer',\r\n                require: true,\r\n                label: <Label>版本号(SemVer)：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"semVer\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入版本号',\r\n                        },\r\n                        Form.ValidatorRules.isSemVer({\r\n                          params: [6],\r\n                          invalidMessage: '请输入正确的版本号',\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入版本号\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n              // URL\r\n              {\r\n                key: 'URL',\r\n                require: true,\r\n                label: <Label>URL：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"URL\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入URL',\r\n                        },\r\n                        Form.ValidatorRules.isURL({\r\n                          invalidMessage: '请输入正确的URL',\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入URL\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n              // 税号\r\n              {\r\n                key: 'taxID',\r\n                require: true,\r\n                label: <Label>税号：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"taxID\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入税号',\r\n                        },\r\n                        Form.ValidatorRules.isTaxID({\r\n                          invalidMessage: '请输入正确的税号',\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入税号\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n              // 邮政编码\r\n              {\r\n                key: 'postalCode',\r\n                require: true,\r\n                label: <Label>邮政编码：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"postalCode\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入邮政编码',\r\n                        },\r\n                        Form.ValidatorRules.isPostalCode({\r\n                          params: ['CN'],\r\n                          invalidMessage: '请输入正确的邮政编码',\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入邮政编码\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n              // 护照\r\n              {\r\n                key: 'passportNumber',\r\n                require: true,\r\n                label: <Label>护照号：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"passportNumber\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入护照号',\r\n                        },\r\n                        Form.ValidatorRules.isPassportNumber({\r\n                          params: ['CN'],\r\n                          invalidMessage: '请输入正确的护照号',\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入护照号\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n              // 车牌\r\n              {\r\n                key: 'licensePlate',\r\n                require: true,\r\n                label: <Label>车牌：</Label>,\r\n                value: (\r\n                  <Value>\r\n                    <Form.Item\r\n                      name=\"licensePlate\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: '请输入车牌',\r\n                        },\r\n                        Form.ValidatorRules.isLicensePlate({\r\n                          params: ['any'],\r\n                          invalidMessage: '请输入正确的车牌',\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入车牌\" />\r\n                    </Form.Item>\r\n                  </Value>\r\n                ),\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n\r\nSaveOrUpdate.defaultProps = {\r\n  defaultData: {},\r\n};\r\n\r\nSaveOrUpdate.propTypes = {\r\n  defaultData: PropTypes.shape({}),\r\n};\r\n\r\nexport default forwardRef(SaveOrUpdate);\r\n",renderChildren:()=>m.createElement(gn,null)}]}),m.createElement(d.Wc,{title:"配合ScrollLayout使用",config:[{id:"p1",name:"配合ScrollLayout使用",mode:"code",scope:{React:m},type:"PlayGround",codeText:"",cardProps:{description:{title:"使用ScrollLayout做容器",info:"自动设置组件的getPopupContainer，浮层跟随滚动`"}},renderChildren:()=>m.createElement("div",{className:El},m.createElement(Il,{scrollY:!0},m.createElement(t.A.Group,{direction:"vertical"},m.createElement("dl",null,m.createElement("dt",null,m.createElement("p",null,"Select")),m.createElement("dd",null,m.createElement(Yt,null))),m.createElement("dl",null,m.createElement("dt",null,m.createElement("p",null,"MultipleSelect")),m.createElement("dd",null,m.createElement(Jt,null))),m.createElement("dl",null,m.createElement("dt",null,m.createElement("p",null,"TreeSelect")),m.createElement("dd",null,m.createElement(Pl,null))),m.createElement("dl",null,m.createElement("dt",null,m.createElement("p",null,"AutoComplete")),m.createElement("dd",null,m.createElement(Te,null))),m.createElement("dl",null,m.createElement("dt",null,m.createElement("p",null,"DatePicker")),m.createElement("dd",null,m.createElement(o.A,{className:Tl}))),m.createElement("dl",null,m.createElement("dt",null,m.createElement("p",null,"RangePicker")),m.createElement("dd",null,m.createElement(l.A,{className:Tl}))),m.createElement("dl",null,m.createElement("dt",null,m.createElement("p",null,"TimePicker")),m.createElement("dd",null,m.createElement(a.A,{className:Tl}))),m.createElement("dl",null,m.createElement("dt",null,m.createElement("p",null,"Cascader")),m.createElement("dd",null,m.createElement(vr,null))))))}]}),m.createElement(d.Wc,{title:"InputMultiple",config:[{id:"p1",name:"InputMultipleSelect",mode:"code",scope:{React:m},type:"PlayGround",codeText:"import React, { useState } from 'react';\r\n\r\nimport { InputMultiple } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <InputMultiple.Select\r\n        value={value}\r\n        onChange={setValue}\r\n        isCheckAll\r\n        // direction=\"vertical\"\r\n        selectProps={{\r\n          style: { width: 300 },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n",cardProps:{description:{title:"InputMultipleSelect",info:"InputMultipleSelect"}},renderChildren:()=>m.createElement("div",{className:El},m.createElement(Wn,null))},{id:"p2",name:"在form中使用InputMultipleSelect",mode:"code",scope:{React:m},type:"PlayGround",codeText:"import { Button } from 'antd';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { Form, InputMultiple } from '@baifendian/adhere-ui-anthoc';\r\n\r\nexport default () => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldValue('inputMultiple', ['111', '222']);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onFinish={(values) => {\r\n        alert(values);\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"inputMultiple\"\r\n        label=\"多关键字输入\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择多关键字',\r\n          },\r\n        ]}\r\n      >\r\n        <InputMultiple.Select\r\n          isCheckAll\r\n          selectProps={{\r\n            style: { width: 300 },\r\n          }}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button htmlType=\"submit\" block type=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n",cardProps:{description:{title:"在form中使用InputMultipleSelect",info:"在form中使用InputMultipleSelect"}},renderChildren:()=>m.createElement("div",{className:El},m.createElement(_n,null))}]}),m.createElement(d.e6,{title:"anthoc",config:[{border:!0,title:"Select（单选）、MultipleSelect（多选）",data:[{params:"showSearch",desc:"配置是否可搜索",type:"boolean",defaultVal:"true"},{params:"allowClear",desc:"支持清除",type:"boolean",defaultVal:"true"},{params:"placement",desc:"选择框弹出的位置",type:"bottomLeft bottomRight topLeft topRight",defaultVal:"bottomLeft"},{params:"filterOption",desc:"是否根据输入项进行筛选。当其为一个函数时，会接收 inputValue option 两个参数，当 option 符合筛选条件时，应返回 true，反之则返回 false",type:"boolean | function(inputValue, option)",defaultVal:"(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0"},{params:"getPopupContainer",desc:"",type:"function(triggerNode)",defaultVal:"默认浮层跟随滚动"},{params:"其他属性",desc:"参考 https://ant.design/components/select-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"TreeSelect",data:[{params:"showSearch",desc:"配置是否可搜索",type:"boolean",defaultVal:"true"},{params:"allowClear",desc:"支持清除",type:"boolean",defaultVal:"true"},{params:"placement",desc:"选择框弹出的位置",type:"bottomLeft bottomRight topLeft topRight",defaultVal:"bottomLeft"},{params:"treeNodeFilterProp",desc:"输入项过滤对应的 treeNode 属性",type:"string",defaultVal:"title"},{params:"getPopupContainer",desc:"",type:"function(triggerNode)",defaultVal:"默认浮层跟随滚动"},{params:"其他属性",desc:"参考 https://ant.design/components/tree-select-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"AutoComplete",data:[{params:"allowClear",desc:"支持清除",type:"boolean",defaultVal:"true"},{params:"filterOption",desc:"是否根据输入项进行筛选。当其为一个函数时，会接收 inputValue option 两个参数，当 option 符合筛选条件时，应返回 true，反之则返回 false",type:"boolean | function(inputValue, option)",defaultVal:"(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0"},{params:"getPopupContainer",desc:"",type:"function(triggerNode)",defaultVal:"默认浮层跟随滚动"},{params:"其他属性",desc:"参考 https://ant.design/components/auto-complete-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"DatePicker、RangePicker、TimePicker",data:[{params:"allowClear",desc:"支持清除",type:"boolean",defaultVal:"true"},{params:"placement",desc:"选择框弹出的位置",type:"bottomLeft bottomRight topLeft topRight",defaultVal:"bottomLeft"},{params:"getPopupContainer",desc:"",type:"function(triggerNode)",defaultVal:"默认浮层跟随滚动"},{params:"其他属性",desc:"参考 https://ant.design/components/date-picker-cn#api、https://ant.design/components/time-picker-cn",type:"-",defaultVal:"-"}]},{border:!0,title:"Cascader",data:[{params:"showSearch",desc:"配置是否可搜索",type:"boolean",defaultVal:"{\n                  filter: (inputValue, path) =>\n                    path.some((option) => option.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1),\n                },"},{params:"allowClear",desc:"支持清除",type:"boolean",defaultVal:"true"},{params:"placement",desc:"选择框弹出的位置",type:"bottomLeft bottomRight topLeft topRight",defaultVal:"bottomLeft"},{params:"getPopupContainer",desc:"",type:"function(triggerNode)",defaultVal:"默认浮层跟随滚动"},{params:"其他属性",desc:"参考 https://ant.design/components/cascader-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"Upload",data:[{params:"name",desc:"发到后台的文件参数名",type:"string",defaultVal:"file"},{params:"withCredentials",desc:"上传请求时是否携带 cookie",type:"boolean",defaultVal:"true"},{params:"其他属性",desc:"参考 https://ant.design/components/upload-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"Modal",data:[{params:"closable",desc:"是否显示右上角的关闭按钮",type:"boolean",defaultVal:"true"},{params:"centered",desc:"垂直居中展示 Modal",type:"boolean",defaultVal:"true"},{params:"maskClosable",desc:"点击蒙层是否允许关闭",type:"boolean",defaultVal:"true"},{params:"destroyOnClose",desc:"关闭时销毁 Modal 里的子元素",type:"boolean",defaultVal:"true"},{params:"zIndex",desc:"设置 Modal 的 z-index",type:"number",defaultVal:"Resource.Dict.value.ResourceNormalMaxZIndex.value"},{params:"其他属性",desc:"参考 https://ant.design/components/modal-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"Input、TextArea",data:[{params:"allowClear",desc:"可以点击清除图标删除内容",type:"boolean | { clearIcon: ReactNode }",defaultVal:"true"},{params:"maxLength",desc:"最大长度",type:"number",defaultVal:"1000"},{params:"showCount",desc:"是否展示字数",type:"boolean | { formatter: (info: { value: string, count: number, maxLength?: number }) => ReactNode }",defaultVal:"true"},{params:"autoSize（适用于TextArea）",desc:"自适应内容高度，可设置为 true | false 或对象：{ minRows: 2, maxRows: 6 }",type:"boolean | object",defaultVal:"false"},{params:"其他属性",desc:"参考 https://ant.design/components/input-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"InputNumberDecimal1（1位小数）、InputNumberDecimal2（2位小数）、InputNumberInteger（整数）",data:[{params:"precision",desc:"数值精度，配置 formatter 时会以 formatter 为准",type:"number",defaultVal:"InputNumberDecimal1 = 1、 InputNumberDecimal2 = 2、 InputNumberInteger = 0"},{params:"其他属性",desc:"参考 https://ant.design/components/input-number-cn#api",type:"-",defaultVal:"-"}]},{border:!0,title:"SubmitButton（默认点击显示loading,通过onClick事件返回promise来取消loading）",data:[{params:"其他属性",desc:"参考 https://ant.design/components/button-cn#api",type:"-",defaultVal:"-"}]}]}))},84792:(e,r,n)=>{n.d(r,{A:()=>t});const t=n(24902).A},61444:(e,r,n)=>{n.d(r,{A:()=>t});const t=n(6940).A},32517:(e,r,n)=>{n.d(r,{A:()=>t});const t=n(2382).A},38948:e=>{e.exports=JSON.parse('{"rE":"2.11.0","Jk":{"O":"https://github.com/playerljc/adhere"}}')}}]);